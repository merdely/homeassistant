- sensor:
    name: Picture Frame Status
    unique_id: picture_frame_status
    command: "/config/bin/picframe_status.sh"
    value_template: "{{ value_json.status }}"
    scan_interval: 60

- sensor:
    name: Installed Add-ons
    unique_id: installed_add_ons
    command: "/config/bin/get_addons"
    value_template: "{{ value_json.count }}"
    json_attributes:
      - list

- binary_sensor:
    name: Earth Nginx/PHP Working
    unique_id: earth_nginx_php_working
    command: "curl -m 2 -s https://earth.erdely.in/phptest.php | grep '^PHP is working!' || echo 'PHP is not working!'"
    #device_class: connectivity
    payload_on: "PHP is working!"
    payload_off: "PHP is not working!"

- binary_sensor:
    name: Nginx Proxy Manager Working
    unique_id: nginx_proxy_manager_working
    command: "curl -s -f -m 2 -w %{http_code} -o /dev/null https://npm.erdely.in | grep '^200$' || echo 1"
    #device_class: connectivity
    payload_on: "200"
    payload_off: "1"

#- binary_sensor:
#    name: OctoPrint Camera Status
#    unique_id: octoprint_camera_status
#      #command: '/usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant ha@carpo.erdely.in camera_status'
#    command: '/bin/echo "Camera is off"'
#    payload_on: 'Camera is streaming'
#    payload_off: 'Camera is off'

- binary_sensor:
    name: Bitwarden Add-On Running
    unique_id: bitwarden_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state a0d7b954_bitwarden'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: Frigate Add-On Running
    unique_id: frigate_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state ccab4aaf_frigate'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: MQTT Add-On Running
    unique_id: mqtt_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state core_mosquitto'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: NginxProxyMgr Add-On Running
    unique_id: nginxproxymgr_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state a0d7b954_nginxproxymanager'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: Signal Add-On Running
    unique_id: signal_add_on_running
    device_class: running
    #command: '/config/bin/check_signal_addon'
    command: '/config/bin/check_addon_state 1315902c_signal_messenger'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: SSH Add-On Running
    unique_id: ssh_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state a0d7b954_ssh'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: Unifi Add-On Running
    unique_id: unifi_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state a0d7b954_unifi'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: Zigbee2MQTT Add-On Running
    unique_id: zigbee2mqtt_add_on_running
    device_class: running
    command: '/config/bin/check_addon_state 45df7312_zigbee2mqtt'
    payload_on: 'on'
    payload_off: 'off'

#- binary_sensor:
#    name: Garage Door Cam Status
#    device_class: garage_door
#    command: '/config/bin/get_garage_door_state'
#    payload_on: 'on'
#    payload_off: 'off'
#    scan_interval: 15

- binary_sensor:
    name: New SSL Cert Available
    unique_id: new_ssl_cert_available
    command: '/config/bin/check_ssl_renewed'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: New NPM SSL Cert Available
    unique_id: new_npm_ssl_cert_available
    command: '/config/bin/check_ssl_renewed_npm'
    payload_on: 'on'
    payload_off: 'off'

- binary_sensor:
    name: Christmas Lights Should Be On
    unique_id: christmas_lights_should_be_on
    command: '/config/bin/xmas_lights'
    payload_on: 'on'
    payload_off: 'off'

- sensor:
    name: CPU Temperature
    unique_id: cpu_temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "Â°C"
    value_template: "{{ value | multiply(0.001) | round(2)  }}"

- sensor:
    name: Unifi AP Versions
    unique_id: unifi_ap_versions
    command: "/config/bin/get_unifi_versions"
    json_attributes:
      - data
      - error
    value_template: "{{ value_json.last_updated }}"
    scan_interval: 3600  # 1 hour

- sensor:
    name: OpnSense Versions
    unique_id: opnsense_versions
    command: "/config/bin/opnsense_snmp_versions.py"
    json_attributes:
      - core-abi
      - sys-abi
      - opnsense-update
      - plugins
    value_template: "{{ value_json.opnsense }}"
    scan_interval: 3600  # 1 hour

- sensor:
    name: OpnSense Package Versions
    unique_id: opnsense_package_versions
    command: "/config/bin/opnsense_packages.sh"  # {{ state_attr('sensor.opnsense_versions', 'sys-abi') }} {{ state_attr('sensor.opnsense_versions', 'core-abi') }}"
    json_attributes:
      - timestamp
      - status
      - plugins
    value_template: "{{ value_json.timestamp }}"
    scan_interval: 14400  # 4 hours

- sensor:
    name: OpnSense Core ABI Version Latest
    unique_id: opnsense_core_abi_version_latest
    command: /config/bin/opnsense_get_abi.py
    scan_interval: 3600
      # curl -s "https://opnsense.org/download/" | awk -F"'" '/data-version\s*=\s*/{print $2}'
      # curl -s "https://opnsense.org/download/" | awk -F'"' '/var version\s+=/{print $2}'

- sensor:
    name: Jellyfin Sessions
    unique_id: jellyfin_sessions
    icon: mdi:television-play
    command: "/config/bin/jellyfin_sessions"
    json_attributes:
      - sessions
    value_template: "{{ value_json.count }}"

#- sensor:
#    name: Dynamic DNS
#    command: "/config/bin/update_ip.sh"
#    json_attributes:
#      - public_ip
#      - dns_record
#      - dynamic_hostname
#      - status
#      - updated_at
#    value_template: "{{ value_json.public_ip }}"
#    scan_interval: 900  # 15 minutes
#    command_timeout: 30 # seconds

- sensor:
    name: MoCo Recycle Day
    #command: bin/get_recycle_day.py
    command: bin/get_recycle_day
    unique_id: moco_recycle_day
    # Request every 8 hours
    scan_interval: 28800
    value_template: "{{ value_json.recycle_day }}"
    json_attributes:
      - recycle_day
      - default_day
      - county_day
      - holiday_day
      - exception_day
      - recycle_day_num
      - recycle_date
      - recycle_days
      - days_string
      - is_holiday
      - has_exception
      - address
      - county_address
      - county_code
      - holidays_code
      - exception_code

- sensor:
    name: Fully Kiosk Browser Version Latest
    unique_id: fully_kiosk_browser_version_latest
    command: bin/get_fkb_version
    scan_interval: 3600

- sensor:
    name: SSL Expiry Date
    unique_id: ssl_expiry_date
    command: "bin/get_ssl_expire.py"

- switch:
    unique_id: mercury_screensaver
    name: Mercury Screensaver
    #command_on: '/bin/true'
    #command_off: '/bin/true'
    #command_state: '/bin/true'
    command_on: '/usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant mike@mercury.erdely.in screensaver_lock'
    command_off: '/usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant mike@mercury.erdely.in screensaver_unlock'
    command_state: '/usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant mike@mercury.erdely.in screensaver_status'
    value_template: '{{ value == "Screensaver is running" }}'
    # command_off: '/bin/false'

- switch:
    unique_id: venus_screensaver
    name: Venus Screensaver
    command_on: '/bin/ping -c2 venus.erdely.in > /dev/null && /usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant holly@venus.erdely.in screensaver_lock || /usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant holly@venus-wired.erdely.in screensaver_lock'
    command_off: '/bin/true'
    command_state: '/bin/ping -c2 venus.erdely.in > /dev/null && /usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant holly@venus.erdely.in screensaver_status || /usr/bin/ssh -a -o UserKnownHostsFile=/config/.ssh/known_hosts -i /config/.ssh/homeassistant holly@venus-wired.erdely.in screensaver_status'
    value_template: '{{ value == "Screensaver is running" }}'

