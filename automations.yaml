- id: '1600366629972'
  alias: Lighting - Family Room Lights Off
  description: ''
  triggers:
  - entity_id: light.god_damn_light
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - target:
      entity_id:
      - light.fireplace_light
      - light.three_headed_lamp
      - light.god_damn_light
    action: homeassistant.turn_off
    data: {}
  mode: single
- id: '1600528857994'
  alias: Lighting - Outside - Garage Arrival at Night
  description: ''
  trigger:
  - platform: state
    entity_id: cover.garage_door
    to: open
  condition:
  - condition: sun
    before: sunrise
    after: sunset
  action:
  - service: homeassistant.turn_on
    target:
      entity_id:
      - light.front_porch_light
      - light.foyer_light
  mode: single
- id: '1600528964920'
  alias: Lighting - Sunset Lights On
  description: ''
  triggers:
  - event: sunset
    offset: -00:15:00
    trigger: sun
  conditions:
  - condition: template
    value_template: '{{ as_timestamp(states("sensor.date_time_iso"), 0) | timestamp_custom("%m-%d",
      True, "Unavailable")  != "10-31" }}'
  actions:
  - alias: If LR Near Black Blub hasn't been seen in 12 hours, turn it on
    if:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(state_attr(''light.near_black_bulb'',
        ''last_seen''))) > (60 * 60 * 24 / 2) }}'
    then:
    - data:
        qos: '0'
        topic: zigbee2mqtt/bridge/request/permit_join
        payload: '{"value": true, "time": 30}'
      alias: Enable Zigbee2MQTT Permit Join for 30 seconds
      action: mqtt.publish
    - metadata: {}
      data: {}
      target:
        entity_id: light.near_black_lamp
      action: light.turn_on
    - metadata: {}
      data: {}
      target:
        entity_id: input_boolean.automatic_living_room_light
      action: homeassistant.turn_on
    enabled: false
  - alias: Turn on Outside Lights and/or Outside Christmas Lights
    if:
    - condition: state
      entity_id: input_boolean.christmas_lights_are_out
      state: 'on'
    then:
    - target:
        entity_id:
        - switch.outside_christmas_lights
        - light.front_porch_light
      data: {}
      action: homeassistant.turn_on
    - data: {}
      target:
        entity_id: scene.front_porch_christmas
      action: scene.turn_on
    - target:
        entity_id: scene.back_porch_christmas
      metadata: {}
      action: scene.turn_on
      data: {}
    else:
    - target:
        entity_id:
        - light.front_porch_light
        - light.outside_garage_lights
      data: {}
      action: homeassistant.turn_on
    - data: {}
      target:
        entity_id: scene.front_porch_normal
      action: scene.turn_on
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: group.holly_mike
        state: home
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: light.kitchen_table_light
      action: light.turn_on
    alias: Turn on Kitchen Table Light if Holly & Mike are not home
  - target:
      entity_id: light.dining_room_christmas_lights
    data: {}
    action: homeassistant.turn_on
  mode: single
- id: '1600529040720'
  alias: Lighting - Sunset Lights Off at Night
  description: ''
  trigger:
  - platform: time
    at: input_datetime.turn_off_sunset_lights
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - light.front_porch_light
      - light.outside_garage_lights
      - switch.outside_christmas_lights
      - light.dining_room_christmas_lights
      - light.near_black_lamp
    data: {}
  mode: single
- id: '1602628290703'
  alias: Lighting - Laundry Room - Motion Light On
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.laundry_room_motion_sensor_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.laundry_room_light
    state: 'off'
    for: 00:01:00
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
    - condition: state
      entity_id: light.hallway_light
      state: 'on'
    - condition: state
      entity_id: light.kitchen_table_light
      state: 'on'
    - condition: state
      entity_id: light.kitchen_overhead_light
      state: 'on'
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/laundry_room_light/backlog
      payload: SetOption73 1; Delay 30; SetOption73 0
  - service: homeassistant.turn_on
    target:
      entity_id: light.laundry_room_light
    data: {}
  mode: single
- id: '1602628563183'
  alias: Lighting - Laundry Room - Motion Light Off
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.laundry_room_motion_sensor_occupancy
    to: 'off'
    for: 00:30:00
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: light.laundry_room_light
  mode: single
- id: '1602683085874'
  alias: Notifications - Battery Low Notification
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  condition:
  - condition: state
    entity_id: sensor.low_battery
    state: 'On'
  action:
  - service: notify.gmail_to_mike
    data:
      title: Low Battery
      message: '{{ state_attr(''sensor.low_battery'', ''entity_list'') }}'
  mode: single
- id: '1602886827817'
  alias: Lighting - Shed - Shed Light Toggle
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:15:8d:00:02:83:c5:c8
      command: double
  - platform: device
    domain: mqtt
    device_id: 8b32a51920b7a78f8166618d7a13e87d
    type: action
    subtype: double
    discovery_id: 0x00158d000283c5c8 action_double
  condition: []
  action:
  - service: homeassistant.toggle
    data: {}
    entity_id: light.shed_lamp
  mode: single
- id: '1602887078304'
  alias: Lighting - Shed - Flood Light Toggle
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:15:8d:00:02:83:c5:c8
      command: single
  - platform: device
    domain: mqtt
    device_id: 8b32a51920b7a78f8166618d7a13e87d
    type: action
    subtype: single
    discovery_id: 0x00158d000283c5c8 action_single
  condition: []
  action:
  - service: homeassistant.toggle
    data: {}
    entity_id: light.flood_light
  mode: single
- id: '1602887137225'
  alias: Lighting - Shed - Shed/Flood Light Toggle
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:15:8d:00:02:83:c5:c8
      command: hold
  - platform: device
    domain: mqtt
    device_id: 8b32a51920b7a78f8166618d7a13e87d
    type: action
    subtype: hold
    discovery_id: 0x00158d000283c5c8 action_hold
  condition: []
  action:
  - service: switch.toggle
    data: {}
    entity_id: light.flood_light, light.shed_lamp
  mode: single
- id: '1602952724393'
  alias: Notifications - 0 - Water Leak Detected - Water Heater
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.water_heater_water_leak_sensor_water_leak
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - data:
      speaker: all_speakers
      entity_id: media_player.all_speakers
    action: script.function_speakers_prep
  - data:
      media_content_id: /local/sounds/water_leak.mp3
      media_content_type: music
    target:
      entity_id: media_player.all_speakers
    action: media_player.play_media
  - data:
      message: Water leak detected on {{ trigger.to_state.name }}
    action: notify.signal_security
  - data:
      speaker: all_speakers
      entity_id: media_player.all_speakers
    action: script.function_speakers_restore
  - data:
      topic: cmnd/siren/backlog
      payload: TuyaSend4 102,15; TuyaSend2 103,10
    action: mqtt.publish
  - target:
      entity_id: switch.siren
    action: homeassistant.turn_on
    data: {}
  mode: single
- id: '1603064762451'
  alias: Lighting - Office - Motion Light On
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id: binary_sensor.office_door_motion_sensor_occupancy
  - platform: state
    entity_id: binary_sensor.wyzesense_778e716f
    to: 'on'
  condition:
  - condition: state
    entity_id: light.office_fan_light
    state: 'off'
    for: 00:01:00
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: light.office_fan_light
  mode: single
- id: '1603115550660'
  alias: Lighting - Office - Motion Light Off
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.wyzesense_778e716f
    to: 'off'
    for:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - platform: state
    entity_id: binary_sensor.office_door_motion_sensor_occupancy
    to: 'off'
    for:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.office_door_motion_sensor_occupancy
    state: 'off'
    for:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: state
    entity_id: binary_sensor.wyzesense_778e716f
    state: 'off'
    for:
      hours: 2
      minutes: 0
      seconds: 0
      milliseconds: 0
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: light.office_fan_light
  mode: single
- id: '1603148838343'
  alias: 00 - Home Assistant - Startup
  description: ''
  triggers:
  - event: start
    trigger: homeassistant
  conditions: []
  actions:
  - data: {}
    action: shell_command.rm_newshows_flag
  - data_template:
      command: convert
      package: imagemagick
    action: shell_command.install_apk
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - data: {}
    action: script.fix_in_bed_sensors
  - data: {}
    enabled: true
    action: script.0000000mwe
  - data: {}
    target:
      entity_id:
      - sensor.opnsense_package_versions
      - sensor.opnsense_versions
      - sensor.unifi_ap_versions
      - light.god_damn_switch
      - light.kitchen_overhead_light
      - light.hallway_light
      - sensor.unavailable_entities
    action: homeassistant.update_entity
  - data: {}
    target:
      label_id: startup
    action: homeassistant.turn_on
  - data: {}
    target:
      entity_id:
      - switch.carpo_plug
      - switch.ymir_plug
    enabled: false
    action: homeassistant.turn_on
  mode: single
- id: '1603391662402'
  alias: Security - 40 Armed - Disarm Security System in the morning when someone
    gets out of bed
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bed_sensor_holly
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: state
    entity_id: binary_sensor.bed_sensor_mike
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: time
    before: input_datetime.automatic_security_disarm
    after: '22:00:00'
  action:
  - service: script.security_disarm_system
    data: {}
  - condition: state
    entity_id: binary_sensor.christmas_tree_available
    state: 'on'
  - condition: state
    entity_id: input_boolean.christmas_tree_is_up
    state: 'on'
  - service: homeassistant.turn_on
    target:
      entity_id: switch.christmas_tree
    data: {}
  mode: single
- id: '1603407121485'
  alias: Notifications - Laundry Room Washer Started
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.laundry_room_outlet_energy_power
    above: '2'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition:
  - condition: state
    entity_id: input_boolean.laundry_room_washer_running
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.laundry_room_washer_running
  mode: single
- id: '1603407289385'
  alias: Notifications - Laundry Room Washer Stopped
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.laundry_room_outlet_energy_power
    below: '3'
    for: 00:03:00
  condition:
  - condition: state
    entity_id: input_boolean.laundry_room_washer_running
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.laundry_room_washer_running
  - service: notify.signal_security
    data:
      message: The washing machine is done
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_holly
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bed_sensor_mike
        state: 'off'
    then:
    - service: tts.cloud_say
      data:
        entity_id: media_player.security_speakers
        message: The washing machine is done
  mode: single
- id: '1604378332593'
  alias: Security - 90 Triggered - Alert of Always Monitored Door Open (Always)
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shed_door_contact
    - binary_sensor.shed_gate_contact
    - binary_sensor.chimney_gate_contact
    for:
      hours: 0
      minutes: 0
      seconds: 10
    from: 'off'
    to: 'on'
    trigger: state
  - entity_id:
    - binary_sensor.shed_door_contact
    - binary_sensor.shed_gate_contact
    - binary_sensor.chimney_gate_contact
    for:
      hours: 0
      minutes: 0
      seconds: 10
    from: 'on'
    to: 'off'
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.gate_notifications
    state: 'on'
  actions:
  - data:
      message: '{{ trigger.to_state.attributes.friendly_name }} is {%- if trigger.to_state.state
        == ''off'' %} closed{%- else %} open{% endif %}.'
    action: notify.signal_security
  - data:
      entity_id: media_player.security_speakers
      message: '{{ trigger.to_state.attributes.friendly_name }} is {%- if     trigger.to_state.state
        == ''off'' %} closed{%- else %} open{% endif %}.'
    action: tts.cloud_say
  mode: single
- id: '1604420272678'
  alias: Security - 20 Disarmed - Security System Disarmed
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: disarmed
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: switch.siren
    data: {}
  - service: rest_command.fkb_command
    data:
      command_string: cmd=loadStartUrl
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: switch.petcam_plug
  mode: single
- id: '1604422426174'
  alias: Security - 90 Triggered - Alert of Exterior Doors (Away)
  description: ''
  trigger:
  - platform: state
    entity_id: group.exterior_security_devices
    to: 'on'
    for: 00:00:01
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: notify.signal_security
    data:
      message: "{%- set ns = namespace(count = 0) -%} {%- set ns.open_entities = []
        -%} {%- for entity_id in states.group.exterior_security_devices.attributes.entity_id
        -%}\n  {%- set domain, device = entity_id.split('.') -%}\n  {%- if states[domain][device].state
        != 'off' and states[domain][device].state != 'closed' -%}\n    {%- set ns.open_entities
        = ns.open_entities + [state_attr(entity_id,\"friendly_name\")] -%}\n  {%-
        endif -%}\n{%- endfor -%} {%- for open_entity in ns.open_entities -%}\n  {{
        open_entity }}\n  {%- set ns.count = ns.count + 1 -%}\n  {%- if ns.open_entities
        | length > 2 and ns.count < ns.open_entities | length %}, {% endif %}\n  {%-
        if ns.count == ns.open_entities | length - 1 %} and {% endif -%}\n{%- endfor
        -%} {% if ns.count == 1 %} is{% endif %} {% if ns.count > 1 %} are{% endif
        %} {%- if ns.count > 0 %}open{% else %}No devices are open{% endif %}"
  mode: single
- id: '1604422951001'
  alias: Security - 90 Triggered - Start Siren
  description: ''
  triggers:
  - entity_id: alarm_control_panel.home_alarm
    to: triggered
    trigger: state
  conditions: []
  actions:
  - data: {}
    action: script.security_message_open_security_devices
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: sensor.fully_kiosk_browser
        attribute: currentPageUrl
        state: https://ha.erdely.in:38123/control-panel/security
    then:
    - action: rest_command.fkb_command
      data:
        command_string: cmd=loadUrl&url=https://ha.erdely.in:38123/control-panel/security
    alias: Redirect to Security Panel if not already there
  - data:
      speaker: all_speakers
    action: script.function_speakers_prep
  - data:
      message: '{{ states(''input_text.security_message'') }}

        '
    action: notify.signal_security
  - data:
      media_content_id: /local/sounds/security_trigger.mp3
      media_content_type: music
    target:
      entity_id: media_player.all_speakers
    action: media_player.play_media
  - data:
      speaker: all_speakers
    action: script.function_speakers_restore
  - repeat:
      while:
      - condition: state
        entity_id: alarm_control_panel.home_alarm
        state: triggered
      sequence:
      - data:
          topic: cmnd/siren/backlog
          payload: TuyaSend4 102,14; TuyaSend2 103,59
        action: mqtt.publish
      - target:
          entity_id: switch.siren
        action: homeassistant.turn_on
        data: {}
      - delay: '60'
  mode: single
- id: '1604856519122'
  alias: Notifications - Laundry Room Dryer Started
  description: ''
  trigger:
  - platform: numeric_state
    for: 00:02:00
    entity_id: sensor.dryer_monitor_analog_ctenergy_power
    above: '750'
  condition:
  - condition: state
    entity_id: input_boolean.laundry_room_dryer_running
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.laundry_room_dryer_running
  mode: single
- id: '1604856580927'
  alias: Notifications - Laundry Room Dryer Stopped
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.dryer_monitor_analog_ctenergy_power
    for: 00:01:00
    below: '500'
  condition:
  - condition: state
    entity_id: input_boolean.laundry_room_dryer_running
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.laundry_room_dryer_running
  - service: notify.signal_security
    data:
      message: The dryer is done
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_holly
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bed_sensor_mike
        state: 'off'
    then:
    - service: tts.cloud_say
      data:
        entity_id: media_player.security_speakers
        message: The dryer is done
  mode: single
- id: '1605633972450'
  alias: Security - 40 Armed - Re-enable Gate Notifications
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    from: disarmed
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.gate_notifications
  mode: single
- id: '1606763802325'
  alias: Security - 30 Arming - Announcement (45 seconds to exit)
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: arming
    from: disarmed
  condition:
  - condition: state
    entity_id: binary_sensor.security_devices
    state: 'off'
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: switch.petcam_plug
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=100
  - service: rest_command.fkb_command
    data:
      command_string: cmd=playSound&stream=1&url=file:///sdcard/security_sounds/45_seconds_to_exit.mp3
  - delay: '10'
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=60
  mode: single
- id: '1606764059402'
  alias: Security - 30 Arming - Announcement (Cannot Arm)
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: arming
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: armed_home
    from: disarmed
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: template
        value_template: "{{ expand(\"binary_sensor.interior_doors_and_windows\") |
          selectattr('state', 'eq', 'on') |\n      list | count > 0 }}"
      - condition: time
        before: input_datetime.automatic_security_disarm
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
        after: input_datetime.ignore_bedroom_slider
    - condition: and
      conditions:
      - condition: template
        value_template: "{{ expand(\"binary_sensor.interior_doors_and_windows\") |
          rejectattr('entity_id', 'eq', 'binary_sensor.bedroom_slider_contact')\n
          \     | selectattr('state', 'eq', 'on') | list | count > 0 }}"
      - condition: time
        after: input_datetime.automatic_security_disarm
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
        before: input_datetime.ignore_bedroom_slider
  action:
  - service: script.security_disarm_system
    data: {}
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=100
  - service: rest_command.fkb_command
    data:
      command_string: cmd=loadUrl&url=https://ha.erdely.in:38123/control-panel/security
  - service: rest_command.fkb_command
    data:
      command_string: cmd=playSound&stream=1&url=file:///sdcard/security_sounds/cannot_arm.mp3
  - delay: '10'
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=60
  mode: single
- id: '1606765482798'
  alias: Security - 80 Pending - Alarm Pending (45 seconds to Disarm)
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    to: pending
  condition: []
  action:
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=100
  - service: rest_command.fkb_command
    data:
      command_string: cmd=loadUrl&url=https://ha.erdely.in:38123/control-panel/security
  - delay: '5'
  - service: rest_command.fkb_command
    entity_id: media_player.all_speakers
    data:
      command_string: cmd=playSound&stream=1&url=file:///sdcard/security_sounds/45_seconds_to_enter_code.mp3
  - delay: '10'
  - service: rest_command.fkb_command
    data:
      command_string: cmd=setAudioVolume&level=60
  - service: input_text.set_value
    data:
      value: "{%- set ns = namespace(count = 0) %} {%- for entity_id in states.binary_sensor.interior_doors_and_windows.attributes.entity_id
        %}\n  {%- set domain, device = entity_id.split('.') %}\n  {%- if states[domain][device].state
        == 'on' -%}\n    {%- set ns.count = ns.count + 1 -%}\n    {%- if ns.count
        > 1 %} and {% endif -%}\n    {{ state_attr(entity_id,\"friendly_name\") }}\n
        \ {%- endif %}\n{%- endfor %} {%- if not is_state('cover.garage_door', 'closed')
        -%}\n  {%- set ns.count = ns.count + 1 -%}\n  {%- if ns.count > 1 %} and {%
        endif -%}\n  Garage Door\n{%- endif %} {%- if ns.count == 0 %} No doors or
        windows are {%- elif ns.count > 1 %} are{% else %} is{% endif %} Open\n"
    entity_id: input_text.security_message
  mode: single
- id: '1606772769370'
  alias: Security - 60 Tripped - Trigger Alarm Home
  description: ''
  trigger:
  - platform: template
    value_template: '{{ expand("group.security_devices") | selectattr(''state'', ''eq'',
      ''on'') | list | count > 0 }}'
    for: 00:00:01
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_home
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.entity_id == "binary_sensor.bedroom_slider_contact"
          }}'
      - condition: time
        before: input_datetime.automatic_security_disarm
        weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
        after: input_datetime.ignore_bedroom_slider
      alias: Is Bedroom Slider
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ trigger.entity_id != "binary_sensor.bedroom_slider_contact"
          }}'
      alias: Is NOT Bedroom Slider
    alias: Handle Bedroom Slider
  action:
  - service: alarm_control_panel.alarm_trigger
    data: {}
    entity_id: alarm_control_panel.home_alarm
  - service: system_log.write
    data:
      message: entity_id = {{ trigger.entity_id }} ; now = {{ now() }} ; ignore =
        {{ today_at(states("input_datetime.ignore_bedroom_slider")) }} ; disarm =
        {{ today_at(states("input_datetime.automatic_security_disarm")) }}
    enabled: false
  trace:
    stored_traces: 50
  mode: single
- id: '1606776219305'
  alias: Security - 40 Armed - Set Control Panel to Alarm Panel
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
    from: disarmed
  condition: []
  action:
  - service: rest_command.fkb_command
    data:
      command_string: cmd=loadUrl&url=https://ha.erdely.in:38123/control-panel/security
  mode: single
- id: '1606776305027'
  alias: Security - 60 Tripped - Trigger Alarm Away
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.interior_doors_and_windows
    to: 'on'
    for: 00:00:01
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: armed_away
  action:
  - service: alarm_control_panel.alarm_trigger
    data: {}
    entity_id: alarm_control_panel.home_alarm
  mode: single
- id: '1606835846142'
  alias: Security - 10 All - Update alarm.state File
  description: ''
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home_alarm
  condition: []
  action:
  - service: notify.send_message
    target:
      entity_id: notify.alarm_state_file
    data:
      message: '{{ states(''alarm_control_panel.home_alarm'') }}'
  mode: single
- id: '1607035454754'
  alias: Lighting - Office - Mike Desk Lamp Toggle
  description: ''
  trigger:
  - platform: mqtt
    topic: stat/mike_desk_lamp_button/POWER
  condition: []
  action:
  - data: {}
    action: homeassistant.toggle
    target:
      device_id: 1434b5d8800ec4d9099a4c3d4bf336f7
  mode: single
- id: '1607035951583'
  alias: Lighting - Living Room Lights Off
  description: ''
  trigger:
  - platform: state
    entity_id: light.near_black_lamp
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - light.far_black_lamp
      - light.white_lamp
  mode: single
- id: '1607093471372'
  alias: Notifications - Presence - Holly
  description: ''
  triggers:
  - entity_id: person.holly_erdely
    from: not_home
    for: 00:01:00
    trigger: state
  - entity_id: person.holly_erdely
    to: not_home
    trigger: state
  conditions:
  - condition: time
    after: input_datetime.holly_presence_notifications_on
    before: input_datetime.holly_presence_notifications_off
  - condition: state
    entity_id: person.michael_erdely
    state: home
  - condition: state
    entity_id: input_boolean.announce_holly_presence
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: person.holly_erdely
      state: not_home
    then:
    - data:
        entity_id: media_player.security_speakers
        message: Holly has left {{ trigger.from_state.state }}
      action: tts.cloud_say
    - data:
        message: Holly has left {{ trigger.from_state.state }}
        title: Holly has left {{ trigger.from_state.state }}
      enabled: false
      action: notify.gmail_to_mike
    else:
    - data:
        entity_id: media_player.security_speakers
        message: Holly is at {{ states('person.holly_erdely') }}
      action: tts.cloud_say
    - data:
        title: Holly is at {{ states('person.holly_erdely') }}
        message: Holly is at {{ states('person.holly_erdely') }}
      enabled: false
      action: notify.gmail_to_mike
  mode: single
- id: '1607095172887'
  alias: Notifications - Presence - Mike
  description: ''
  triggers:
  - entity_id: person.michael_erdely
    from: not_home
    for: 00:01:00
    trigger: state
  - entity_id: person.michael_erdely
    to: not_home
    trigger: state
  conditions:
  - condition: time
    after: input_datetime.mike_presence_notifications_on
    before: input_datetime.mike_presence_notifications_off
  - condition: state
    entity_id: person.holly_erdely
    state: home
  - condition: state
    entity_id: input_boolean.announce_mike_presence
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: person.michael_erdely
      state: not_home
    then:
    - data:
        entity_id: media_player.security_speakers
        message: Mike has left {{ trigger.from_state.state }}
      action: tts.cloud_say
    else:
    - data:
        entity_id: media_player.security_speakers
        message: Mike is at {{ states("person.michael_erdely") }}
      action: tts.cloud_say
  mode: single
- id: '1607118334187'
  alias: TV - Family Room - Change Input
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.god_damn_input
    from: Select Input
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: switch.god_damn_tv
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.god_damn_input
        state: Tivo
      sequence:
      - service: script.function_tv_change_input
        data:
          tv: god_damn
          input: tivo
    - conditions:
      - condition: state
        entity_id: input_select.god_damn_input
        state: Chromecast
      sequence:
      - service: script.function_tv_change_input
        data:
          tv: god_damn
          input: chromecast
    - conditions:
      - condition: state
        entity_id: input_select.god_damn_input
        state: Playstation
      sequence:
      - service: script.function_tv_change_input
        data:
          tv: god_damn
          input: playstation
    - conditions:
      - condition: state
        entity_id: input_select.god_damn_input
        state: Wii
      sequence:
      - service: script.function_tv_change_input
        data:
          tv: god_damn
          input: wii
    default:
    - service: script.function_tv_change_input
      data:
        tv: god_damn
        input: roku
    - choose:
      - conditions:
        - condition: state
          entity_id: input_select.god_damn_input
          state: Cameras
        sequence:
        - service: script.function_tv_roku_choose_camera
          data:
            roku: god_damn
            camera: split
      - conditions:
        - condition: state
          entity_id: input_select.god_damn_input
          state: Front Door Camera
        sequence:
        - service: script.function_tv_roku_choose_camera
          data:
            roku: god_damn
            camera: front_door
      - conditions:
        - condition: state
          entity_id: input_select.god_damn_input
          state: Garage Camera
        sequence:
        - service: script.function_tv_roku_choose_camera
          data:
            roku: god_damn
            camera: garage
      - conditions:
        - condition: state
          entity_id: input_select.god_damn_input
          state: Chimney Camera
        sequence:
        - service: script.function_tv_roku_choose_camera
          data:
            roku: god_damn
            camera: chimney
      - conditions:
        - condition: state
          entity_id: input_select.god_damn_input
          state: Shed Camera
        sequence:
        - service: script.function_tv_roku_choose_camera
          data:
            roku: god_damn
            camera: shed
      default: []
  - service: input_select.select_option
    data:
      option: Select Input
    entity_id: input_select.god_damn_input
  mode: single
- id: '1607188975863'
  alias: TV - Change Roku Plex Show
  description: ''
  triggers:
  - entity_id:
    - input_select.office_plex_show
    - input_select.bedroom_plex_show
    - input_select.living_room_plex_show
    - input_select.god_damn_plex_show
    trigger: state
  conditions:
  - condition: template
    value_template: '{{ states(trigger.entity_id) != ''Select Show'' }}'
  actions:
  - data:
      message: Starting "{{ states(trigger.entity_id) }}" on {{ trigger.entity_id
        | regex_findall_index(find='input_select\.(.*)_plex_show', index=0, ignorecase=False)
        | replace('_', '-') | title }} Roku triggered by {{ trigger.entity_id }}
      level: error
    action: system_log.write
    enabled: true
  - target:
      entity_id: switch.{{ trigger.entity_id | regex_findall_index(find='input_select\.(.*)_plex_show',
        index=0, ignorecase=False) }}_tv
    action: homeassistant.turn_on
    data: {}
  - action: shell_command.play_plex_on_roku
    alias: Play show on Plex on Roku
    data:
      roku: '{{ trigger.entity_id | regex_findall_index(find=''input_select\.(.*)_plex_show'',
        index=0, ignorecase=False) | replace(''_'', ''-'') }}'
      tvshow: '{{ states(trigger.entity_id) }}'
    response_variable: response
  - data:
      option: Select Show
      entity_id: '{{ trigger.entity_id }}'
    action: input_select.select_option
    enabled: true
  mode: single
- id: '1607196597834'
  alias: TV - Office - Power Off
  description: ''
  triggers:
  - entity_id:
    - switch.office_tv
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  actions:
  - data:
      source: Home
    target:
      entity_id: media_player.office_roku_tv
    action: media_player.select_source
  mode: single
- id: '1607196620269'
  alias: TV - Bedroom - Power Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.bedroom_tv
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: remote.send_command
    data:
      num_repeats: 8
      delay_secs: 2
      hold_secs: 0
      command: replay
    target:
      entity_id: remote.bedroom_roku
  - service: media_player.select_source
    data:
      source: Home
    target:
      entity_id: media_player.bedroom_roku
  mode: single
- id: '1607196736782'
  alias: TV - Family Room - Power Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.god_damn_tv
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: media_player.select_source
    data:
      source: Home
    target:
      entity_id: media_player.god_damn_roku
  mode: single
- id: '1607717328639'
  alias: Lighting - Automatic Lights When We Come Home
  description: ''
  triggers:
  - entity_id: group.holly_mike
    from: not_home
    to: home
    for: 00:00:30
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: time
      after: input_datetime.mantle_lights_on
      before: input_datetime.mantle_lights_off
    then:
    - target:
        entity_id: light.mantle_lights
      data: {}
      action: homeassistant.turn_on
  - condition: state
    entity_id: binary_sensor.christmas_tree_available
    state: 'on'
  - condition: state
    entity_id: input_boolean.christmas_tree_is_up
    state: 'on'
  - target:
      entity_id:
      - switch.christmas_tree
      - light.deck_lights
    data: {}
    action: homeassistant.turn_on
  mode: single
- id: '1608699279426'
  alias: Tag - Mike Desk - Unlock Mercury
  description: ''
  triggers:
  - tag_id: 5a9e7a04-bf20-4e49-95db-e599b1335a56
    trigger: tag
  conditions: []
  actions:
  - if:
    - condition: template
      value_template: '{{ trigger.event.context.user_id == ''80ad218b0cf54379b5ee622fbb721c6b''
        }}'
    then:
    - data:
        entity_id:
        - switch.mercury_screensaver
      action: homeassistant.update_entity
    - data:
        message: Mike scanned at Mike's Desk
        level: warning
      action: system_log.write
    - condition: state
      entity_id: switch.mercury_screensaver
      state: 'on'
    - data:
        message: Unlocking mercury for Mike
        level: warning
      action: system_log.write
    - data: {}
      action: script.computer_mercury_unlock
    else:
    - data:
        message: Someone scanned at Mike's Desk
      action: notify.signal_mike
    - data:
        message: Someone (not Mike) scanned at Mike's Desk ({{ trigger.event.context.user_id
          }})
        level: error
      action: system_log.write
  mode: single
- id: '1608701107067'
  alias: Tag - Disarm Security System and Unlock Front Door
  description: If the tag scanned is used by Mike or Holly and is at one of the designated
    places
  triggers:
  - trigger: event
    event_type: tag_scanned
    alias: A tag is scanned
  conditions:
  - condition: template
    value_template: '{{ trigger.event.data.tag_id in tags }}'
    alias: Tag is in the tags list
  - alias: User is Mike or Holly
    condition: or
    conditions:
    - condition: template
      value_template: '{{ users[trigger.event.context.user_id] == ''Mike'' }}'
      alias: User is Mike
    - condition: template
      value_template: '{{ users[trigger.event.context.user_id] == ''Holly'' }}'
      alias: User is Holly
  actions:
  - data: {}
    action: script.security_disarm_system
    alias: Disarm Alarm
  - data:
      message: '{{ users[trigger.event.context.user_id] }} scanned at the {{ tags[trigger.event.data.tag_id]
        }} tag to Disarm the Security System'
      level: warning
    action: system_log.write
    alias: Log Alarm Disarmed
  - alias: Unlock Door if Tag in Do Unlock list
    if:
    - alias: Tag in the Do Unlock list
      condition: template
      value_template: '{{ tags[trigger.event.data.tag_id] in do_unlock }}'
    then:
    - action: button.press
      metadata: {}
      data: {}
      target:
        entity_id: button.front_door_zwave_ping
    - action: lock.unlock
      metadata: {}
      data: {}
      target:
        entity_id: lock.front_door_zwave
    - data:
        message: '{{ users[trigger.event.context.user_id] }} scanned at the {{ tags[trigger.event.data.tag_id]
          }} tag to Unlock Front Door (Zwave)'
        level: warning
      action: system_log.write
      alias: Log Door Unlocked (Zwave)
    - action: button.press
      metadata: {}
      data: {}
      target:
        entity_id: button.front_door_zwave_ping
    - data: {}
      target:
        entity_id: button.front_door_wake
      action: button.press
      continue_on_error: true
    - data: {}
      target:
        entity_id: lock.front_door
      action: lock.unlock
      continue_on_error: true
    - data:
        message: '{{ users[trigger.event.context.user_id] }} scanned at the {{ tags[trigger.event.data.tag_id]
          }} tag to Unlock Front Door (August)'
        level: warning
      action: system_log.write
      alias: Log Door Unlocked (August)
  mode: single
  variables:
    do_unlock:
      Garage: 1
      Front Door: 1
      Mailbox: 1
      Mike S5: 1
      Holly Santa Fe: 1
      Holly Tundra: 1
    tags:
      741a22c8-f682-4319-8d86-eeaa31516012: Foyer
      494e4399-01f7-4ad4-91e4-940b1377cf60: Garage
      3eb9caa6-d3ed-4532-a368-8b9fd2a659a5: Front Door
      2aa97775-6bd0-4786-a767-058b393b35d5: Mailbox
      0cb8568f-8feb-4f09-9422-e960f7890ed7: Mike S5
      b4cde339-fb97-4619-9d7d-a8663a418753: Holly Santa Fe
      85e387a4-90b1-4241-afe2-f5303bfb2aa1: Holly Tundra
    users:
      80ad218b0cf54379b5ee622fbb721c6b: Mike
      3109b2f6d085440f92db502bc4e30a3b: Holly
- id: '1609607242283'
  alias: 21 - Home Assistant - Nightly Tasks
  description: ''
  triggers:
  - at: input_datetime.home_assistant_nightly_tasks
    trigger: time
  conditions: []
  actions:
  - data:
      message: Starting Nightly Tasks
      level: warning
    action: system_log.write
  - data: {}
    action: shell_command.clean_alarm_state
  - data: {}
    action: shell_command.rotate_ha_logs
  - if:
    - condition: template
      value_template: '{{ now().weekday() == (state_attr(''sensor.moco_recycle_day'',
        ''recycle_day_num'') | int(0) + 1) % 7 }}'
    then:
    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.recycle_is_out
      data: {}
    alias: Reset Recycle Is Out if day after Recycle Day
  - if:
    - condition: template
      value_template: '{{ now().weekday() == (states(''sensor.trash_weekday_1_number'')
        | int(0) + 1) % 7 or now().weekday() == (states(''sensor.trash_weekday_2_number'')
        | int(0) + 1) % 7 }}'
    then:
    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.trash_is_out
      data: {}
    alias: Reset Trash is Out if day after Trash Day
  - target:
      entity_id: binary_sensor.new_npm_ssl_cert_available
    data: {}
    action: homeassistant.update_entity
  - if:
    - condition: state
      entity_id: binary_sensor.new_npm_ssl_cert_available
      state: 'on'
    then:
    - data:
        addon: a0d7b954_nginxproxymanager
      action: hassio.addon_restart
  - data: {}
    action: shell_command.update_tv_shows
  - target:
      entity_id: binary_sensor.new_tv_show_list_ready
    data: {}
    action: homeassistant.update_entity
  - data:
      addon: core_letsencrypt
    action: hassio.addon_restart
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - target:
      entity_id: binary_sensor.new_ssl_cert_available
    data: {}
    action: homeassistant.update_entity
  - if:
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.new_tv_show_list_ready
        state: 'on'
      - condition: state
        entity_id: binary_sensor.new_ssl_cert_available
        state: 'on'
    then:
    - data:
        message: 'Nightly Tasks: Restarting Home Assistant'
        level: warning
      action: system_log.write
    - action: homeassistant.restart
      data: {}
  - data:
      message: Finishing Nightly Tasks
      level: warning
    action: system_log.write
  - metadata: {}
    data:
      type: daily
    target:
      entity_id: weather.home
    response_variable: daily_forecast
    action: weather.get_forecasts
  - action: script.backup_partial_on_nfs
    data: {}
    enabled: false
  mode: single
- id: '1610231390167'
  alias: Notifications - Nobody Home - Alarm Disarmed
  description: ''
  trigger:
  - platform: state
    entity_id: group.holly_mike
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition:
  - condition: state
    entity_id: alarm_control_panel.home_alarm
    state: disarmed
  action:
  - service: notify.notify
    data:
      message: The alarm is not armed
      title: Security Alert
      data:
        actions:
        - action: ARM_AWAY
          title: Arm Alarm (Away)
        - action: ARM_HOME
          title: Arm Alarm (Home)
  mode: single
- id: '1612040347239'
  alias: TV - Living Room - TV Volume to Soundbar Volume
  description: ''
  trigger:
  - platform: mqtt
    topic: tele/living_room_tv_remote/RESULT
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Protocol | lower == "samsung"
          }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Bits | int(0) == 32 }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Data == "0xE0E0E01F" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.DataLSB == "0x070707F8"
          or trigger.payload_json.IrReceived.DataLSB == "0x70707F8" }}'
      sequence:
      - service: mqtt.publish
        data:
          topic: cmnd/living_room_tv_remote/backlog
          payload: irsend {"Protocol":"SONY","Bits":15,"Data":"0x240C","DataLSB":"0x2430","Repeat":0}
      - service: system_log.write
        data:
          message: sony soundbar volume up
          level: warning
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Protocol | lower == "samsung"
          }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Bits | int(0) == 32 }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Data == "0xE0E0D02F" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.DataLSB == "0x07070BF4"
          or trigger.payload_json.IrReceived.DataLSB == "0x7070BF4" }}'
      sequence:
      - service: mqtt.publish
        data:
          topic: cmnd/living_room_tv_remote/backlog
          payload: irsend {"Protocol":"SONY","Bits":15,"Data":"0x640C","DataLSB":"0x2630","Repeat":0}
      - service: system_log.write
        data:
          message: sony soundbar volume down
          level: warning
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Protocol | lower == "samsung"
          }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Bits | int(0) == 32 }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.Data == "0xE0E0F00F" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.IrReceived.DataLSB == "0x07070FF0"
          or trigger.payload_json.IrReceived.DataLSB == "0x7070FF0" }}'
      sequence:
      - service: mqtt.publish
        data:
          topic: cmnd/living_room_tv_remote/backlog
          payload: irsend {"Protocol":"SONY","Bits":15,"Data":"0x140C","DataLSB":"0x2830","Repeat":0}
      - service: system_log.write
        data:
          message: sony soundbar mute
          level: warning
    default:
    - service: system_log.write
      data:
        message: 'no condition met: {{ trigger.payload_json.IrReceived }}'
        level: error
  - service: system_log.write
    data:
      message: 'sony soundbar received: {{ trigger.payload_json.IrReceived }}'
      level: warning
  mode: single
- id: '1613160102079'
  alias: Lighting - Mantle Lights On
  description: ''
  trigger:
  - platform: time
    at: input_datetime.mantle_lights_on
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: light.mantle_lights
  mode: single
- id: '1613160122811'
  alias: Lighting - Mantle Lights Off
  description: ''
  trigger:
  - platform: time
    at: input_datetime.mantle_lights_off
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: light.mantle_lights
  mode: single
- id: '1614981790208'
  alias: Notifications - Mailbox Notify
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.mailbox_sensor
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: input_boolean.mail_delivered
      state: 'off'
    then:
    - target:
        entity_id: input_boolean.mail_delivered
      data: {}
      action: homeassistant.turn_on
    - data:
        message: The mail's here, the mail's here!  Woo-hoo!
      action: notify.signal_security
    - data:
        message: The mail's here, the mail's here!  Woo-hoo!
        title: The mail has been delivered
        data:
          actions:
          - action: RESET_MAILBOX
            title: Reset Mail Delivery Notification
      action: notify.notify
    else:
    - target:
        entity_id: input_boolean.mail_delivered
      data: {}
      action: homeassistant.turn_off
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: person.holly_erdely
          state: home
      then:
      - data:
          message: Somebody retrieved the mail
        action: notify.signal_security
    - if:
      - condition: not
        conditions:
        - condition: state
          entity_id: person.michael_erdely
          state: home
      then:
      - data:
          message: Somebody retrieved the mail
        action: notify.signal_mike
  mode: single
- id: '1615411227750'
  alias: Home Assistant - Mailbox State Reset
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.mailbox_sensor
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - data:
      entity_id: binary_sensor.wyzesense_77ca81b4
      state: 'off'
    action: python_script.set_state
  mode: single
- id: '1616344353322'
  alias: 03-Save Home Assistant Logfile
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /2
  condition: []
  action:
  - service: shell_command.save_homeassistant_log
  mode: single
- id: '1617059343081'
  alias: Lighting - Den - Motion Light On
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_sensor_occupancy
    to: 'on'
  condition:
  - condition: state
    entity_id: light.den_overhead_light
    state: 'off'
    for: 00:01:00
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
    - condition: state
      entity_id: light.hallway_light
      state: 'on'
    - condition: state
      entity_id: light.kitchen_table_light
      state: 'on'
    - condition: state
      entity_id: light.kitchen_overhead_light
      state: 'on'
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/den_overhead_light/backlog
      payload: SetOption73 1; Delay 30; SetOption73 0
  - service: homeassistant.turn_on
    target:
      entity_id: light.den_overhead_light
    data: {}
  mode: single
- id: '1617059380424'
  alias: Lighting - Den - Motion Light Off
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.den_motion_sensor_occupancy
    to: 'off'
    for: 00:30:00
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: light.den_overhead_light
  mode: single
- id: '1617741916452'
  alias: Notifications - 1 - Water Leak Detected - All Sensors
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.water_leak_sensors
    to: 'on'
    for: 00:01:00
  condition: []
  action:
  - service: notify.signal_security
    data:
      message: "Water Leak Detected by the {% for entity_id in states.binary_sensor.water_leak_sensors.attributes.entity_id
        -%} {% if states(entity_id) != \"off\" -%}\n  {{ state_attr(entity_id, 'friendly_name')
        }}\n{% endif -%}{% endfor -%}"
  mode: single
- id: '1618083518993'
  alias: Lighting - Living Room - Far Black Lamp
  description: ''
  trigger:
  - platform: mqtt
    topic: cmnd/far_black_lamp/power1
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.payload.lower() == "on" }}'
    then:
    - service: homeassistant.turn_on
      target:
        entity_id: light.far_black_lamp
      data: {}
    else:
    - service: homeassistant.turn_off
      target:
        entity_id: light.far_black_lamp
      data: {}
  mode: single
- id: '1622222404078'
  alias: 20 - Home Assistant - Bedtime Tasks
  description: ''
  triggers:
  - at: input_datetime.home_assistant_bedtime_tasks
    trigger: time
  conditions: []
  actions:
  - data:
      message: Starting Bedtime Tasks
      level: warning
    action: system_log.write
  - if:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: disarmed
    then:
    - data:
        message: The Alarm is not armed.
        data:
          actions:
          - action: ARM_HOME
            title: Arm Alarm (Home)
          - action: RUN_GOODNIGHT
            title: Good Night
        title: Security Alert
      action: notify.notify
    alias: Send Arm Alarm Notification
  - alias: Send Trash Notification if necessary
    if:
    - condition: or
      conditions:
      - condition: template
        value_template: '{{ (now() + timedelta(days=1)).strftime("%A") == states("input_select.trash_day_1")
          and states("input_boolean.trash_is_out") == "off" }}'
      - condition: template
        value_template: '{{ (now() + timedelta(days=1)).strftime("%A") == states("input_select.trash_day_2")
          and states("input_boolean.trash_is_out") == "off" }}'
    then:
    - data:
        message: Trash collection is tomorrow and Trash is not out!
        data:
          actions:
          - action: TRASH_IS_OUT
            title: Trash Is Already Out
      action: notify.notify
  - alias: Send Recycle Notification if necessary
    if:
    - condition: template
      value_template: '{{ state_attr("sensor.moco_recycle_day", "recycle_days") |
        int(7) < 1 and states("input_boolean.recycle_is_out") == "off" }}'
    then:
    - data:
        message: Recycling collection is tomorrow and Recycle is not out!
        data:
          actions:
          - action: RECYCLE_IS_OUT
            title: Recycling Is Already Out
      action: notify.notify
  - data:
      message: Finishing Bedtime Tasks
      level: warning
    action: system_log.write
  mode: single
- id: '1629490638700'
  alias: TV - Family Room - Change Input (family_room_input)
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.family_room_input
    from: Select Input
  condition: []
  action:
  - service: input_select.select_option
    data:
      option: '{{ states(''input_select.family_room_input'') }}'
    entity_id: input_select.god_damn_input
  - service: input_select.select_option
    data:
      option: Select Input
    entity_id: input_select.family_room_input
  mode: single
- id: '1631118685373'
  alias: Notifications - Frigate - Front Door Cam 2
  description: ''
  triggers:
  - topic: frigate/events
    trigger: mqtt
  conditions:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["label"] == "person" }}'
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["label"] == "dog" }}'
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["label"] == "cat" }}'
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["label"] == "bird" }}'
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["label"] == "sports ball"
        }}'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["camera"] == "Front_Door_2"
        }}'
    - condition: template
      value_template: '{{ trigger.payload_json["after"]["camera"] == "Garage_Door"
        }}'
      enabled: false
  actions:
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - data:
      object: '{{ trigger.payload_json["after"]["label"] }}'
      camera: '{{ trigger.payload_json["after"]["camera"] }}'
      eventid: '{{ trigger.payload_json["after"]["id"] }}'
    enabled: false
    action: script.function_frigate_send_email
  - data:
      detected_object: '{{ trigger.payload_json["after"]["label"] }}'
      camera: '{{ trigger.payload_json["after"]["camera"] }}'
      eventid: '{{ trigger.payload_json["after"]["id"] }}'
    enabled: false
    action: python_script.send_frigate_email
  - data:
      detected_object: '{{ trigger.payload_json["after"]["label"] }}'
      camera: '{{ trigger.payload_json["after"]["camera"] }}'
      eventid: '{{ trigger.payload_json["after"]["id"] }}'
    action: shell_command.send_frigate_email
    response_variable: command_response
  - action: system_log.write
    metadata: {}
    data:
      level: error
      message: 'stderr: {{ command_response[''stderr''] }}'
    enabled: false
  - action: system_log.write
    metadata: {}
    data:
      level: error
      message: 'stdout: {{ command_response[''stdout''] }}'
    enabled: false
  mode: single
  max: 10
- id: '1632758469302'
  alias: Lighting - Bedroom - Motion Light On
  description: ''
  triggers:
  - entity_id: binary_sensor.bedroom_motion_sensor_occupancy
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: light.dresser_lamp
    state: 'off'
    for: 00:01:00
  - condition: state
    entity_id: switch.bedroom_tv
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.bedroom_motion_sensor_illuminance
    below: '16'
  - condition: state
    entity_id: binary_sensor.bed_sensor_holly
    state: 'off'
  - condition: state
    entity_id: binary_sensor.bed_sensor_mike
    state: 'off'
  - condition: time
    after: 06:00:00
    before: '23:00:00'
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
  - condition: state
    entity_id: input_boolean.bedroom_motion_enabled
    state: 'on'
  actions:
  - data:
      topic: cmnd/dresser_lamp/backlog
      payload: rule2 off; Delay 40; rule2 on
      qos: 0
      retain: false
    action: mqtt.publish
  - target:
      entity_id: light.dresser_lamp
    data: {}
    action: homeassistant.turn_on
  mode: single
- id: '1632841431902'
  alias: Fan - Master Bath Humidity - Fan On
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.master_bath_multisensor_humidity'') | float(0)
      > states(''input_number.master_bath_fan_on'') | float(100) }}'
  condition:
  - condition: state
    entity_id: light.master_bath_light
    state: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: switch.bedroom_tv
      state: 'on'
    alias: Holly is not in bed OR the TV is on
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
    - condition: state
      entity_id: switch.bedroom_tv
      state: 'on'
    alias: Mike is not in bed OR the TV is on
  - condition: state
    entity_id: switch.master_bath_fan
    state: 'off'
  - condition: state
    entity_id: input_boolean.master_bath_fan_auto
    state: 'on'
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: switch.master_bath_fan
    data: {}
  mode: single
- id: '1632841500873'
  alias: Fan - Master Bath Humidity - Fan Off
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.master_bath_multisensor_humidity'') | float(0)
      < states(''input_number.master_bath_fan_off'') | float(100) }}'
  condition:
  - condition: state
    entity_id: switch.master_bath_fan
    state: 'on'
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: switch.master_bath_fan
  mode: single
- id: '1633300929464'
  alias: Lighting - Powder Room - Motion Light On
  description: ''
  triggers:
  - entity_id: binary_sensor.powder_room_motion_sensor_occupancy
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: light.powder_room_light
    state: 'off'
    for: 00:01:00
  - condition: numeric_state
    entity_id: sensor.powder_room_motion_sensor_illuminance
    below: 70
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
  actions:
  - data:
      topic: cmnd/powder_room_light/backlog
      payload: SetOption73 1; Delay 30; SetOption73 0
    action: mqtt.publish
  - target:
      entity_id: light.powder_room_light
    data: {}
    action: homeassistant.turn_on
  mode: single
- id: '1634428046004'
  alias: OctoPrint - Turn on Camera
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.octoprint_printing
    to: 'on'
  condition: []
  action:
  - service: shell_command.ssh_command
    data:
      server: ha@carpo.erdely.in
      command: start_camera
  - service: homeassistant.update_entity
    target:
      entity_id: binary_sensor.octoprint_camera_status
  - service: homeassistant.turn_on
    target:
      entity_id: switch.octoprint_light_plug
  mode: single
- id: '1634428228462'
  alias: OctoPrint - Turn off Camera
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.octoprint_printing
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: shell_command.ssh_command
    data:
      server: ha@carpo.erdely.in
      command: stop_camera
  - service: homeassistant.update_entity
    target:
      entity_id: binary_sensor.octoprint_camera_status
  - service: homeassistant.turn_off
    target:
      entity_id: switch.octoprint_light_plug
  mode: single
- id: '1635180091668'
  alias: Controls - Power On Ender3 Screen with Ender 3
  description: ''
  trigger:
  - platform: state
    entity_id: switch.ender3_plug
    to: 'on'
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: switch.guest_room_usb_hub
  mode: single
- id: '1635180126214'
  alias: Controls - Power Off Ender3 Screen with Ender 3
  description: ''
  trigger:
  - platform: state
    entity_id: switch.ender3_plug
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: switch.guest_room_usb_hub
  mode: single
- id: '1635775206466'
  alias: Controls - Save Holly In Bed State
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_sensor_holly
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_holly
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.holly_is_in_bed
        data: {}
    - conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_holly
        state: 'off'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.holly_is_in_bed
        data: {}
    default: []
  mode: single
- id: '1635775250461'
  alias: Controls - Save Mike In Bed State
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.bed_sensor_mike
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_mike
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.mike_is_in_bed
        data: {}
    - conditions:
      - condition: state
        entity_id: binary_sensor.bed_sensor_mike
        state: 'off'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.mike_is_in_bed
        data: {}
    default: []
  mode: single
- id: '1637383119311'
  alias: Actionable Notifications - RUN_GOODNIGHT
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: RUN_GOODNIGHT
  condition: []
  action:
  - service: notify.notify
    data:
      message: Good Night script run via Actionable Notification
  - service: script.scene_good_night
    data: {}
  mode: single
- id: '1637383160091'
  alias: Actionable Notifications - ARM_HOME
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ARM_HOME
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_home
    target:
      entity_id: alarm_control_panel.home_alarm
  - service: notify.notify
    data:
      message: Alarm Armed (Home) via Actionable Notification
  mode: single
- id: '1637383181288'
  alias: Actionable Notifications - ARM_AWAY
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: ARM_AWAY
  condition: []
  action:
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm
  - service: notify.notify
    data:
      message: Alarm Armed (Away) via Actionable Notification
  mode: single
- id: '1637383883544'
  alias: Notifications - Nobody Home - Oven On
  description: ''
  trigger:
  - platform: state
    entity_id: group.holly_mike
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.oven_is_on
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  action:
  - service: notify.signal_security
    data:
      message: The oven is on and nobody is home
      title: Security Alert
  mode: single
- id: '1638997594019'
  alias: Home Assistant - Monitor Earth / HA Entities
  description: ''
  triggers:
  - entity_id:
    - sensor.software_updates_available_count
    above: 0
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: numeric_state
  - entity_id: binary_sensor.earth
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: 'off'
    trigger: state
  - entity_id: binary_sensor.earth
    for:
      hours: 0
      minutes: 3
      seconds: 0
    from: 'on'
    trigger: state
  - entity_id: binary_sensor.earth_nginx_php_working
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
  - entity_id: binary_sensor.nginx_proxy_manager_working
    for:
      hours: 0
      minutes: 5
      seconds: 0
    trigger: state
  - entity_id: sensor.unavailable_entities
    above: '0'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: numeric_state
  - entity_id: sensor.unavailable_entities
    for:
      hours: 0
      minutes: 0
      seconds: 30
    below: '1'
    trigger: numeric_state
  - entity_id: binary_sensor.bitwarden_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.frigate_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.mqtt_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.nginxproxymgr_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.signal_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.ssh_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.unifi_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: binary_sensor.zigbee2mqtt_add_on_running
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: state
  - entity_id: sensor.ood_zigbee_entities
    above: '0'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: numeric_state
  - entity_id: sensor.ood_zigbee_entities
    for:
      hours: 0
      minutes: 0
      seconds: 30
    below: '1'
    trigger: numeric_state
  - entity_id: sensor.ood_wyze_entities
    above: '0'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    trigger: numeric_state
  - entity_id: sensor.ood_wyze_entities
    for:
      hours: 0
      minutes: 0
      seconds: 30
    below: '1'
    trigger: numeric_state
  - trigger: numeric_state
    entity_id:
    - sensor.tasmota_devices
    for:
      hours: 0
      minutes: 0
      seconds: 30
    below: 1
  conditions:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  - condition: time
    after: 02:30:00
    before: 01:59:00
    weekday:
    - sat
    - fri
    - thu
    - wed
    - tue
    - mon
    - sun
    alias: Don't fire between 2 & 2:30 AM (nightly maintenance)
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state | int(-1) > 0 or trigger.to_state.state
          | string == "off" }}'
      sequence:
      - data:
          message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} is {{ states(trigger.entity_id)
            }}


            {% if state_attr(trigger.entity_id, ''entity_list'') %}

            Entity List: {{ state_attr(trigger.entity_id, ''entity_list'') }}

            {% elif states(trigger.entity_id | regex_replace(''_count$'', '''')) %}

            Entity List: {{ states(trigger.entity_id | regex_replace(''_count$'',
            '''')) }}

            {% endif %}

            '
          title: '** PROBLEM Alert: {{ state_attr(trigger.entity_id, ''friendly_name'')
            }} is {{ states(trigger.entity_id) }} **'
        action: notify.gmail_to_mike
      - target:
          entity_id: '{{ "input_boolean." + trigger.entity_id.split(".")[1] + "_triggered"
            }}'
        action: homeassistant.turn_on
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.state | int(-1) == 0 or trigger.to_state.state
          | string == "on" }}'
      sequence:
      - condition: template
        value_template: '{{ states("input_boolean." + trigger.entity_id.split(".")[1]
          + "_triggered") == "on" }}'
      - data:
          message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} is {{ states(trigger.entity_id)
            }}

            '
          title: '** RECOVERY Alert: {{ state_attr(trigger.entity_id, ''friendly_name'')
            }} is {{ states(trigger.entity_id) }} **'
        action: notify.gmail_to_mike
      - target:
          entity_id: '{{ "input_boolean." + trigger.entity_id.split(".")[1] + "_triggered"
            }}'
        action: homeassistant.turn_off
    default:
    - data:
        message: '{{ state_attr(trigger.entity_id, ''friendly_name'') }} is {{ states(trigger.entity_id)
          }}


          {% if state_attr(trigger.entity_id, ''entity_list'') %}

          Entity List: {{ state_attr(trigger.entity_id, ''entity_list'') }}

          {% elif states(trigger.entity_id | regex_replace(''_count$'', '''')) %}

          Entity List: {{ states(trigger.entity_id | regex_replace(''_count$'', ''''))
          }}

          {% endif %}

          '
        title: '** UNKNOWN Issue Alert: {{ state_attr(trigger.entity_id, ''friendly_name'')
          }} is {{ states(trigger.entity_id) }} **'
      action: notify.gmail_to_mike
  mode: single
- id: '1641590686089'
  alias: Actionable Notifications - RESET_MAILBOX
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: RESET_MAILBOX
  condition: []
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: input_boolean.mail_delivered
  mode: single
- id: '1642193974045'
  alias: Actionable Notifications - TRASH_IS_OUT
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: TRASH_IS_OUT
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id:
      - input_boolean.trash_is_out
  mode: single
- id: '1642194163380'
  alias: Actionable Notifications - RECYCLE_IS_OUT
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: RECYCLE_IS_OUT
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: input_boolean.recycle_is_out
  mode: single
- id: '1644094351525'
  alias: Heater - Turn Off Office Heater After Set Amount of Time
  description: ''
  triggers:
  - value_template: '{{ states("switch.office_heater_plug") == "on" }}'
    for:
      minutes: '{{ states(''input_number.office_heater_auto_off'') | int(30) }}'
    trigger: template
  - value_template: "{{ states(\"sensor.office_multisensor_temperature\") | float(0)
      >=\n  states(\"input_number.office_heater_auto_off_temperature\") | float(71.0)
      }}\n"
    for:
      minutes: 1
    trigger: template
  conditions: []
  actions:
  - data: {}
    target:
      entity_id: switch.office_heater_plug
    action: homeassistant.turn_off
  mode: single
- id: '1644246652989'
  alias: Notifications - Fridge Door Open
  description: Send an alert if the Fridge or Freezer doors have been open for 5 minutes
  trigger:
  - platform: state
    entity_id: binary_sensor.dining_room_freezer_door_contact
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: 'off'
  - platform: state
    entity_id: binary_sensor.dining_room_refrigerator_door_contact
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: 'off'
  - platform: state
    entity_id: binary_sensor.kitchen_freezer_door_contact
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.kitchen_refrigerator_door_contact
    for:
      hours: 0
      minutes: 5
      seconds: 0
    from: 'off'
  condition: []
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: '{{ trigger.entity_id | regex_replace("binary_sensor\.(.*)_contact$",
        "input_boolean.\\1_open_alert") }}'
  - service: notify.signal_security
    data:
      message: The {{ state_attr(trigger.entity_id, "friendly_name") }} has been open
        for 5 minutes.
  mode: single
- id: '1645068726044'
  alias: Security - 40 Armed - Disarm Security System in the morning after 6:30
  description: ''
  trigger:
  - platform: time
    at: input_datetime.automatic_security_disarm
  condition:
  - condition: state
    entity_id: group.holly_mike
    state: home
  action:
  - service: script.security_disarm_system
    data: {}
  - condition: state
    entity_id: binary_sensor.christmas_tree_available
    state: 'on'
  - condition: state
    entity_id: input_boolean.christmas_tree_is_up
    state: 'on'
  - service: homeassistant.turn_on
    target:
      entity_id: switch.christmas_tree
    data: {}
  mode: single
- id: '1650048811718'
  alias: Lighting - Fix 3-way Lights
  description: ''
  triggers:
  - entity_id: light.hallway_light
    to: unknown
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  - entity_id: light.god_damn_switch
    to: unknown
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  - entity_id: light.kitchen_overhead_light
    to: unknown
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - data: {}
    action: script.0000000mwe
  mode: single
- id: '1650211137772'
  alias: Home Assistant - Fix Nginx Proxy Manager
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.nginx_proxy_manager_working
    for:
      hours: 0
      minutes: 2
      seconds: 0
    to: 'off'
    trigger: state
  conditions:
  - condition: time
    after: 02:30:00
    before: 01:59:00
    weekday:
    - sun
    - mon
    - tue
    - wed
    - thu
    - fri
    - sat
  actions:
  - data:
      addon: a0d7b954_nginxproxymanager
    action: hassio.addon_restart
  - data:
      title: MariaDB/NPM Restarted
      message: The Nginx Proxy Manager Add-Ons were restarted.
    action: notify.gmail_to_mike
  mode: single
- id: '1670901378517'
  alias: Lighting - Turn Den Lights Off
  description: Turn Den Lights Off when turning off Laundry Room Lights
  trigger:
  - platform: state
    entity_id:
    - light.laundry_room_light
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: light.den_overhead_light
  mode: single
- id: '1670901378518'
  alias: Lighting - Turn Den Lights Off
  description: Turn Den Lights Off when turning off Laundry Room Lights
  trigger:
  - platform: state
    entity_id:
    - light.laundry_room_light
    to: 'off'
  condition: []
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: light.den_overhead_light
  mode: single
- id: '1671061951151'
  alias: Lighting - Shed Lamp Auto On
  description: Turn on Shed Lamp when Shed Door opens
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.shed_door_contact
    to: 'on'
  condition:
  - condition: sun
    before: sunrise
    after: sunset
    after_offset: -00:30:00
    before_offset: +00:30:00
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: light.shed_lamp
  mode: single
- id: '1671062103330'
  alias: Lighting - Shed Lamp Auto Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.shed_door_contact
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: light.shed_lamp
  mode: single
- id: '1671213044073'
  alias: Lighting - Reset Crappy Christmas Lights
  description: The timer on the green tree lights sucks and automatically turns off
    after 6 hours.  So twice during the time we want them on, turn them off and then
    back on again.
  triggers:
  - at: '21:30:00'
    trigger: time
  - at: 01:00:00
    trigger: time
  conditions:
  - condition: state
    entity_id: binary_sensor.outside_christmas_lights
    state: 'on'
  actions:
  - data: {}
    target:
      entity_id: switch.outdoor_strip_p2
    action: homeassistant.turn_off
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data: {}
    target:
      entity_id: switch.outdoor_strip_p2
    action: homeassistant.turn_on
  mode: single
- id: '1671217553135'
  alias: Fan - Hall Bath Humidity - Fan On
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.hall_bath_multisensor_humidity'') | float(0)
      > states(''input_number.hall_bath_fan_on'') | float(100) }}'
  condition:
  - condition: state
    entity_id: light.hall_bath_light
    state: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_holly
      state: 'off'
    - condition: state
      entity_id: switch.bedroom_tv
      state: 'on'
    alias: Holly is not in bed OR the TV is on
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.bed_sensor_mike
      state: 'off'
    - condition: state
      entity_id: switch.bedroom_tv
      state: 'on'
    alias: Mike is not in bed OR the TV is on
  - condition: state
    entity_id: switch.hall_bath_fan
    state: 'off'
  - condition: state
    entity_id: input_boolean.hall_bath_fan_auto
    state: 'on'
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: switch.hall_bath_fan
    data: {}
  mode: single
- id: '1671217825195'
  alias: Fan - Hall Bath Humidity - Fan Off
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.hall_bath_multisensor_humidity'') | float(0)
      < states(''input_number.hall_bath_fan_off'') | float(100) }}'
  condition:
  - condition: state
    entity_id: switch.hall_bath_fan
    state: 'on'
  action:
  - service: homeassistant.turn_off
    target:
      entity_id: switch.hall_bath_fan
    data: {}
  mode: single
- id: '1671565614293'
  alias: Notifications - Fridge Door Closed
  description: Notify when the Fridge or Freezer Doors close after having been opened
    for 5 mintues
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dining_room_freezer_door_contact
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.dining_room_refrigerator_door_contact
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.kitchen_freezer_door_contact
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'off'
  - platform: state
    entity_id:
    - binary_sensor.kitchen_refrigerator_door_contact
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'off'
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ states(trigger.entity_id | regex_replace("binary_sensor\.(.*)_contact$",
        "input_boolean.\\1_open_alert")) != "off" }}'
    then:
    - service: notify.signal_security
      data:
        message: The {{ state_attr(trigger.entity_id, "friendly_name") }} has been
          closed.
  - service: homeassistant.turn_off
    data:
      entity_id: '{{ trigger.entity_id | regex_replace("binary_sensor\.(.*)_contact$",
        "input_boolean.\\1_open_alert") }}'
  mode: single
- id: '1671648815254'
  alias: Lighting - Holly Nightstand Light
  description: ''
  trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_ieee: 00:15:8d:00:08:83:47:37
      command: single
  - platform: device
    domain: mqtt
    device_id: 4e082175ea365830e3200bd784ab1a81
    type: action
    subtype: single
    discovery_id: 0x00158d0008834737 action_single
  condition: []
  action:
  - service: homeassistant.toggle
    data: {}
    target:
      entity_id: light.holly_nightstand_lamp
  mode: single
- id: '1671832619134'
  alias: Lighting - Bedroom - Holly in Bed LEDs off
  description: Disable the LEDs on the light switches when Holly is in bed.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_sensor_holly
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/dresser_lamp/ledpower
      payload: '1'
  - service: mqtt.publish
    data:
      topic: cmnd/master_bath_light/ledpower
      payload: '1'
  - service: mqtt.publish
    data:
      topic: cmnd/master_bath_fan/ledpower
      payload: '1'
  mode: single
- id: '1671832783300'
  alias: Lighting - Bedroom - Holly out of Bed LEDs on
  description: Enable the LEDs on the light switches when Holly is out of bed.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bed_sensor_holly
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: cmnd/dresser_lamp/ledstate
      payload: '1'
  - service: mqtt.publish
    data:
      topic: cmnd/master_bath_light/ledstate
      payload: '1'
  - service: mqtt.publish
    data:
      topic: cmnd/master_bath_fan/ledstate
      payload: '1'
  mode: single
- id: '1673482501074'
  alias: Security - Lock Front Door when Arming
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.front_door_contact
    to: 'off'
    trigger: state
  conditions:
  - condition: or
    conditions:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: arming
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_away
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_home
  actions:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.front_door_zwave_ping
  - action: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.front_door_zwave
  - data: {}
    target:
      entity_id: button.front_door_wake
    action: button.press
    continue_on_error: true
  - data: {}
    target:
      entity_id: lock.front_door
    action: lock.lock
    continue_on_error: true
  mode: single
- id: '1679241143151'
  alias: Lighting - Turn on Nighttime Stairway/Hallway Lights
  description: Add extra lighting over stairs at night
  trigger:
  - platform: state
    entity_id:
    - light.hallway_light
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
    for:
      hours: 1
      minutes: 0
      seconds: 0
    enabled: true
  - condition: state
    entity_id: light.nighttime_hallway_lighting
    state: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
  action:
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - light.kitchen_table_light
      - light.foyer_light
  mode: single
- id: '1679241221562'
  alias: Lighting - Turn off extra lights over stairway/hallway at night
  description: Add extra lighting over stairs at night
  trigger:
  - platform: state
    entity_id:
    - light.hallway_light
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
    for:
      hours: 1
      minutes: 0
      seconds: 0
    enabled: true
  - condition: state
    entity_id: light.nighttime_hallway_lighting
    state: 'off'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - light.kitchen_table_light
      - light.foyer_light
  mode: single
- id: '1688076582161'
  alias: Lighting - Sync Bulb Status
  description: ''
  triggers:
  - entity_id:
    - light.dresser_lamp
    - light.dresser_switch
    - light.white_lamp
    - light.white_switch
    - light.front_porch_light
    - light.front_porch_switch
    - light.holly_nightstand_lamp
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - data:
      level: error
      message: Turning off {{ trigger.entity_id | replace('_lamp', '_bulb') | replace('_light',
        '_bulb') }}
    action: system_log.write
  - data: {}
    target:
      entity_id: '{{ trigger.entity_id | replace(''_lamp'', ''_bulb'') | replace(''_light'',
        ''_bulb'') }}'
    action: homeassistant.turn_off
  - data:
      entity_id: '{{ trigger.entity_id | replace(''_lamp'', ''_bulb'') | replace(''_light'',
        ''_bulb'') }}'
      state: 'off'
    action: python_script.set_state
  mode: parallel
  max: 10
- id: '1704658454909'
  alias: Lighting - Toggle Garage Door Light
  description: ''
  triggers:
  - topic: cmnd/garage_door_light/power1
    payload: toggle
    id: Garage Door Light
    trigger: mqtt
  - topic: cmnd/far_black_lamp/power1
    payload: toggle
    id: Far Black Lamp
    trigger: mqtt
  - topic: cmnd/white_lamp/power1
    payload: toggle
    id: White Lamp
    trigger: mqtt
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Garage Door Light
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: light.garage_door_light
        action: light.toggle
    - conditions:
      - condition: trigger
        id:
        - Far Black Lamp
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: light.far_black_lamp
        action: light.toggle
    - conditions:
      - condition: trigger
        id:
        - White Lamp
      sequence:
      - metadata: {}
        data: {}
        target:
          entity_id: light.white_lamp
        action: light.toggle
  mode: single
- id: '1705879584394'
  alias: Lighting - Ensure switches stay on for Smart Bulbs
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.dresser_switch
    from: 'on'
  - trigger: state
    entity_id:
    - light.white_switch
    from: 'on'
  - trigger: state
    entity_id:
    - light.front_porch_switch
    from: 'on'
  - trigger: state
    entity_id:
    - light.god_damn_switch
    from: 'on'
  conditions: []
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id:
      - '{{ trigger.entity_id }}'
    action: homeassistant.turn_on
  mode: single
- id: '1712846768542'
  alias: Lighting - Disable Automatic Living Room Light Turn Off If Used
  description: If someone goes into the living room and or uses anything in the living
    room, disable the automatic turning off of the living room light
  triggers:
  - entity_id:
    - media_player.living_room_roku_tv
    - light.near_black_lamp
    - light.white_lamp
    - light.far_black_lamp
    trigger: state
  - entity_id:
    - binary_sensor.living_room_motion_sensor_occupancy
    attribute: occupancy
    enabled: true
    trigger: state
  conditions:
  - condition: state
    entity_id: input_boolean.automatic_living_room_light
    state: 'on'
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: input_boolean.automatic_living_room_light
    action: homeassistant.turn_off
  mode: single
- id: '1712846900243'
  alias: Lighting - Turn off Near Living Room Lamp After Sunset
  description: Unless some action forced it to stay on
  triggers:
  - event: sunset
    offset: 00:15:00
    trigger: sun
  conditions:
  - condition: state
    entity_id: input_boolean.automatic_living_room_light
    state: 'on'
    enabled: true
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.automatic_living_room_light
      - light.near_black_lamp
    action: homeassistant.turn_off
  mode: single
- id: '1720882109923'
  alias: Lighting - Living Room - White Lamp
  description: ''
  trigger:
  - platform: mqtt
    topic: cmnd/white_lamp/power1
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.payload.lower() == "on" }}'
    then:
    - service: homeassistant.turn_on
      target:
        entity_id: light.white_lamp
      data: {}
    else:
    - service: homeassistant.turn_off
      target:
        entity_id: light.white_lamp
      data: {}
  mode: single
- id: '1729313854999'
  alias: Humidifier - Turn off bedroom humidifier at 50%
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.bedroom_multisensor_humidity
    above: 50
  - trigger: time
    at: 02:00:00
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      device_id: 7f05037a5480d7fd07c1125fc56de5ac
  mode: single
- id: '1732810938168'
  alias: Lighting - Set the Living Room Light Color
  description: ''
  triggers:
  - type: turned_on
    device_id: 9c4ccdfcbf10af6efb740977f9d26dc5
    entity_id: b2ab9dca1252a199caa62b825db421c3
    domain: light
    trigger: device
    id: scene.living_room_white_bulb_normal
  conditions: []
  actions:
  - action: scene.turn_on
    metadata: {}
    target:
      entity_id: '{{ trigger.id }}'
    alias: Set Bulb Color
  mode: single
- id: '1733516669453'
  alias: Humidifier - Turn on Bedroom Humidifier at 6 and 8
  description: ''
  triggers:
  - trigger: time
    at: '12:00:00'
  - trigger: time
    at: '13:00:00'
  - trigger: time
    at: '14:00:00'
  - trigger: time
    at: '15:00:00'
  - trigger: time
    at: '16:00:00'
  - trigger: time
    at: '17:00:00'
  - trigger: time
    at: '18:00:00'
  - trigger: time
    at: '20:00:00'
  conditions:
  - condition: state
    entity_id: switch.bedroom_humidifier
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.bedroom_multisensor_humidity
    attribute: humidity
    below: 50
  actions:
  - action: homeassistant.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.bedroom_humidifier
  mode: single
- id: '1735499752877'
  alias: Humidifier - Turn off Office Humidifier at 50%
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.office_humidity
    above: 50
  - trigger: time
    at: 02:00:00
  conditions: []
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.mike_desk_strip_plug_4_humidifier
  mode: single
- id: '1735518229397'
  alias: Home Assistant - Lock front door when out of sync
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - lock.front_door
    to: locked
    for:
      hours: 0
      minutes: 5
      seconds: 0
  conditions: []
  actions:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.front_door_zwave_ping
  - action: lock.lock
    metadata: {}
    data: {}
    target:
      entity_id: lock.front_door_zwave
  mode: single
- id: '1736483323342'
  alias: Thermostat - Reset Furnace If 4 Degrees of Target (Heat)
  description: ''
  triggers:
  - trigger: template
    value_template: '{{ state_attr("climate.thermostat", "current_temperature") +
      3 < state_attr("climate.thermostat", "temperature") }}'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    alias: When the Thermstat Temperature is more than 3 degress less than the Thermostat
      Target
  conditions:
  - condition: not
    conditions:
    - condition: state
      entity_id: climate.thermostat
      attribute: hvac_action
      state: heating
    alias: Heat is not currently running
  - condition: state
    entity_id: climate.thermostat
    state: heat
  actions:
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.furnace_switch
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
  - action: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.furnace_switch
  mode: single
- id: '1736744742720'
  alias: Assist - Play title on roku TV
  description: ''
  triggers:
  - trigger: conversation
    command:
    - Play {title} on the {roku} TV
    - Play {title} on {roku} TV
    - Play {title} on {roku} Roku
  conditions: []
  actions:
  - target:
      entity_id: switch.{{ trigger.slots.roku | lower }}_tv
    action: homeassistant.turn_on
    data: {}
  - action: shell_command.play_plex_on_roku
    alias: Play show on Plex on Roku
    data:
      roku: '{{ trigger.slots.roku | lower }}'
      tvshow: '{{ trigger.slots.title }}'
    response_variable: response
  - set_conversation_response: Playing "{{ trigger.slots.title }}" on the {{ trigger.slots.roku
      }} TV
  mode: single
