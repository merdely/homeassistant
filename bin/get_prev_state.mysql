#!/usr/bin/env python3

import os
import re
import sys
from packaging import version

secrets = os.path.dirname(os.path.dirname(os.path.realpath(sys.argv[0]))) + '/secrets.yaml'
with open(secrets, 'r') as file:
    for line in file.readlines():
        m = re.search(r'mysql_uri: mysql://([^:]+):([^@]+)@([^/]+)/([^?]+)?', line)
        if m:
            sqlusername = m.group(1)
            sqlpassword = m.group(2)
            sqlhostname = m.group(3)
            sqldatabase = m.group(4)
file.close()

venv = '/srv/venv/mariadb'
if os.path.isdir(venv):
    for subdir in os.listdir(venv + '/lib'):
        sys.path.append(venv + '/lib/' + subdir + '/site-packages')

from MySQLdb import _mysql

if len(sys.argv) < 3:
    print('Usage: ' + sys.argv[0] + ' entity_id current_state')
    quit()
else:
    entity_id = sys.argv[1]
    current_state = " ".join(sys.argv[2:]).replace("'", "\\'")

exit_code = 0
prev_location = ''
try:
   if version.parse(_mysql.__version__) < version.parse('2.1.0'):
       conn = _mysql.connect(host=sqlhostname,
                             user=sqlusername,
                             passwd=sqlpassword,
                             db=sqldatabase)
   else:
       conn = _mysql.connect(host=sqlhostname,
                             user=sqlusername,
                             password=sqlpassword,
                             database=sqldatabase)
   # query = "SELECT state FROM states WHERE entity_id = '{}' AND states.last_updated_ts = (SELECT MAX(states2.last_updated_ts) FROM states AS states2 WHERE states2.entity_id = states.entity_id AND state != 'unknown' AND state != '{}');".format(entity_id, current_state)
   #query = f"SELECT states.state as state FROM states INNER JOIN states_meta on states_meta.metadata_id=states.metadata_id WHERE states_meta.entity_id = '{entity_id}' AND states.last_updated_ts = (SELECT MAX(states2.last_updated_ts) FROM states AS states2 WHERE states2.metadata_id = states.metadata_id AND states.state != 'unknown' AND states.state != '{current_state}');"
   query = f"SELECT states.state as state FROM states INNER JOIN states_meta on states_meta.metadata_id=states.metadata_id WHERE states_meta.entity_id = '{entity_id}' AND states.state != 'unknown' AND states.state != '{current_state}';"
   #print(query)
   conn.query(query)
   result = conn.store_result()

   rows = result.fetch_row(maxrows=0) 
   if len(rows) > 0:
       prev_location = rows[0][0].decode('utf-8')

   conn.close()

except Exception as error :
    exit_code = 1
    #pass
    #print ("Error while fetching data from MySQL", error)

if prev_location == '':
    prev_location = 'unknown'
#if prev_location == '' or prev_location == current_state:
#    if current_state == 'home':
#        prev_location = 'not_home'
#    else:
#        prev_location = 'home'

print(prev_location)

quit(exit_code)
