{
  "version": 1,
  "minor_version": 1,
  "key": "lovelace.control_panel",
  "data": {
    "config": {
      "views": [
        {
          "type": "panel",
          "title": "Home",
          "icon": "mdi:home",
          "path": "home",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .laundry-status {\n    font-size: 56px;\n    {% if states('sensor.washer_and_dryer_state') != 'Laundry Idle' -%}\n    color: var(--state-active-color);\n    {% endif %}\n  }\n</style> <table><tr><td class=left><span class=clock> {{ states('sensor.time_formatted') }}</span> </td><td class=right> <span class=laundry-status>{{ states('sensor.washer_and_dryer_state') }}</span></td></tr></table>\n"
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "type": "custom:button-card",
                          "entity": "input_boolean.mail_delivered",
                          "name": "Mail"
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.days_until_cleaners",
                          "name": "[[[ return entity.state ]]]",
                          "tap_action": {
                            "action": "nothing"
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state == \"Today\") return \"green\";\n    else if (entity.state == \"Tomorrow\") return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.trash",
                          "name": "[[[ return entity.state ]]]",
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.trash_is_out"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state == \"Today\" && states['input_boolean.trash_is_out'].state == \"off\") return \"red\";\n    else if (entity.state == \"Tomorrow\" && states['input_boolean.trash_is_out'].state == \"off\") return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.moco_recycle_day",
                          "name": "[[[ return entity.attributes.days_string ]]]",
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.recycle_is_out"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.attributes.days_string == \"Today\" && states['input_boolean.recycle_is_out'].state == \"off\") return \"red\";\n    else if (entity.attributes.days_string == \"Tomorrow\" && states['input_boolean.recycle_is_out'].state == \"off\") return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "binary_sensor.security_devices",
                          "name": "[[[ if (entity.state == \"off\") return \"Closed\"; else return \"Open\"; ]]]\n",
                          "icon": "[[[ if (entity.state == \"off\") return \"mdi:shield-lock-outline\"; else return \"mdi:shield-lock-open-outline\"; ]]]\n",
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "#alarm-panel"
                          },
                          "hold_action": {
                            "action": "none"
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state != 'off') return 'var(--state-active-color)'; else return 'var(--paper-item-icon-color)' ]]]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "type": "weather-forecast",
                      "entity": "weather.home",
                      "forecast_type": "daily"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "sensor.plex_plex",
                              "layout": "icon|state",
                              "icon": "mdi:plex",
                              "state": "{{ states('sensor.plex_plex') | default(0) }} watching Plex",
                              "tap_action": {
                                "action": "more-info",
                                "entity": "sensor.plex_plex"
                              },
                              "styles": {
                                "icon": {
                                  "color": "var(--plex-icon-color)"
                                },
                                "button": {
                                  "color": "var(--plex-color)"
                                }
                              }
                            },
                            {
                              "entity": "sensor.jellyfin_watching",
                              "layout": "icon|state",
                              "icon": "mdi:triangle-outline",
                              "state": "{{ states('sensor.jellyfin_watching') | default(0) }} watching Jellyfin",
                              "tap_action": {
                                "action": "more-info",
                                "entity": "sensor.jellyfin_watching"
                              },
                              "styles": {
                                "icon": {
                                  "color": "var(--jellyfin-icon-color)"
                                },
                                "button": {
                                  "color": "var(--jellyfin-color)"
                                }
                              }
                            },
                            {
                              "entity": "sensor.thermostat_temperature",
                              "layout": "icon|state",
                              "icon": "mdi:thermostat",
                              "state": "Set: {{ state_attr('climate.thermostat', 'temperature') }}°F ({{ states('climate.thermostat') | capitalize }} · {{ state_attr('climate.thermostat', 'current_temperature') }}°F)",
                              "tap_action": {
                                "action": "more-info",
                                "entity": "climate.thermostat"
                              },
                              "styles": {
                                "icon": {
                                  "color": "{% if state_attr('climate.thermostat', 'hvac_action') == \"heating\" %}var(--state-climate-heat-color){% elif state_attr('climate.thermostat', 'hvac_action') == \"cooling\" %}var(--state-climate-cool-color){% else %}var(--paper-item-icon-color){% endif %}\n"
                                },
                                "button": {
                                  "color": "{% if state_attr('climate.thermostat', 'hvac_action') == \"heating\" %}var(--state-climate-heat-color){% elif state_attr('climate.thermostat', 'hvac_action') == \"cooling\" %}var(--state-climate-cool-color){% else %}var(--primary-text-color){% endif %}\n"
                                }
                              }
                            }
                          ],
                          "card_mod": {
                            "style": "ha-card {\n  --plex-color: {% if states('sensor.plex_plex') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --plex-icon-color: {% if states('sensor.plex_plex') | int(0) > 0 %}var(--state-active-color){% else %}var(--paper-item-icon-color){% endif %};\n  --jellyfin-color: {% if states('sensor.jellyfin_active_clients') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --jellyfin-icon-color: {% if states('sensor.jellyfin_active_clients') | int(0) > 0 %}var(--state-active-color){% else %}var(--paper-item-icon-color){% endif %};\n}\n"
                          }
                        },
                        {
                          "type": "custom:html-template-card",
                          "ignore_line_breaks": true,
                          "content": "<style>\n  table {\n    width: 100%;\n    font-size: 20px;\n  }\n  tr:nth-child(odd) {\n    background-color: var(--secondary-background-color);\n</style> <table> {% if states.sensor.plex_plex != None -%}{% for client, value in states.sensor.plex_watching.attributes.sessions.items() -%} {% if client != \"unit_of_measurement\" and client != \"friendly_name\" %} <tr><td>＞</td><td>{{ client | regex_replace('(_+)? - .*$', '') | replace('reed530','Tracy') | replace('ebfab', 'EricB') | replace('humber952','Christina') | replace('Atheo37','Alex/Marce') | replace('ahuldtgren','Andrea') | replace('jhuldtgren', 'Johan') | replace('stuckonu5', 'Madsen') | replace('simpliop','DavidG') }}</td><td> {{ value }}</td></tr> {% endif -%} {% endfor -%} {% endif -%} {% if states.sensor.jellyfin_sessions != None -%}{% for client, value in states.sensor.jellyfin_sessions.attributes.sessions.items() -%} <tr><td>⟁</td><td>{{ client | regex_replace('(_+)? - .*$', '') }}</td><td> {{ value }}</td></tr> {% endfor -%}{% endif -%} </table>\n"
                        }
                      ],
                      "state_color": true,
                      "card_mod": {
                        "style": "ha-card {\n  --plex-color: {% if states('sensor.plex_plex') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --plex-icon-color: {% if states('sensor.plex_plex') | int(0) > 0 %}var(--state-active-color){% else %}var(--paper-item-icon-color){% endif %};\n  --jellyfin-color: {% if states('sensor.jellyfin_active_clients') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --jellyfin-icon-color: {% if states('sensor.jellyfin_active_clients') | int(0) > 0 %}var(--state-active-color){% else %}var(--paper-item-icon-color){% endif %};\n}\n"
                      }
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#alarm-panel"
                        },
                        {
                          "states": [
                            "arm_home",
                            "arm_away"
                          ],
                          "type": "alarm-panel",
                          "entity": "alarm_control_panel.home_alarm"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.attic_temperature",
                          "name": "Attic",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.bedroom_temperature",
                          "name": "Bedroom",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.bedroom_humidity",
                          "name": "Bedroom",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 55 %}red{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.master_bath_humidity",
                          "name": "Master Bath",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 55 %}red{% endif %};\n}\n"
                          }
                        }
                      ]
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.thermostat_temperature",
                          "name": "Thermostat",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if (state_attr(\"climate.thermostat\", \"temperature\") | int(69) - state_attr(\"climate.thermostat\", \"current_temperature\") | int(69)) | abs > 4 %}red{% elif states(\"climate.thermostat\") == \"heating\" %}var(--state-climate-heat-color){% elif states(\"climate.thermostat\") == \"cooling\" %}var(--state-climate-cool-color){% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.office_temperature",
                          "name": "Office",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.living_room_temperature",
                          "name": "Living Room",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.god_damn_temperature",
                          "name": "Family Room",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(60) >= 80 %}orange{% endif %};\n}\n"
                          }
                        }
                      ]
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.garage_temperature",
                          "name": "Garage",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.outside_temperature",
                          "name": "Outside",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.outside_humidity",
                          "name": "Outside",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 65 %}red{% endif %};\n}\n"
                          }
                        },
                        {
                          "graph": "line",
                          "type": "sensor",
                          "entity": "sensor.fully_kiosk_browser",
                          "name": "Panel",
                          "detail": 1,
                          "card_mod": {
                            "style": ".value {\n  color: {% if states(config.entity)|int(80) <= 70 %}orange{% elif states(config.entity) | int(80) == 100 %}green{% endif %};\n}\n"
                          }
                        }
                      ]
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.upstairs_lights_on",
                          "icon": "mdi:stairs-up",
                          "name": "Upstairs",
                          "show_state": true,
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "#upstairs-lights"
                          },
                          "hold_action": {
                            "action": "call-service",
                            "service": "homeassistant.toggle",
                            "target": {
                              "entity_id": "switch.upstairs"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state != 0) return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.middle_level_lights_on",
                          "icon": "mdi:format-align-middle",
                          "name": "Middle",
                          "show_state": true,
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "#middle-lights"
                          },
                          "hold_action": {
                            "action": "call-service",
                            "service": "homeassistant.toggle",
                            "target": {
                              "entity_id": "switch.middle_level"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state != 0) return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.downstairs_lights_on",
                          "icon": "mdi:stairs-down",
                          "name": "Downstairs",
                          "show_state": true,
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "#downstairs-lights"
                          },
                          "hold_action": {
                            "action": "call-service",
                            "service": "homeassistant.toggle",
                            "target": {
                              "entity_id": "switch.downstairs"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state != 0) return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "type": "custom:button-card",
                          "entity": "sensor.outside_plus_garage_lights_on",
                          "icon": "mdi:image",
                          "name": "Outside",
                          "show_state": true,
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "#outside-lights"
                          },
                          "hold_action": {
                            "action": "call-service",
                            "service": "homeassistant.toggle",
                            "target": {
                              "entity_id": "switch.outside"
                            }
                          },
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state != 0) return \"var(--state-active-color)\";\n    else return \"var(--paper-item-icon-color)\" ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_good_night",
                            "target": {}
                          },
                          "entity": "script.scene_good_night",
                          "name": "Good Night"
                        }
                      ]
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "custom:button-card",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "lock.front_door_zwave",
                          "hold_action": {
                            "action": "none"
                          },
                          "name": "Front Door"
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "custom:button-card",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "lock.garage_entry_door",
                          "hold_action": {
                            "action": "none"
                          },
                          "name": "Garage Entry"
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "custom:button-card",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "cover.garage_door",
                          "hold_action": {
                            "action": "none"
                          },
                          "name": "Garage Door",
                          "styles": {
                            "icon": [
                              {
                                "color": "[[[ if (entity.state == \"open\") return \"rgb(244,67,54)\";\n    else return \"rgb(76,175,80)\"; ]]]"
                              }
                            ]
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "custom:button-card",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "switch.petcam_plug",
                          "name": "PetCam",
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "custom:button-card",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_leaving_home",
                            "target": {}
                          },
                          "entity": "script.scene_leaving_home",
                          "name": "Leaving Home"
                        }
                      ]
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#upstairs-lights",
                          "button_type": "switch",
                          "sub_button": [
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#upstairs-lights"
                              },
                              "icon": "mdi:stairs-up"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#middle-lights"
                              },
                              "icon": "mdi:format-align-middle"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#downstairs-lights"
                              },
                              "icon": "mdi:stairs-down"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#outside-lights"
                              },
                              "icon": "mdi:image"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#bulbs"
                              },
                              "icon": "mdi:lightbulb"
                            }
                          ],
                          "show_header": true,
                          "name": "noname",
                          "show_name": false,
                          "show_icon": false,
                          "scrolling_effect": false
                        },
                        {
                          "type": "entities",
                          "entities": [
                            "switch.bedroom",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.dresser_lamp",
                                  "name": "Dresser",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.holly_nightstand_lamp",
                                  "name": "Nitestand",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.bedroom_fan_light",
                                  "name": "Fan Lite",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "fan.bedroom_fan",
                                  "name": "Fan",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  },
                                  "styles": ".bubble-icon {\n  color: ${state > 0 ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-range-fill { \n  background: var(--bubble-light-color, rgba(225, 225, 210)) !important;\n  opacity: 0.5 !important;\n}\n"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.bedroom_humidifier",
                                  "name": "Humidifier",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.bedroom_tv",
                                  "name": "TV",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            "switch.master_bath",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.master_bath_light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "fan.master_bath_fan",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            "switch.office",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "name": "Desk",
                                  "icon": "",
                                  "entity": "light.mike_desk_lamp"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.office_fan_light",
                                  "name": "Fan Lite",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "fan.office_fan",
                                  "name": "Fan",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  },
                                  "styles": ".bubble-icon {\n  color: ${state > 0 ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-range-fill { \n  background: var(--bubble-light-color, rgba(225, 225, 210)) !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.office_tv",
                                  "name": "TV",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.office_heater_plug",
                                  "name": "Heater",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.mike_desk_strip_plug_4_humidifier",
                                  "name": "Humifier",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            "switch.hall_bath",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.hall_bath_light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "fan.hall_bath_fan",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.guest_room_light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.hallway_light"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#middle-lights",
                          "button_type": "switch",
                          "sub_button": [
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#upstairs-lights"
                              },
                              "icon": "mdi:stairs-up"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#middle-lights"
                              },
                              "icon": "mdi:format-align-middle"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#downstairs-lights"
                              },
                              "icon": "mdi:stairs-down"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#outside-lights"
                              },
                              "icon": "mdi:image"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#bulbs"
                              },
                              "icon": "mdi:lightbulb"
                            }
                          ],
                          "show_header": true,
                          "name": "noname",
                          "show_name": false,
                          "show_icon": false,
                          "scrolling_effect": false
                        },
                        {
                          "type": "entities",
                          "entities": [
                            "switch.kitchen",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.kitchen_table_light",
                                  "name": "Table Light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.kitchen_overhead_light",
                                  "name": "Overhead Light"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            "switch.living_room",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.near_black_lamp",
                                  "name": "Near Black Lamp"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.far_black_lamp",
                                  "name": "Far Black Lamp"
                                }
                              ]
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.white_lamp",
                                  "name": "White Lamp",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.living_room_tv",
                                  "name": "TV",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            "switch.dining_room",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.dining_room_overhead_light",
                                  "name": "Dining Rm"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.dining_room_christmas_lights",
                                  "name": "Dining Rm Xmas"
                                }
                              ]
                            },
                            {
                              "type": "section"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.foyer_light",
                                  "name": "Foyer"
                                },
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#downstairs-lights",
                          "button_type": "switch",
                          "sub_button": [
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#upstairs-lights"
                              },
                              "icon": "mdi:stairs-up"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#middle-lights"
                              },
                              "icon": "mdi:format-align-middle"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#downstairs-lights"
                              },
                              "icon": "mdi:stairs-down"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#outside-lights"
                              },
                              "icon": "mdi:image"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#bulbs"
                              },
                              "icon": "mdi:lightbulb"
                            }
                          ],
                          "show_header": true,
                          "name": "noname",
                          "show_name": false,
                          "show_icon": false,
                          "scrolling_effect": false
                        },
                        {
                          "type": "entities",
                          "entities": [
                            "switch.downstairs",
                            {
                              "type": "section"
                            },
                            "switch.family_room",
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.god_damn_light",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.fireplace_light"
                                }
                              ]
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.god_damn_tv",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.three_headed_lamp"
                                }
                              ]
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.mantle_lights"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.christmas_tree",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section",
                              "label": "Laundry Room"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.laundry_room_light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.furnace_switch",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ]
                            },
                            {
                              "type": "section",
                              "label": "Den"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.den_overhead_light",
                                  "name": "Den Light"
                                },
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                }
                              ]
                            },
                            {
                              "type": "section",
                              "label": "Powder Room"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              },
                              "cards": [
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.powder_room_light",
                                  "name": "Powder Rm"
                                },
                                {
                                  "type": "custom:button-card",
                                  "color_type": "blank-card"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#outside-lights",
                          "button_type": "switch",
                          "sub_button": [
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#upstairs-lights"
                              },
                              "icon": "mdi:stairs-up"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#middle-lights"
                              },
                              "icon": "mdi:format-align-middle"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#downstairs-lights"
                              },
                              "icon": "mdi:stairs-down"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#outside-lights"
                              },
                              "icon": "mdi:image"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#bulbs"
                              },
                              "icon": "mdi:lightbulb"
                            }
                          ],
                          "show_header": true,
                          "name": "noname",
                          "show_name": false,
                          "show_icon": false,
                          "scrolling_effect": false
                        },
                        {
                          "type": "entities",
                          "entities": [
                            {
                              "entity": "switch.outside"
                            },
                            {
                              "type": "section"
                            },
                            {
                              "entity": "switch.garage"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.bench_light",
                                  "name": "Bench Light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.garage_door_light",
                                  "name": "Garage Door"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.far_garage_light",
                                  "name": "Far Light"
                                }
                              ],
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              }
                            },
                            {
                              "type": "section"
                            },
                            {
                              "entity": "switch.front_yard"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.front_porch_light",
                                  "name": "Front Porch",
                                  "button_type": "slider",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.outside_garage_lights",
                                  "name": "Garage"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "switch.outside_christmas_lights",
                                  "name": "Christmas",
                                  "styles": ".bubble-icon {\n  color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--icon-primary-color,currentcolor)'} !important;\n}\n.bubble-button-background {\n  background-color: ${state === 'on' ? 'var(--bubble-light-color, rgba(225, 225, 210))' : 'var(--bubble-button-background-color)'} !important;\n  opacity: 0.5 !important;\n}\n"
                                }
                              ],
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              }
                            },
                            {
                              "type": "section"
                            },
                            {
                              "entity": "switch.back_yard"
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.back_porch_light",
                                  "name": "Back Porch"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "button_type": "slider",
                                  "entity": "light.deck_lights",
                                  "tap_action": {
                                    "action": "toggle"
                                  },
                                  "hold_action": {
                                    "action": "more-info"
                                  }
                                }
                              ],
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              }
                            },
                            {
                              "type": "custom:stack-in-card",
                              "mode": "horizontal",
                              "cards": [
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.flood_light"
                                },
                                {
                                  "type": "custom:bubble-card",
                                  "card_type": "button",
                                  "entity": "light.shed_lamp"
                                }
                              ],
                              "card_mod": {
                                "style": "ha-card {\n  border: none;\n}\n"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "vertical-stack",
                      "cards": [
                        {
                          "type": "custom:bubble-card",
                          "card_type": "pop-up",
                          "hash": "#bulbs",
                          "button_type": "switch",
                          "sub_button": [
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#upstairs-lights"
                              },
                              "icon": "mdi:stairs-up"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#middle-lights"
                              },
                              "icon": "mdi:format-align-middle"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#downstairs-lights"
                              },
                              "icon": "mdi:stairs-down"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#outside-lights"
                              },
                              "icon": "mdi:image"
                            },
                            {
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "#bulbs"
                              },
                              "icon": "mdi:lightbulb"
                            }
                          ],
                          "show_header": true,
                          "name": "noname",
                          "show_name": false,
                          "show_icon": false,
                          "scrolling_effect": false
                        },
                        {
                          "type": "entities",
                          "entities": [
                            {
                              "entity": "light.white_switch"
                            },
                            {
                              "entity": "light.white_bulb"
                            },
                            {
                              "entity": "light.front_porch_switch"
                            },
                            {
                              "entity": "light.front_porch_bulb"
                            },
                            {
                              "entity": "light.dresser_switch"
                            },
                            {
                              "entity": "light.dresser_bulb"
                            },
                            {
                              "entity": "light.god_damn_switch"
                            },
                            {
                              "entity": "light.god_damn_bulb"
                            },
                            {
                              "entity": "light.holly_nightstand_bulb"
                            }
                          ],
                          "title": "Other Plugs",
                          "show_header_toggle": false
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "panel",
          "path": "security",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "tile",
                      "entity": "alarm_control_panel.home_alarm",
                      "features": [
                        {
                          "type": "alarm-modes",
                          "modes": [
                            "armed_home",
                            "armed_away",
                            "disarmed"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "binary_sensor.garage_entry_door_contact"
                        },
                        {
                          "entity": "cover.garage_door"
                        },
                        {
                          "entity": "binary_sensor.mailbox_sensor"
                        },
                        {
                          "entity": "binary_sensor.motion_sensors"
                        },
                        {
                          "entity": "binary_sensor.water_leak_sensors"
                        },
                        {
                          "entity": "binary_sensor.dining_room_freezer_door_contact"
                        },
                        {
                          "entity": "binary_sensor.dining_room_refrigerator_door_contact"
                        },
                        {
                          "entity": "binary_sensor.kitchen_freezer_door_contact"
                        },
                        {
                          "entity": "binary_sensor.kitchen_refrigerator_door_contact"
                        }
                      ],
                      "state_color": true
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "binary_sensor.bedroom_slider_contact"
                        },
                        {
                          "entity": "binary_sensor.front_door_contact"
                        },
                        {
                          "entity": "binary_sensor.living_room_slider_contact"
                        },
                        {
                          "entity": "binary_sensor.dining_room_slider_contact"
                        },
                        {
                          "entity": "binary_sensor.back_door_contact"
                        },
                        {
                          "entity": "binary_sensor.god_damn_slider_contact"
                        },
                        {
                          "entity": "binary_sensor.den_window_contact"
                        },
                        {
                          "entity": "binary_sensor.powder_room_window_contact"
                        },
                        {
                          "entity": "binary_sensor.shed_door_contact"
                        },
                        {
                          "entity": "binary_sensor.shed_gate_contact"
                        },
                        {
                          "entity": "binary_sensor.chimney_gate_contact"
                        }
                      ],
                      "state_color": true
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Security",
          "icon": "mdi:security"
        },
        {
          "type": "panel",
          "path": "sensors",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "tile",
                      "entity": "alarm_control_panel.home_alarm",
                      "features": [
                        {
                          "type": "alarm-modes",
                          "modes": [
                            "armed_home",
                            "armed_away",
                            "disarmed"
                          ]
                        }
                      ]
                    },
                    {
                      "type": "entities",
                      "state_color": true,
                      "entities": [
                        {
                          "entity": "binary_sensor.bedroom_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.office_door_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.wyzesense_778e716f"
                        },
                        {
                          "entity": "binary_sensor.living_room_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.god_damn_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.laundry_room_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.den_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.powder_room_motion_sensor_occupancy"
                        },
                        {
                          "entity": "binary_sensor.powder_room_water_leak_sensor_water_leak"
                        }
                      ],
                      "show_header_toggle": false
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "state_color": true,
                      "entities": [
                        {
                          "entity": "binary_sensor.hall_bath_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.hall_bath_sink_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.master_bath_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.dining_room_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.dining_room_refrigerator_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.kitchen_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.kitchen_refrigerator_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.living_room_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.god_damn_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.washer_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.water_heater_water_leak_sensor_water_leak"
                        },
                        {
                          "entity": "binary_sensor.den_water_leak_sensor_water_leak"
                        }
                      ],
                      "show_header_toggle": false
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Sensors",
          "icon": "mdi:shield-home"
        },
        {
          "type": "panel",
          "path": "cameras",
          "cards": [
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    }
                  ]
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.garage_cam",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    },
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.front_door_cam",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    },
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.front_door_cam_2",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    }
                  ]
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.shed_cam",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    },
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.backyard_cam",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    },
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "auto",
                      "type": "picture-entity",
                      "entity": "camera.chimney_cam",
                      "image": "https://demo.home-assistant.io/stub_config/bedroom.png"
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Cameras",
          "icon": "mdi:cctv"
        },
        {
          "type": "panel",
          "path": "cameras2",
          "cards": [
            {
              "type": "vertical-stack",
              "cards": [
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    }
                  ]
                },
                {
                  "square": false,
                  "type": "grid",
                  "columns": 3,
                  "cards": [
                    {
                      "type": "custom:bubble-card",
                      "card_type": "empty-column"
                    },
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "live",
                      "type": "picture-entity",
                      "entity": "camera.garage_door_cam",
                      "camera_image": "camera.garage_door_cam"
                    },
                    {
                      "type": "custom:bubble-card",
                      "card_type": "empty-column"
                    },
                    {
                      "type": "custom:bubble-card",
                      "card_type": "empty-column"
                    },
                    {
                      "square": false,
                      "type": "grid",
                      "columns": 4,
                      "cards": [
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.25,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "pan": "LEFT"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Left",
                          "icon": "mdi:arrow-left-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.25,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "pan": "RIGHT"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Right",
                          "icon": "mdi:arrow-right-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.5,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "tilt": "UP"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Up",
                          "icon": "mdi:arrow-up-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.5,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "tilt": "DOWN"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Down",
                          "icon": "mdi:arrow-down-bold"
                        }
                      ]
                    },
                    {
                      "type": "custom:bubble-card",
                      "card_type": "empty-column"
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Cameras2",
          "icon": "mdi:cctv"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: none;\n  }\n  td {\n    line-height: none;\n  }\n  td.left {\n    text-align: left;\n    border: none;\n    width: none;\n  }\n  td.right {\n    text-align: right;\n    border: none;\n  }\n  .on-icon {\n    color: var(--state-active-color);\n  }\n  .on-text {\n    color: var(--state-active-color);\n  }\n  .off-icon {\n    color: var(--paper-item-icon-color);\n  }\n  .off-text {\n    color: var(--primary-text-color);\n  }\n  .warning {\n    color: orange;\n  }\n</style> <table> {% for software in states | selectattr('entity_id', 'match', '^update\\.home_assistant_(core|operating_system|supervisor)_update$') | map(attribute='entity_id') | list -%} <tr> <td class=\"{{'off-icon' if states(software) == 'off' else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states(software) == 'off' else 'download'}}' /></td> <td class=\"left {{'off-text' if states(software) == 'off' else 'on-text'}}\"> {{ state_attr(software, 'title') | replace('Operating System', 'OS') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'installed_version') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'latest_version') }}</td> </tr> {% endfor -%} <tr><td colspan=\"4\"><hr width=\"100%\" /></td></tr> {% for software in states.sensor | selectattr('entity_id', 'match', '^sensor\\..*_version_latest$') | map(attribute='entity_id') | list | sort -%} <tr> <td class=\"{{'off-icon' if states(software|replace('_latest','')) == states(software) else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states(software|replace('_latest','')) == states(software) else 'download'}}' /></td> <td class=\"left {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\"> {{ state_attr(software|replace('_latest',''), 'friendly_name') | replace(' Version', '') }}</td> <td class=\"right {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\">{{ states(software|replace('_latest','')) }}</td> <td class=\"right {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\">{{ states(software) }}</td> </tr> {% endfor -%} <tr> <td class=\"{{'off-icon' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-icon'}}\"><ha-icon icon=\"mdi:briefcase-{{ 'check' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'download'}}\"></ha-icon></td> <td class=\"left {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">OPNsense</td> <td class=\"right {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">{{ states('sensor.opnsense_versions') }}</td> <td class=\"right {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">{{ state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] }}</td> </tr> {% for plugin in state_attr('sensor.opnsense_versions', 'plugins') -%} <tr> <td class=\"{{'off-icon' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'download'}}' /></td> <td class=\"left {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">OPNsense {{ plugin[:11] }}</td> <td class=\"right {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">{{ state_attr('sensor.opnsense_versions', 'plugins')[plugin] }}</td> <td class=\"right {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">{{ state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] }}</td> </tr> {% endfor -%} {% set ns = namespace(cv=[],lv=[]) %} {% for ap in state_attr('sensor.unifi_ap_versions', 'data') | sort(attribute=\"name\") -%} {% if ap['version'] not in ns.cv and ap['version_available'] not in ns.lv -%} {% set ns.cv=ns.cv + [ap['version']] -%} {% set ns.lv=ns.lv + [ap['version_available']] -%} <tr> <td class=\"{{'off-icon' if ap['version'] == ap['version_available'] else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if ap['version'] == ap['version_available'] else 'download'}}' /></td> <td class=\"left {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">Unifi {{ ap['name'] | replace('wap-','') | title }} AP</td> <td class=\"right {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">{{ ap['version'] }}</td> <td class=\"right {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">{{ ap['version_available'] }}</td> </tr> {% endif %} {% endfor -%} {% if state_attr('sensor.unifi_ap_versions', 'error') != False %}<tr><td class=warning> <ha-icon icon='mdi:alert-circle'></ha-icon></td><td colspan=\"3\" class=warning>Error: Could not load Unifi Data</td></tr>{% endif %}\n"
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n  }\n  td.left {\n    text-align: left;\n  }\n  td.right {\n    text-align: right;\n    border: none;\n  }\n  .on-icon {\n    color: var(--state-active-color);\n  }\n  .on-text {\n    color: var(--state-active-color);\n  }\n  .off-icon {\n    color: var(--paper-item-icon-color);\n  }\n  .off-text {\n    color: var(--primary-text-color);\n  }\n</style> <table> {% for software in states | selectattr('domain', 'equalto', 'update') | rejectattr('entity_id', 'match', '^update\\.home_assistant_(core|operating_system|supervisor)_update$') | map(attribute='entity_id') | list -%} {% if state_attr(software, 'title') != None and state_attr(software, 'device_class') != 'firmware' %} <tr> <td class=\"{{'off-icon' if states(software) == 'off' else 'on-icon'}}\"><ha-icon icon=\"mdi:briefcase-{{ 'check' if states(software) == 'off' else 'download'}}\" /></td> <td class=\"left {{'off-text' if states(software) == 'off' else 'on-text'}}\"> {{ state_attr(software, 'title') | replace('Home Assistant', '') | replace('Advanced SSH & Web Terminal', 'Advanced SSH') | replace('Google Drive Backup', 'Google Backup') | replace('UniFi Network Application', 'UniFi') | replace('Nginx Proxy Manager', 'Nginx Proxy') | replace('ESPHome Device Builder', 'ESPHome') | replace(' (Bitwarden)', '') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'installed_version') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'latest_version') }}</td> </tr>{% endif -%}{% endfor -%} </table>"
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Software",
          "icon": "mdi:home-assistant",
          "path": "software"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_good_night",
                            "target": {}
                          },
                          "entity": "script.scene_good_night",
                          "name": "Good Night",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_night_night",
                            "target": {}
                          },
                          "entity": "script.scene_night_night",
                          "name": "Night Night",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_leaving_home",
                            "target": {}
                          },
                          "entity": "script.scene_leaving_home",
                          "name": "Leaving",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.scene_movie_time",
                            "target": {}
                          },
                          "entity": "script.scene_movie_time",
                          "name": "Movie Time",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          }
                        }
                      ]
                    },
                    {
                      "type": "horizontal-stack",
                      "cards": [
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "script.tv_all_mute",
                            "target": {}
                          },
                          "entity": "script.tv_all_mute",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          },
                          "name": "Mute TVs"
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "switch.tarvos_plug",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "toggle"
                          },
                          "entity": "switch.petcam_plug",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          },
                          "name": "Pet Cam"
                        },
                        {
                          "show_name": true,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "perform-action",
                            "perform_action": "homeassistant.update_entity",
                            "target": {},
                            "data": {
                              "entity_id": [
                                "sensor.unavailable_entities"
                              ]
                            }
                          },
                          "entity": "sensor.unavailable_entities",
                          "show_state": false,
                          "hold_action": {
                            "action": "none"
                          },
                          "icon": "mdi:cloud-refresh-variant"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "person.holly_erdely",
                          "name": "Bed Presence",
                          "icon": "mdi:bed",
                          "type": "custom:multiple-entity-row",
                          "entities": [
                            {
                              "entity": "sensor.holly_is_in_bed",
                              "name": "Holly",
                              "styles": {
                                "color": "var(--holly-bed-color)"
                              }
                            },
                            {
                              "entity": "sensor.mike_is_in_bed",
                              "name": "Mike",
                              "styles": {
                                "color": "var(--mike-bed-color)"
                              }
                            }
                          ],
                          "show_state": false
                        },
                        {
                          "entity": "alarm_control_panel.home_alarm",
                          "name": "Security System",
                          "type": "custom:multiple-entity-row",
                          "entities": [
                            {
                              "entity": "binary_sensor.security_devices",
                              "styles": {
                                "color": "var(--security-color)"
                              }
                            },
                            {
                              "entity": "alarm_control_panel.home_alarm",
                              "name": "Alarm",
                              "styles": {
                                "color": "var(--alarm-color)"
                              }
                            }
                          ],
                          "show_state": false
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.bedroom_multisensor_temperature",
                          "name": "Temp",
                          "show_state": false,
                          "entities": [
                            {
                              "entity": "sensor.bedroom_temperature",
                              "name": "BR",
                              "unit": " ",
                              "styles": {
                                "color": "var(--bedroom-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.bedroom_humidity",
                              "name": "BR(h)",
                              "unit": " ",
                              "styles": {
                                "color": "var(--bedroom-humidity-color)"
                              }
                            },
                            {
                              "entity": "sensor.master_bath_temperature",
                              "name": "MB",
                              "unit": " ",
                              "styles": {
                                "color": "var(--master-bath-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.master_bath_humidity",
                              "name": "MB(h)",
                              "unit": " ",
                              "styles": {
                                "color": "var(--master-bath-humidity-color)"
                              }
                            },
                            {
                              "entity": "sensor.hall_bath_humidity",
                              "name": "HB(h)",
                              "unit": " ",
                              "styles": {
                                "color": "var(--hall-bath-humidity-color)"
                              }
                            },
                            {
                              "entity": "sensor.office_temperature",
                              "name": "Ofc",
                              "unit": " ",
                              "styles": {
                                "color": "var(--office-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.office_humidity",
                              "name": "Ofc(h)",
                              "unit": " ",
                              "styles": {
                                "color": "var(--office-humidity-color)"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.god_damn_multisensor_temperature",
                          "name": "Temp",
                          "show_state": false,
                          "entities": [
                            {
                              "entity": "climate.thermostat",
                              "styles": {
                                "color": "var(--thermostat-color)"
                              },
                              "name": "Tstat",
                              "attribute": "current_temperature",
                              "unit": " "
                            },
                            {
                              "entity": "sensor.attic_temperature",
                              "name": "Attic",
                              "unit": " ",
                              "styles": {
                                "color": "var(--attic-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.living_room_temperature",
                              "name": "LR",
                              "unit": " ",
                              "styles": {
                                "color": "var(--living-room-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.god_damn_temperature",
                              "name": "Down",
                              "unit": " ",
                              "styles": {
                                "color": "var(--god-damn-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.garage_temperature",
                              "name": "Garage",
                              "unit": " ",
                              "styles": {
                                "color": "var(--garage-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.outside_temperature",
                              "name": "Out",
                              "unit": " ",
                              "styles": {
                                "color": "var(--outside-temp-color)"
                              }
                            },
                            {
                              "entity": "sensor.outside_humidity",
                              "name": "Out(h)",
                              "unit": " ",
                              "styles": {
                                "color": "var(--outside-humidity-color)"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.downstairs_lights_on",
                          "name": "Lights",
                          "show_state": false,
                          "entities": [
                            {
                              "entity": "sensor.upstairs_lights_on",
                              "name": "Up",
                              "unit": false,
                              "styles": {
                                "color": "var(--upstairs-lights-color)"
                              }
                            },
                            {
                              "entity": "sensor.middle_level_lights_on",
                              "name": "Middle",
                              "unit": false,
                              "styles": {
                                "color": "var(--middle-level-lights-color)"
                              }
                            },
                            {
                              "entity": "sensor.downstairs_lights_on",
                              "name": "Down",
                              "unit": false,
                              "styles": {
                                "color": "var(--downstairs-lights-color)"
                              }
                            },
                            {
                              "entity": "sensor.garage_lights_on",
                              "name": "Garage",
                              "unit": false,
                              "styles": {
                                "color": "var(--garage-lights-color)"
                              }
                            },
                            {
                              "entity": "sensor.outside_lights_on",
                              "name": "Out",
                              "unit": false,
                              "styles": {
                                "color": "var(--outside-lights-color)"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.washer_and_dryer_state",
                          "name": "Status",
                          "show_state": false,
                          "entities": [
                            {
                              "entity": "sensor.washer_and_dryer_state",
                              "name": "Laundry",
                              "styles": {
                                "color": "var(--laundry-color)"
                              }
                            },
                            {
                              "entity": "binary_sensor.oven_is_on",
                              "name": "Oven",
                              "styles": {
                                "color": "var(--oven-color)"
                              }
                            },
                            {
                              "entity": "input_boolean.mail_delivered",
                              "styles": {
                                "color": "var(--mail-color)"
                              },
                              "tap_action": {
                                "action": "call-service",
                                "service": "input_boolean.toggle",
                                "service_data": {
                                  "entity_id": "input_boolean.mail_delivered"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.moco_recycle_day",
                          "name": "Schedule",
                          "icon": "mdi:calendar",
                          "entities": [
                            {
                              "entity": "sensor.days_until_cleaners",
                              "name": "Cleaners",
                              "styles": {
                                "color": "var(--cleaners-color)"
                              }
                            },
                            {
                              "entity": "sensor.trash",
                              "styles": {
                                "color": "var(--trash-color)"
                              },
                              "tap_action": {
                                "action": "call-service",
                                "service": "input_boolean.toggle",
                                "service_data": {
                                  "entity_id": "input_boolean.trash_is_out"
                                }
                              }
                            },
                            {
                              "entity": "sensor.moco_recycle_day",
                              "attribute": "days_string",
                              "name": "Recycle",
                              "styles": {
                                "color": "var(--recycle-color)"
                              },
                              "tap_action": {
                                "action": "call-service",
                                "service": "input_boolean.toggle",
                                "service_data": {
                                  "entity_id": "input_boolean.recycle_is_out"
                                }
                              }
                            },
                            {
                              "entity": "sensor.moco_recycle_day",
                              "name": "Recycle Day",
                              "styles": {
                                "color": "var(--recycle-color)"
                              },
                              "tap_action": {
                                "action": "call-service",
                                "service": "input_boolean.toggle",
                                "service_data": {
                                  "entity_id": "input_boolean.recycle_is_out"
                                }
                              }
                            }
                          ],
                          "show_state": false
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "sensor.printer_ink",
                          "show_state": false,
                          "entities": [
                            {
                              "attribute": "photoblack",
                              "name": "PB",
                              "styles": {
                                "color": "var(--photoblack-color)"
                              }
                            },
                            {
                              "attribute": "cyan",
                              "name": "C",
                              "styles": {
                                "color": "var(--cyan-color)"
                              }
                            },
                            {
                              "attribute": "magenta",
                              "name": "M",
                              "styles": {
                                "color": "var(--magenta-color)"
                              }
                            },
                            {
                              "attribute": "yellow",
                              "name": "Y",
                              "styles": {
                                "color": "var(--yellow-color)"
                              }
                            },
                            {
                              "attribute": "black",
                              "name": "K",
                              "styles": {
                                "color": "var(--black-color)"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "switch.mercury_screensaver",
                          "name": "Devices",
                          "show_state": false,
                          "entities": [
                            {
                              "entity": "switch.mercury_screensaver",
                              "name": "Mercury SS",
                              "styles": {
                                "color": "var(--mercury-screensaver-color)",
                                "width": "55px"
                              }
                            },
                            {
                              "entity": "switch.venus_screensaver",
                              "name": "Venus SS",
                              "styles": {
                                "color": "var(--venus-screensaver-color)",
                                "width": "50px"
                              }
                            },
                            {
                              "entity": "sensor.fully_kiosk_browser",
                              "name": "FKB",
                              "styles": {
                                "color": "var(--fkb-color)",
                                "width": "50px"
                              }
                            },
                            {
                              "entity": "sensor.fully_kiosk_browser_mbr",
                              "name": "FKB MBR",
                              "styles": {
                                "color": "var(--fkb-mbr-color)",
                                "width": "50px"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "binary_sensor.software_update_available",
                          "name": "HA",
                          "icon": "mdi:home-assistant",
                          "show_state": false,
                          "state_color": true,
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/hassio/dashboard"
                          },
                          "double_tap_action": {
                            "action": "more-info"
                          },
                          "hold_action": {
                            "action": "more-info"
                          },
                          "entities": [
                            {
                              "entity": "sensor.software_updates_available_count",
                              "name": "Updates",
                              "styles": {
                                "color": "var(--updates-color)"
                              },
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "/desktop-dashboard/home-assistant"
                              },
                              "double_tap_action": {
                                "action": "more-info"
                              },
                              "hold_action": {
                                "action": "more-info"
                              }
                            },
                            {
                              "entity": "sensor.unavailable_entities",
                              "name": "Unavailable",
                              "styles": {
                                "color": "var(--unavailable-color)"
                              },
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "/desktop-dashboard/utilities"
                              },
                              "double_tap_action": {
                                "action": "more-info"
                              },
                              "hold_action": {
                                "action": "more-info"
                              }
                            },
                            {
                              "entity": "sensor.ood_zigbee_entities",
                              "name": "Zigbee",
                              "styles": {
                                "color": "var(--zigbee-color)"
                              },
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "/desktop-dashboard/zigbee"
                              },
                              "double_tap_action": {
                                "action": "more-info"
                              },
                              "hold_action": {
                                "action": "more-info"
                              }
                            },
                            {
                              "entity": "sensor.ood_wyze_entities",
                              "name": "Wyze",
                              "styles": {
                                "color": "var(--wyze-color)"
                              },
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "/mobile-dashboard/wyze"
                              },
                              "double_tap_action": {
                                "action": "more-info"
                              },
                              "hold_action": {
                                "action": "more-info"
                              }
                            },
                            {
                              "entity": "binary_sensor.new_tv_show_list_ready",
                              "name": "TVList",
                              "styles": {
                                "color": "var(--tv-list-color)"
                              },
                              "tap_action": {
                                "action": "navigate",
                                "navigation_path": "/desktop-dashboard/tvs"
                              },
                              "double_tap_action": {
                                "action": "more-info"
                              },
                              "hold_action": {
                                "action": "more-info"
                              }
                            }
                          ]
                        }
                      ],
                      "card_mod": {
                        "style": "ha-card {\n  --black-color: {% if state_attr('sensor.printer_ink', 'black') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'black') | int(0) < 30 %}orange{%else%}grey{% endif %};\n  --cyan-color: {% if state_attr('sensor.printer_ink', 'cyan') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'cyan') | int(0) < 30 %}orange{%else%}cyan{% endif %};\n  --magenta-color: {% if state_attr('sensor.printer_ink', 'magenta') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'magenta') | int(0) < 30 %}orange{%else%}magenta{% endif %};\n  --yellow-color: {% if state_attr('sensor.printer_ink', 'yellow') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'yellow') | int(0) < 30 %}orange{%else%}yellow{% endif %};\n  --photoblack-color: {% if state_attr('sensor.printer_ink', 'photoblack') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'photoblack') | int(0) < 30 %}orange{%else%}grey{% endif %};\n  --holly-bed-color: {% if states('sensor.holly_is_in_bed') == 'In Bed' %}var(--state-active-color){% elif states('sensor.holly_is_in_bed') == 'Not In Bed' %}var(--primary-text-color){% else %}red{% endif %};\n  --mike-bed-color: {% if states('sensor.mike_is_in_bed') == 'In Bed' %}var(--state-active-color){% elif states('sensor.mike_is_in_bed') == 'Not In Bed' %}var(--primary-text-color){% else %}red{% endif %};\n  --security-color: {% if states('binary_sensor.security_devices') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --alarm-color: {% if states('alarm_control_panel.home_alarm') != 'disarmed' %}red{% else %}var(--primary-text-color){% endif %};\n\n  --thermostat-color: {% if state_attr('climate.thermostat', 'hvac_action') == \"heating\" %}orange{% elif state_attr('climate.thermostat', 'hvac_action') == \"cooling\" %}dodgerblue{% else %}var(--primary-text-color){% endif %};\n  --attic-temp-color: {% if states(\"sensor.attic_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.attic_temperature\") | int >= 90 %}orange{% endif %};\n  --bedroom-temp-color: {% if states(\"sensor.bedroom_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.bedroom_temperature\") | int >= 80 %}orange{% endif %};\n  --master-bath-temp-color: {% if states(\"sensor.master_bath_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.master_bath_temperature\") | int >= 80 %}orange{% endif %};\n  --office-temp-color: {% if states(\"sensor.office_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.office_temperature\") | int >= 80 %}orange{% endif %};\n  --living-room-temp-color: {% if states(\"sensor.living_room_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.living_room_temperature\") | int >= 80 %}orange{% endif %};\n  --god-damn-temp-color: {% if states(\"sensor.god_damn_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.god_damn_temperature\") | int >= 80 %}orange{% endif %};\n  --garage-temp-color: {% if states(\"sensor.garage_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.garage_temperature\") | int >= 90 %}orange{% endif %};\n  --outside-temp-color: {% if states(\"sensor.outside_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.outside_temperature\") | int >= 90 %}orange{% endif %};\n\n  --bedroom-humidity-color: {% if states(\"sensor.bedroom_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.bedroom_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --master-bath-humidity-color: {% if states(\"sensor.master_bath_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.master_bath_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --hall-bath-humidity-color: {% if states(\"sensor.hall_bath_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.hall_bath_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --office-humidity-color: {% if states(\"sensor.office_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.office_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --outside-humidity-color: {% if states(\"sensor.outside_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.outside_humidity\") | int(45) >= 50 %}orange{% endif %};\n\n  --upstairs-lights-color: {% if states('sensor.upstairs_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --middle-level-lights-color: {% if states('sensor.middle_level_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --downstairs-lights-color: {% if states('sensor.downstairs_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --garage-lights-color: {% if states('sensor.garage_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --outside-lights-color: {% if states('sensor.outside_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --wyzecam-color: {% if states('binary_sensor.wyzecam_status') != 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --laundry-color: {% if states('sensor.washer_and_dryer_state') != 'Laundry Idle' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --oven-color: {% if states('binary_sensor.oven_is_on') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --recycle-color: {% if state_attr('sensor.moco_recycle_day', 'days_string') == 'Tomorrow' and is_state('input_boolean.recycle_is_out', 'off') %}var(--state-active-color){% elif state_attr('sensor.moco_recycle_day', 'days_string') == 'Today' and is_state('input_boolean.recycle_is_out', 'off') %}red{% else %}var(--primary-text-color){% endif %};\n  --cleaners-color: {% if is_state('sensor.days_until_cleaners', 'Tomorrow') %}var(--state-active-color){% elif is_state('sensor.days_until_cleaners', 'Today') %}#00FF00{% else %}var(--primary-text-color){% endif %};\n  --trash-color: {% if is_state('sensor.trash', 'Tomorrow') and is_state('input_boolean.trash_is_out', 'off') %}var(--state-active-color){% elif is_state('sensor.trash', 'Today') and is_state('input_boolean.trash_is_out', 'off') %}red{% else %}var(--primary-text-color){% endif %};\n  --unavailable-color: {% if states('sensor.unavailable_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --updates-color: {% if states('sensor.software_updates_available_count') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --zigbee-color: {% if states('sensor.ood_zigbee_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --wyze-color: {% if states('sensor.ood_wyze_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --tv-list-color: {% if states('binary_sensor.new_tv_show_list_ready') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --mercury-screensaver-color: {% if states('switch.mercury_screensaver') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --venus-screensaver-color: {% if states('switch.venus_screensaver') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --mail-color: {% if states('input_boolean.mail_delivered') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --fkb-color: {% if states('sensor.fully_kiosk_browser') | int(100) < 20 %}red{% elif states('sensor.fully_kiosk_browser') | int(100) < 30 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --fkb-mbr-color: {% if states('sensor.fully_kiosk_browser_mbr') | int(100) < 20 %}red{% elif states('sensor.fully_kiosk_browser_mbr') | int(100) < 30 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n}\n"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Utilities",
          "icon": "mdi:tools",
          "path": "utilities"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[^F-Zf-z]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[G-Kg-k]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Plugs",
          "icon": "mdi:power-plug",
          "path": "plugs"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[Ll]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[Mm]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Plugs2",
          "icon": "mdi:power-plug",
          "path": "plugs2"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[O-So-s]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "show_header_toggle": false,
                        "card_mod": {
                          "style": "#states > div {\n  margin: 0px 0px 0px 0px !important;\n  height: 30px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "domain": "switch",
                            "entity_id": "*plug*",
                            "name": "[T-Zt-z]*"
                          }
                        ],
                        "exclude": [
                          {
                            "entity_id": "*auto_off*"
                          },
                          {
                            "entity_id": "*led_disabled_night*"
                          },
                          {
                            "entity_id": "*power_outage_memory*"
                          }
                        ]
                      },
                      "sort": {
                        "method": "name"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Plugs3",
          "icon": "mdi:power-plug",
          "path": "plugs3"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "custom:auto-entities",
                      "card": {
                        "type": "entities",
                        "card_mod": {
                          "style": ".card-content {\n  padding: 8px !important;\n  font-size: 14px;\n  line-height: 16px !important;\n  flex: 0 0 16px !important;\n  --mdc-icon-size: 16px;\n}\n"
                        }
                      },
                      "filter": {
                        "include": [
                          {
                            "entity_id": "sensor.unavailable_entities",
                            "options": {
                              "style": "* {\n  height: 16px !important;\n  {% if states(\"this.entity_id\") != \"0\" %}\n  color: var(--state-active-color);\n  {% endif %}\n}\n",
                              "tap_action": {
                                "action": "call-service",
                                "service": "homeassistant.update_entity",
                                "service_data": {},
                                "target": {
                                  "entity_id": "this.entity_id"
                                }
                              }
                            }
                          },
                          {
                            "entity_id": "/_version$/",
                            "domain": "sensor",
                            "options": {
                              "style": "* {\n  height: 16px !important;\n  {% if states(\"this.entity_id\") != states(\"this.entity_id_latest\") %}\n  color: var(--state-active-color);\n  {% endif %}\n}\n",
                              "tap_action": {
                                "action": "call-service",
                                "service": "homeassistant.update_entity",
                                "service_data": {},
                                "target": {
                                  "entity_id": "this.entity_id"
                                }
                              },
                              "sort": "name"
                            },
                            "not": {
                              "entity_id": "/^sensor\\.(ha_.*|hacs_.*|pixel_.*|.*_firmware|home_assistant)_version$/"
                            }
                          }
                        ],
                        "exclude": []
                      },
                      "sort": {
                        "method": "none"
                      }
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "sensor.ood_zigbee_entities"
                        },
                        {
                          "type": "attribute",
                          "entity": "sensor.ood_zigbee_entities",
                          "attribute": "entity_list",
                          "name": " ",
                          "icon": " "
                        }
                      ]
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "sensor.ood_wyze_entities"
                        },
                        {
                          "type": "attribute",
                          "entity": "sensor.ood_wyze_entities",
                          "attribute": "entity_list",
                          "name": " ",
                          "icon": " "
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "sensor.unavailable_entities"
                        },
                        {
                          "type": "attribute",
                          "entity": "sensor.unavailable_entities",
                          "attribute": "entity_list",
                          "name": " ",
                          "icon": " "
                        }
                      ]
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "script.fix_in_bed_sensors",
                              "name": "Bed Sensors"
                            },
                            {
                              "entity": "script.0000000mwe",
                              "name": "Fix 3-way Lights",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.0000000mwe"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "sensor.opnsense_package_versions",
                              "name": "OpnSense",
                              "icon": "mdi:briefcase-download",
                              "tap_action": {
                                "action": "call-service",
                                "service": "homeassistant.update_entity",
                                "service_data": {
                                  "entity_id": [
                                    "sensor.opnsense_package_versions",
                                    "sensor.opnsense_versions"
                                  ]
                                }
                              }
                            },
                            {
                              "entity": "cover.garage_door",
                              "name": "Garage Closed",
                              "icon": "mdi:garage",
                              "tap_action": {
                                "action": "call-service",
                                "service": "python_script.set_state",
                                "service_data": {
                                  "entity_id": "cover.garage_door",
                                  "state": "closed"
                                }
                              }
                            },
                            {
                              "entity": "cover.garage_door",
                              "name": "Garage Open",
                              "icon": "mdi:garage-open",
                              "tap_action": {
                                "action": "call-service",
                                "service": "python_script.set_state",
                                "service_data": {
                                  "entity_id": "cover.garage_door",
                                  "state": "open"
                                }
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Problems",
          "icon": "mdi:help-rhombus",
          "path": "problems"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "switch.bedroom_tv",
                          "show_state": false,
                          "state_color": true,
                          "entities": [
                            {
                              "entity": "script.tv_bedroom_sleep",
                              "name": false,
                              "show_icon": true,
                              "icon": "mdi:sleep",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.tv_bedroom_sleep"
                              }
                            },
                            {
                              "entity": "switch.bedroom_tv",
                              "name": "TV",
                              "toggle": true
                            }
                          ]
                        },
                        {
                          "entity": "media_player.bedroom_roku"
                        },
                        {
                          "entity": "input_select.bedroom_plex_show"
                        }
                      ],
                      "show_header_toggle": false,
                      "title": "Bedroom TV"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "switch.office_tv",
                          "show_state": false,
                          "state_color": true,
                          "entities": [
                            {
                              "entity": "script.tv_office_sleep",
                              "name": false,
                              "show_icon": true,
                              "icon": "mdi:sleep",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.tv_office_sleep"
                              }
                            }
                          ]
                        },
                        {
                          "entity": "media_player.office_roku_tv"
                        },
                        {
                          "entity": "input_select.office_plex_show"
                        }
                      ],
                      "show_header_toggle": false,
                      "title": "Office TV"
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "switch.living_room_tv",
                          "show_state": false,
                          "state_color": true,
                          "entities": [
                            {
                              "entity": "script.tv_living_room_sleep",
                              "name": false,
                              "show_icon": true,
                              "icon": "mdi:sleep",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.tv_living_room_sleep"
                              }
                            }
                          ]
                        },
                        {
                          "entity": "media_player.living_room_roku_tv"
                        },
                        {
                          "entity": "input_select.living_room_plex_show"
                        }
                      ],
                      "show_header_toggle": false,
                      "title": "Living Room TV"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "custom:multiple-entity-row",
                          "entity": "switch.god_damn_tv",
                          "show_state": false,
                          "state_color": true,
                          "entities": [
                            {
                              "entity": "script.tv_god_damn_sleep",
                              "name": false,
                              "show_icon": true,
                              "icon": "mdi:sleep",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.tv_god_damn_sleep"
                              }
                            },
                            {
                              "entity": "switch.god_damn_tv",
                              "name": "TV",
                              "toggle": true
                            }
                          ]
                        },
                        {
                          "entity": "media_player.god_damn_roku"
                        },
                        {
                          "entity": "input_select.god_damn_plex_show"
                        }
                      ],
                      "show_header_toggle": false,
                      "title": "God Damn TV"
                    }
                  ]
                }
              ]
            }
          ],
          "title": "TVs",
          "icon": "mdi:television-box",
          "path": "tvs"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "media-control",
                      "entity": "media_player.spotify_merdely"
                    },
                    {
                      "type": "grid",
                      "columns": 1,
                      "cards": [
                        {
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "media_player.media_stop",
                            "service_data": {},
                            "target": {
                              "device_id": "fa14bbd400eef1712ddcabb2a3eaa268"
                            }
                          },
                          "entity": "media_player.spotify_merdely",
                          "show_name": true,
                          "icon": "mdi:play-pause",
                          "show_state": true,
                          "name": "Spotify Music Player",
                          "hold_action": {
                            "action": "none"
                          },
                          "icon_height": "40px"
                        }
                      ],
                      "square": false
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "media_player.spotify_merdely",
                          "attribute": "media_playlist",
                          "type": "attribute",
                          "name": "Spotify Playlist",
                          "icon": "mdi:playlist-music"
                        },
                        {
                          "entity": "media_player.spotify_merdely",
                          "attribute": "source_list",
                          "type": "attribute",
                          "name": "Speakers",
                          "icon": "mdi:speaker-multiple"
                        }
                      ],
                      "state_color": false
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "custom:spotify-card",
                      "limit": 20,
                      "spotify_entity": "media_player.spotify_merdely",
                      "playlist_type": "default",
                      "account": "default",
                      "always_play_random_song": true,
                      "display_style": "list",
                      "hide_playback_controls": true,
                      "height": 460,
                      "hide_top_header": true
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Music",
          "icon": "mdi:spotify",
          "path": "music"
        },
        {
          "type": "panel",
          "cards": [
            {
              "square": false,
              "type": "grid",
              "columns": 2,
              "cards": [
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td {\n    text-align: center;\n    line-height: 1;\n  }\n  td.left {\n    width: 36%;\n  }\n  td.right {\n    border-left: 2px solid white;\n  }\n  .clock {\n    font-size: 56px;\n  }\n  .battery-status {\n    font-size: 56px;\n  }\n  .battery-status ha-icon {\n    color: var(--paper-item-icon-color);\n    --mdc-icon-size: 56px;\n  }\n</style> <table> <tr> <td class=left><span class=clock> {{ states('sensor.time_formatted') }} </span></td> <td class=right><span class=battery-status> <ha-icon icon=\"mdi:battery\"></ha-icon> Panel: {{ states(\"sensor.fkb_control_panel\") }}%</span></td> </tr> </table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "media_player.all_speakers"
                        },
                        {
                          "entity": "media_player.upstairs_speakers"
                        },
                        {
                          "entity": "media_player.bedroom_speaker"
                        },
                        {
                          "entity": "media_player.office_speakers"
                        },
                        {
                          "entity": "media_player.mike_s_desk_speaker"
                        },
                        {
                          "entity": "media_player.office_speaker"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "vertical-stack",
                  "cards": [
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n    height: 110px;\n  }\n  td.left1 {\n    text-align: left;\n    line-height: 1;\n    font-size: 32px;\n    width: 20%;\n  }\n  td.right1 {\n    text-align: right;\n    line-height: 1;\n    font-size: 32px;\n  }\n</style> <table><tr> {% if states(\"binary_sensor.spotify_broadcasting\") != \"on\" %} <td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/1eff89eb8cf2ec38f5f4701ab7a00689/512x512\"  width=30 /> Holly</td> <td class=right1>{{ states('sensor.holly_location') }}</font></td></tr> <tr><td class=left1> <img src=\"https://ha.erdely.in:38123/api/image/serve/dade8a881b4f376c3264e663e28fbda9/512x512\" width=30 /> Mike</td> <td class=right1>{{ states('sensor.mike_location') }}</font></td> {% else %} <td><ha-icon icon=\"mdi:spotify\"></ha-icon> {% if states(\"sensor.spotify_artist_title\") == \"None - None\" %}Nothing playing{% else %}{{ states(\"sensor.spotify_artist_title\") }}{% endif %}</tr> {% endif %} </tr></table>\n"
                    },
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "media_player.downstairs_speakers"
                        },
                        {
                          "entity": "media_player.kitchen_speaker"
                        },
                        {
                          "entity": "media_player.living_room_speaker"
                        },
                        {
                          "entity": "media_player.god_damn_speaker"
                        },
                        {
                          "entity": "media_player.garage_speaker"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "title": "Speakers",
          "icon": "mdi:speaker-multiple",
          "path": "speakers"
        }
      ]
    }
  }
}