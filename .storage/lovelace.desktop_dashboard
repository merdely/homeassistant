{
  "version": 1,
  "minor_version": 1,
  "key": "lovelace.desktop_dashboard",
  "data": {
    "config": {
      "views": [
        {
          "type": "sections",
          "max_columns": 3,
          "title": "Home",
          "path": "home",
          "icon": "mdi:home",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "switch.upstairs"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.bedroom",
                          "name": "BR:",
                          "icon": " "
                        },
                        {
                          "entity": "light.dresser_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.holly_nightstand_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.bedroom_fan_light",
                          "name": false
                        },
                        {
                          "entity": "fan.bedroom_fan",
                          "name": false
                        },
                        {
                          "entity": "switch.bedroom_tv",
                          "name": false
                        },
                        {
                          "entity": "switch.bedroom_humidifier",
                          "name": false
                        },
                        {
                          "entity": "light.master_bath_light",
                          "name": false
                        },
                        {
                          "entity": "switch.master_bath_fan",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.office",
                          "name": "Office:",
                          "icon": " "
                        },
                        {
                          "entity": "light.mike_desk_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.office_fan_light",
                          "name": false
                        },
                        {
                          "entity": "fan.office_fan",
                          "name": false
                        },
                        {
                          "entity": "switch.office_heater_plug",
                          "name": false
                        },
                        {
                          "entity": "switch.office_tv",
                          "name": false
                        },
                        {
                          "entity": "switch.mike_desk_strip_plug_4_humidifier",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "light.guest_room_light",
                          "name": "Guest Room:",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "light.hallway_light",
                          "name": "Hallway:",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "light.hall_bath_light",
                          "name": "Hall Bath: ",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "fan.hall_bath_fan",
                          "name": false,
                          "layout": "name|icon"
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "switch.middle_level"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.kitchen",
                          "name": "Kitchen:",
                          "icon": " "
                        },
                        {
                          "entity": "light.kitchen_table_light",
                          "name": false
                        },
                        {
                          "entity": "light.kitchen_overhead_light",
                          "name": false
                        },
                        {
                          "entity": "switch.dining_room",
                          "name": "Dining:",
                          "icon": " "
                        },
                        {
                          "entity": "light.dining_room_overhead_light",
                          "name": false
                        },
                        {
                          "entity": "light.dining_room_christmas_lights",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.living_room",
                          "name": "LR:",
                          "icon": " "
                        },
                        {
                          "entity": "light.near_black_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.far_black_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.white_lamp",
                          "name": false
                        },
                        {
                          "entity": "switch.living_room_tv",
                          "name": false
                        },
                        {
                          "entity": "light.foyer_light",
                          "name": "Foyer :",
                          "layout": "name|icon"
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "switch.downstairs"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.kitchen",
                          "name": "Family Room:",
                          "icon": " "
                        },
                        {
                          "entity": "light.god_damn_light",
                          "name": false
                        },
                        {
                          "entity": "light.fireplace_light",
                          "name": false
                        },
                        {
                          "entity": "light.three_headed_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.mantle_lights",
                          "name": false
                        },
                        {
                          "entity": "switch.christmas_tree",
                          "name": false
                        },
                        {
                          "entity": "switch.god_damn_tv",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "light.laundry_room_light",
                          "name": "Laundry: ",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "switch.furnace_switch",
                          "name": false
                        },
                        {
                          "entity": "light.den_overhead_light",
                          "name": "Den: ",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "light.powder_room_light",
                          "name": "Powder Room: ",
                          "layout": "name|icon"
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "switch.garage"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "light.bench_light",
                          "name": "Bench",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "light.garage_door_light",
                          "name": "Middle",
                          "layout": "name|icon"
                        },
                        {
                          "entity": "light.far_garage_light",
                          "name": "Far",
                          "layout": "name|icon"
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "switch.outside"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.front_yard",
                          "name": "Front:",
                          "icon": " "
                        },
                        {
                          "entity": "light.front_porch_light",
                          "name": false
                        },
                        {
                          "entity": "light.outside_garage_lights",
                          "name": false
                        },
                        {
                          "entity": "switch.outside_christmas_lights",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.back_yard",
                          "name": "Back:",
                          "icon": " "
                        },
                        {
                          "entity": "light.back_porch_light",
                          "name": false
                        },
                        {
                          "entity": "light.deck_lights",
                          "name": false
                        },
                        {
                          "entity": "light.shed_lamp",
                          "name": false
                        },
                        {
                          "entity": "light.flood_light",
                          "name": false
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "buttons": [
                        {
                          "entity": "lock.front_door_zwave",
                          "name": "Front Door"
                        },
                        {
                          "entity": "lock.garage_entry_door",
                          "tap_action": {
                            "action": "call-service",
                            "service": "script.locking_garage_entry_door_toggle"
                          }
                        },
                        {
                          "entity": "cover.garage_door",
                          "active": "open",
                          "styles": {
                            "button": {
                              "color": "{% if states(\"cover.garage_door\") == \"open\" %}\n  rgb(244,67,54)\n{% else %}\n  rgb(76,175,80)\n{% endif %}"
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "state_color": false,
                  "show_header_toggle": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "person.holly_erdely",
                      "name": "Who's Home",
                      "icon": "mdi:compass-outline",
                      "type": "custom:multiple-entity-row",
                      "entities": [
                        {
                          "entity": "person.holly_erdely",
                          "name": "Holly"
                        },
                        {
                          "entity": "person.michael_erdely",
                          "name": "Mike"
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "entity": "person.holly_erdely",
                      "name": "Who's in Bed",
                      "icon": "mdi:bed",
                      "type": "custom:multiple-entity-row",
                      "entities": [
                        {
                          "entity": "sensor.holly_is_in_bed",
                          "name": "Holly",
                          "styles": {
                            "color": "var(--holly-bed-color)"
                          }
                        },
                        {
                          "entity": "sensor.mike_is_in_bed",
                          "name": "Mike",
                          "styles": {
                            "color": "var(--mike-bed-color)"
                          }
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "entity": "alarm_control_panel.home_alarm",
                      "name": "Security System",
                      "type": "custom:multiple-entity-row",
                      "entities": [
                        {
                          "entity": "binary_sensor.security_devices",
                          "name": "Security Devices",
                          "styles": {
                            "color": "var(--security-color)"
                          }
                        },
                        {
                          "entity": "alarm_control_panel.home_alarm",
                          "name": "Alarm",
                          "styles": {
                            "color": "var(--alarm-color)"
                          }
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "entity": "binary_sensor.motion_sensors",
                      "name": "Motion Sensors",
                      "type": "custom:multiple-entity-row",
                      "show_state": false,
                      "entities": [
                        {
                          "entity": "binary_sensor.upstairs_motion_sensors",
                          "name": "Upstairs",
                          "styles": {
                            "color": "var(--up-motion-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.middle_level_motion_sensors",
                          "name": "Middle",
                          "styles": {
                            "color": "var(--middle-motion-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.downstairs_motion_sensors",
                          "name": "Downstairs",
                          "styles": {
                            "color": "var(--down-motion-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.outside_motion_sensors",
                          "name": "Outside",
                          "styles": {
                            "color": "var(--out-motion-color)"
                          }
                        }
                      ]
                    },
                    {
                      "entity": "binary_sensor.water_leak_sensors",
                      "name": "Water Leak Sensors",
                      "type": "custom:multiple-entity-row",
                      "entities": [
                        {
                          "entity": "binary_sensor.upstairs_water_leak_sensors",
                          "name": "Upstairs",
                          "styles": {
                            "color": "var(--up-water-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.middle_level_water_leak_sensors",
                          "name": "Downstairs",
                          "styles": {
                            "color": "var(--middle-water-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.downstairs_water_leak_sensors",
                          "name": "Downstairs",
                          "styles": {
                            "color": "var(--down-water-color)"
                          }
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "entity": "binary_sensor.all_doors_windows_gates",
                      "name": "Doors/Windows/Gates",
                      "type": "custom:multiple-entity-row",
                      "entities": [
                        {
                          "entity": "binary_sensor.fridge_and_freezer_doors",
                          "name": "Fridge/Freezers",
                          "styles": {
                            "color": "var(--fridges-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.interior_doors_and_windows",
                          "name": "Interior",
                          "styles": {
                            "color": "var(--int-doors-windows-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.exterior_doors_and_gates",
                          "name": "Exterior",
                          "styles": {
                            "color": "var(--ext-doors-gates-color)"
                          }
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "entity": "cover.garage_door",
                      "type": "custom:multiple-entity-row",
                      "show_state": false,
                      "state_color": false,
                      "name": "Outside Sensors",
                      "entities": [
                        {
                          "entity": "binary_sensor.front_door_open",
                          "name": "FrontDoor",
                          "styles": {
                            "color": "var(--front-door-sensor-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.mailbox_sensor",
                          "name": "Mailbox",
                          "styles": {
                            "color": "var(--mailbox-sensor-color)"
                          }
                        },
                        {
                          "entity": "cover.garage_door",
                          "name": "GargDoor",
                          "styles": {
                            "color": "var(--garage-door-sensor-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.garage_door_motion_occupancy",
                          "name": "GargMotion",
                          "styles": {
                            "color": "var(--garage-door-motion-sensor-color)"
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "sensor.downstairs_lights_on",
                      "name": "Lights",
                      "show_state": false,
                      "entities": [
                        {
                          "entity": "sensor.upstairs_lights_on",
                          "name": "Up",
                          "unit": false,
                          "styles": {
                            "color": "var(--upstairs-lights-color)"
                          }
                        },
                        {
                          "entity": "sensor.middle_level_lights_on",
                          "name": "Middle",
                          "unit": false,
                          "styles": {
                            "color": "var(--middle-level-lights-color)"
                          }
                        },
                        {
                          "entity": "sensor.downstairs_lights_on",
                          "name": "Down",
                          "unit": false,
                          "styles": {
                            "color": "var(--downstairs-lights-color)"
                          }
                        },
                        {
                          "entity": "sensor.garage_lights_on",
                          "name": "Garage",
                          "unit": false,
                          "styles": {
                            "color": "var(--garage-lights-color)"
                          }
                        },
                        {
                          "entity": "sensor.outside_lights_on",
                          "name": "Out",
                          "unit": false,
                          "styles": {
                            "color": "var(--outside-lights-color)"
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "sensor.washer_and_dryer_state",
                      "name": "Status",
                      "show_state": false,
                      "entities": [
                        {
                          "entity": "sensor.washer_and_dryer_state",
                          "name": "Laundry",
                          "styles": {
                            "color": "var(--laundry-color)"
                          }
                        },
                        {
                          "entity": "binary_sensor.oven_is_on",
                          "name": "Oven",
                          "styles": {
                            "color": "var(--oven-color)"
                          }
                        },
                        {
                          "entity": "input_boolean.mail_delivered",
                          "styles": {
                            "color": "var(--mail-color)"
                          },
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.mail_delivered"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "sensor.moco_recycle_day",
                      "name": "Schedule",
                      "icon": "mdi:calendar",
                      "entities": [
                        {
                          "entity": "sensor.days_until_cleaners",
                          "name": "Cleaners",
                          "styles": {
                            "color": "var(--cleaners-color)",
                            "width": "55px"
                          }
                        },
                        {
                          "entity": "sensor.trash",
                          "styles": {
                            "color": "var(--trash-color)",
                            "width": "60px"
                          },
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.trash_is_out"
                            }
                          }
                        },
                        {
                          "entity": "sensor.moco_recycle_day",
                          "attribute": "days_string",
                          "name": "Recycle",
                          "styles": {
                            "color": "var(--recycle-color)",
                            "width": "60px"
                          },
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.recycle_is_out"
                            }
                          }
                        },
                        {
                          "entity": "sensor.moco_recycle_day",
                          "name": "Recycle Day",
                          "attribute": "recycle_day",
                          "styles": {
                            "color": "var(--recycle-color)",
                            "width": "60px"
                          },
                          "tap_action": {
                            "action": "call-service",
                            "service": "input_boolean.toggle",
                            "service_data": {
                              "entity_id": "input_boolean.recycle_is_out"
                            }
                          }
                        }
                      ],
                      "show_state": false
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "sensor.printer_ink",
                      "show_state": false,
                      "entities": [
                        {
                          "attribute": "photoblack",
                          "name": "PB",
                          "styles": {
                            "color": "var(--photoblack-color)"
                          }
                        },
                        {
                          "attribute": "cyan",
                          "name": "C",
                          "styles": {
                            "color": "var(--cyan-color)"
                          }
                        },
                        {
                          "attribute": "magenta",
                          "name": "M",
                          "styles": {
                            "color": "var(--magenta-color)"
                          }
                        },
                        {
                          "attribute": "yellow",
                          "name": "Y",
                          "styles": {
                            "color": "var(--yellow-color)"
                          }
                        },
                        {
                          "attribute": "black",
                          "name": "K",
                          "styles": {
                            "color": "var(--black-color)"
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "switch.mercury_screensaver",
                      "name": "Devices",
                      "show_state": false,
                      "entities": [
                        {
                          "entity": "switch.mercury_screensaver",
                          "name": "Mercury SS",
                          "styles": {
                            "color": "var(--mercury-screensaver-color)",
                            "width": "55px"
                          }
                        },
                        {
                          "entity": "switch.venus_screensaver",
                          "name": "Venus SS",
                          "styles": {
                            "color": "var(--venus-screensaver-color)",
                            "width": "50px"
                          }
                        },
                        {
                          "entity": "sensor.fully_kiosk_browser",
                          "name": "FKB",
                          "styles": {
                            "color": "var(--fkb-color)",
                            "width": "50px"
                          }
                        },
                        {
                          "entity": "sensor.fully_kiosk_browser_mbr",
                          "name": "FKB MBR",
                          "styles": {
                            "color": "var(--fkb-mbr-color)",
                            "width": "50px"
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "binary_sensor.software_update_available",
                      "name": "HA",
                      "icon": "mdi:home-assistant",
                      "show_state": false,
                      "state_color": true,
                      "tap_action": {
                        "action": "navigate",
                        "navigation_path": "/hassio/dashboard"
                      },
                      "double_tap_action": {
                        "action": "more-info"
                      },
                      "hold_action": {
                        "action": "more-info"
                      },
                      "entities": [
                        {
                          "entity": "sensor.software_updates_available_count",
                          "name": "Updates",
                          "styles": {
                            "color": "var(--updates-color)"
                          },
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/desktop-dashboard/home-assistant"
                          },
                          "double_tap_action": {
                            "action": "more-info"
                          },
                          "hold_action": {
                            "action": "more-info"
                          }
                        },
                        {
                          "entity": "sensor.unavailable_entities",
                          "name": "Unavailable",
                          "styles": {
                            "color": "var(--unavailable-color)"
                          },
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/desktop-dashboard/utilities"
                          },
                          "double_tap_action": {
                            "action": "more-info"
                          },
                          "hold_action": {
                            "action": "more-info"
                          }
                        },
                        {
                          "entity": "sensor.ood_zigbee_entities",
                          "name": "Zigbee",
                          "styles": {
                            "color": "var(--zigbee-color)"
                          },
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/desktop-dashboard/zigbee"
                          },
                          "double_tap_action": {
                            "action": "more-info"
                          },
                          "hold_action": {
                            "action": "more-info"
                          }
                        },
                        {
                          "entity": "sensor.office_shelf_motion_sensor_days_since_seen",
                          "name": "Off Motion",
                          "unit": false,
                          "styles": {
                            "color": "var(--office-shelf-motion-sensor-door-days-color)",
                            "width": "55px"
                          }
                        },
                        {
                          "entity": "sensor.mailbox_sensor_days_since_seen",
                          "name": "Mailbox",
                          "unit": false,
                          "styles": {
                            "color": "var(--mailbox-sensor-days-color)"
                          }
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.petcam_plug",
                          "name": "Pet Cam"
                        },
                        {
                          "entity": "script.scene_good_night",
                          "name": "Good Night"
                        },
                        {
                          "entity": "script.zigbee_bulbs_keepalive",
                          "name": "Fix Zigbee Bulbs"
                        }
                      ]
                    },
                    {
                      "type": "section"
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "sensor.plex_plex",
                      "name": "Plex & Jellyfin Streaming",
                      "show_state": false,
                      "state_color": true,
                      "double_tap_action": {
                        "action": "more-info"
                      },
                      "hold_action": {
                        "action": "more-info"
                      },
                      "entities": [
                        {
                          "entity": "sensor.plex_plex",
                          "name": "Plex",
                          "styles": {
                            "color": "var(--plex-color)"
                          }
                        },
                        {
                          "entity": "sensor.jellyfin_watching",
                          "name": "Jellyfin",
                          "styles": {
                            "color": "var(--jellyfin-color)"
                          }
                        }
                      ]
                    },
                    {
                      "type": "custom:html-template-card",
                      "ignore_line_breaks": true,
                      "content": "<style>\n  table {\n    width: 100%;\n  }\n  tr:nth-child(odd) {\n    background-color: var(--secondary-background-color);\n</style> <table> {% if states.sensor.plex_plex != None -%}{% for client, value in states.sensor.plex_watching.attributes.sessions.items() -%} {% if client != \"unit_of_measurement\" and client != \"friendly_name\" %} <tr><td>＞</td><td>{{ client | regex_replace('(_+)? - .*$', '') }}</td><td> {{ value }}</td></tr> {% endif -%} {% endfor -%} {% endif -%} {% if states.sensor.jellyfin_sessions != None -%}{% for client, value in states.sensor.jellyfin_sessions.attributes.sessions.items() -%} <tr><td>⟁</td><td>{{ client | regex_replace('(_+)? - .*$', '') }}</td><td> {{ value }}</td></tr> {% endfor -%}{% endif -%} </table>\n"
                    }
                  ],
                  "card_mod": {
                    "style": "ha-card {\n  --black-color: {% if state_attr('sensor.printer_ink', 'black') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'black') | int(0) < 30 %}orange{%else%}grey{% endif %};\n  --cyan-color: {% if state_attr('sensor.printer_ink', 'cyan') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'cyan') | int(0) < 30 %}orange{%else%}cyan{% endif %};\n  --magenta-color: {% if state_attr('sensor.printer_ink', 'magenta') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'magenta') | int(0) < 30 %}orange{%else%}magenta{% endif %};\n  --yellow-color: {% if state_attr('sensor.printer_ink', 'yellow') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'yellow') | int(0) < 30 %}orange{%else%}yellow{% endif %};\n  --photoblack-color: {% if state_attr('sensor.printer_ink', 'photoblack') | int(0) < 20 %}red{% elif state_attr('sensor.printer_ink', 'photoblack') | int(0) < 30 %}orange{%else%}grey{% endif %};\n  --holly-bed-color: {% if states('sensor.holly_is_in_bed') == 'In Bed' %}var(--state-active-color){% elif states('sensor.holly_is_in_bed') == 'Not In Bed' %}var(--primary-text-color){% else %}red{% endif %};\n  --mike-bed-color: {% if states('sensor.mike_is_in_bed') == 'In Bed' %}var(--state-active-color){% elif states('sensor.mike_is_in_bed') == 'Not In Bed' %}var(--primary-text-color){% else %}red{% endif %};\n  --security-color: {% if states('binary_sensor.security_devices') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --alarm-color: {% if states('alarm_control_panel.home_alarm') != 'disarmed' %}red{% else %}var(--primary-text-color){% endif %};\n\n  --thermostat-color: {% if state_attr('climate.thermostat', 'hvac_action') == \"heating\" %}orange{% elif state_attr('climate.thermostat', 'hvac_action') == \"cooling\" %}dodgerblue{% else %}var(--primary-text-color){% endif %};\n  --attic-temp-color: {% if states(\"sensor.attic_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.attic_temperature\") | int >= 90 %}orange{% endif %};\n  --bedroom-temp-color: {% if states(\"sensor.bedroom_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.bedroom_temperature\") | int >= 80 %}orange{% endif %};\n  --master-bath-temp-color: {% if states(\"sensor.master_bath_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.master_bath_temperature\") | int >= 80 %}orange{% endif %};\n  --office-temp-color: {% if states(\"sensor.office_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.office_temperature\") | int >= 80 %}orange{% endif %};\n  --living-room-temp-color: {% if states(\"sensor.living_room_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.living_room_temperature\") | int >= 80 %}orange{% endif %};\n  --god-damn-temp-color: {% if states(\"sensor.god_damn_temperature\") | int(69) <= 59 %}dodgerblue{% elif states(\"sensor.god_damn_temperature\") | int >= 80 %}orange{% endif %};\n  --garage-temp-color: {% if states(\"sensor.garage_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.garage_temperature\") | int >= 90 %}orange{% endif %};\n  --outside-temp-color: {% if states(\"sensor.outside_temperature\") | int(69) <= 40 %}dodgerblue{% elif states(\"sensor.outside_temperature\") | int >= 90 %}orange{% endif %};\n\n  --bedroom-humidity-color: {% if states(\"sensor.bedroom_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.bedroom_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --master-bath-humidity-color: {% if states(\"sensor.master_bath_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.master_bath_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --hall-bath-humidity-color: {% if states(\"sensor.hall_bath_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.hall_bath_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --office-humidity-color: {% if states(\"sensor.office_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.office_humidity\") | int(45) >= 50 %}orange{% endif %};\n  --outside-humidity-color: {% if states(\"sensor.outside_humidity\") | int(45) <= 30 %}orange{% elif states(\"sensor.outside_humidity\") | int(45) >= 50 %}orange{% endif %};\n\n  --upstairs-lights-color: {% if states('sensor.upstairs_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --middle-level-lights-color: {% if states('sensor.middle_level_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --downstairs-lights-color: {% if states('sensor.downstairs_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --garage-lights-color: {% if states('sensor.garage_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --outside-lights-color: {% if states('sensor.outside_lights_on') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --wyzecam-color: {% if states('binary_sensor.wyzecam_status') != 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --laundry-color: {% if states('sensor.washer_and_dryer_state') != 'Laundry Idle' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --oven-color: {% if states('binary_sensor.oven_is_on') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --recycle-color: {% if state_attr('sensor.moco_recycle_day', 'days_string') == 'Tomorrow' and is_state('input_boolean.recycle_is_out', 'off') %}var(--state-active-color){% elif state_attr('sensor.moco_recycle_day', 'days_string') == 'Today' and is_state('input_boolean.recycle_is_out', 'off') %}red{% else %}var(--primary-text-color){% endif %};\n  --cleaners-color: {% if is_state('sensor.days_until_cleaners', 'Tomorrow') %}var(--state-active-color){% elif is_state('sensor.days_until_cleaners', 'Today') %}#00FF00{% else %}var(--primary-text-color){% endif %};\n  --trash-color: {% if is_state('sensor.trash', 'Tomorrow') and is_state('input_boolean.trash_is_out', 'off') %}var(--state-active-color){% elif is_state('sensor.trash', 'Today') and is_state('input_boolean.trash_is_out', 'off') %}red{% else %}var(--primary-text-color){% endif %};\n  --unavailable-color: {% if states('sensor.unavailable_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --updates-color: {% if states('sensor.software_updates_available_count') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --zigbee-color: {% if states('sensor.ood_zigbee_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --wyze-color: {% if states('sensor.ood_wyze_entities') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --tv-list-color: {% if states('binary_sensor.new_tv_show_list_ready') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --mercury-screensaver-color: {% if states('switch.mercury_screensaver') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --venus-screensaver-color: {% if states('switch.venus_screensaver') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --plex-color: {% if states('sensor.plex_plex') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --jellyfin-color: {% if states('sensor.jellyfin_active_clients') | int(0) > 0 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --mail-color: {% if states('input_boolean.mail_delivered') == 'on' %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --fkb-color: {% if states('sensor.fully_kiosk_browser') | int(100) < 20 %}red{% elif states('sensor.fully_kiosk_browser') | int(100) < 30 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --fkb-mbr-color: {% if states('sensor.fully_kiosk_browser_mbr') | int(100) < 20 %}red{% elif states('sensor.fully_kiosk_browser_mbr') | int(100) < 30 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --mailbox-sensor-days-color: {% if states('sensor.mailbox_sensor_days_since_seen') | float(0) > 1 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --office-shelf-motion-sensor-door-days-color: {% if states('sensor.office_shelf_motion_sensor_days_since_seen') | float(0) > 1 %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n\n  --up-motion-color: {% if states('binary_sensor.upstairs_motion_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --middle-motion-color: {% if states('binary_sensor.middle_level_motion_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --down-motion-color: {% if states('binary_sensor.downstairs_motion_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --out-motion-color: {% if states('binary_sensor.outside_motion_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --up-water-color: {% if states('binary_sensor.upstairs_water_leak_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --middle-water-color: {% if states('binary_sensor.middle_level_water_leak_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --down-water-color: {% if states('binary_sensor.downstairs_water_leak_sensors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --fridges-color: {% if states('binary_sensor.fridge_and_freezer_doors') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --int-doors-windows-color: {% if states('binary_sensor.interior_doors_and_windows') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n  --ext-doors-gates-color: {% if states('binary_sensor.exterior_doors_and_gates') == \"on\" %}var(--state-active-color){% else %}var(--primary-text-color){% endif %};\n}\n"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.bedroom_temperature",
                      "name": "MBR",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.bedroom_humidity",
                      "name": "MBR",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.master_bath_temperature",
                      "name": "MBath",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.master_bath_humidity",
                      "name": "MBath",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    }
                  ]
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.attic_temperature",
                      "name": "Attic",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.office_temperature",
                      "name": "Office",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 59 %}dodgerblue{% elif states(config.entity) | int(69) >= 80 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.office_humidity",
                      "detail": 1,
                      "name": "Office",
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.hall_bath_humidity",
                      "name": "HBath",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    }
                  ]
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.living_room_temperature",
                      "name": "LR",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.living_room_humidity",
                      "name": "LR",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.god_damn_temperature",
                      "name": "Down",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int >= 90 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.god_damn_humidity",
                      "name": "Down",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 50 %}red{% endif %};\n}\n"
                      }
                    }
                  ]
                },
                {
                  "type": "horizontal-stack",
                  "cards": [
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.garage_temperature",
                      "name": "Garage",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.garage_humidity",
                      "name": "Garage",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 65 %}red{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.outside_temperature",
                      "name": "Outside",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity)|int(69) <= 40 %}dodgerblue{% elif states(config.entity) | int(69) >= 90 %}orange{% endif %};\n}\n"
                      }
                    },
                    {
                      "graph": "line",
                      "type": "sensor",
                      "entity": "sensor.outside_humidity",
                      "name": "Outside",
                      "detail": 1,
                      "card_mod": {
                        "style": ".value {\n  color: {% if states(config.entity) | int(45) <= 30 %}orange{% elif states(config.entity) | int(45) >= 65 %}red{% endif %};\n}\n"
                      }
                    }
                  ]
                },
                {
                  "type": "entities",
                  "title": " ",
                  "entities": [
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "script.home_thermostat_down",
                          "tap_action": {
                            "action": "call-service",
                            "service": "script.home_thermostat_down"
                          },
                          "name": false
                        },
                        {
                          "entity": "sensor.thermostat_temperature",
                          "layout": "icon|state",
                          "icon": "mdi:thermostat",
                          "state": "Set: {{ state_attr('climate.thermostat', 'temperature') }}°F ({{ states('climate.thermostat') | capitalize }} · {{ state_attr('climate.thermostat', 'current_temperature') }}°F)",
                          "tap_action": {
                            "action": "more-info",
                            "entity": "climate.thermostat"
                          },
                          "styles": {
                            "button": {
                              "color": "{% if state_attr('climate.thermostat', 'hvac_action') == \"heating\" %}\n  var(--state-climate-heat-color)\n{% elif state_attr('climate.thermostat', 'hvac_action') == \"cooling\" %}\n  var(--state-climate-cool-color)\n{% endif %}"
                            }
                          }
                        },
                        {
                          "entity": "script.home_thermostat_up",
                          "tap_action": {
                            "action": "call-service",
                            "service": "script.home_thermostat_up"
                          },
                          "name": false
                        }
                      ]
                    }
                  ],
                  "show_header_toggle": false,
                  "state_color": true
                },
                {
                  "type": "weather-forecast",
                  "entity": "weather.home_2",
                  "forecast_type": "daily"
                }
              ]
            }
          ],
          "cards": [],
          "theme": "AdjustedSectionGap",
          "layout": {},
          "dense_section_placement": false
        },
        {
          "title": "Thermostat/Security",
          "icon": "mdi:shield-home",
          "badges": [],
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "tile",
                  "entity": "alarm_control_panel.home_alarm",
                  "features": [
                    {
                      "type": "alarm-modes",
                      "modes": [
                        "armed_home",
                        "armed_away",
                        "disarmed"
                      ]
                    }
                  ],
                  "grid_options": {
                    "columns": "full"
                  }
                },
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  table {\n    width: 100%;\n    border: 1px;\n  }\n  ha-icon.off {\n    color: var(--paper-item-icon-color);\n  }\n  td.off {\n    color: var(--primary-text-color);\n  }\n  ha-icon.on, td.on {\n    color: var(--state-active-color);\n  }\n</style> <h2>Water Leak Sensors</h2> <table> {% for entity in states | selectattr('attributes.device_class', 'equalto', 'moisture') | sort(attribute='entity_id') -%} <tr> <td ><ha-icon class={{ entity.state }} icon=\"{{ entity.attributes.icon if 'icon' in entity.attributes else 'mdi:water'}}\"></ha-icon></td> <td class={{ entity.state }}>{{ entity.attributes.friendly_name }}</td> <td class={{ entity.state }}>{{ \"Dry\" if entity.state == \"off\" else \"Wet\" }}</td> </tr> {% endfor -%} </table>"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "tile",
                  "entity": "climate.thermostat",
                  "features": [
                    {
                      "type": "target-temperature"
                    }
                  ],
                  "grid_options": {
                    "columns": "full"
                  }
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Temperature Sensors"
                  },
                  "filter": {
                    "include": [
                      {
                        "entity_id": "/sensor\\..*_multisensor_temperature/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      },
                      {
                        "entity_id": "sensor.master_bath_humidity",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "*battery*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "tile",
                  "entity": "cover.garage_door",
                  "features": [
                    {
                      "type": "cover-open-close"
                    }
                  ],
                  "grid_options": {
                    "columns": "full"
                  }
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "switch.siren"
                    },
                    {
                      "entity": "binary_sensor.bedroom_slider_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.front_door_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.living_room_slider_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.dining_room_slider_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.back_door_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.god_damn_slider_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.den_window_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.powder_room_window_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.shed_door_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.shed_gate_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.chimney_gate_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.mailbox_sensor",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.garage_entry_door_contact",
                      "secondary_info": "last-changed"
                    },
                    {
                      "entity": "binary_sensor.motion_sensors",
                      "secondary_info": "last-changed"
                    }
                  ],
                  "show_header_toggle": false,
                  "state_color": true
                }
              ]
            }
          ],
          "max_columns": 3
        },
        {
          "title": "Schedules",
          "icon": "mdi:calendar",
          "badges": [],
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "section"
                    },
                    {
                      "entity": "input_boolean.bedroom_motion_enabled"
                    },
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "input_boolean.christmas_tree_is_up",
                      "name": "Christmas LIghts",
                      "show_state": false,
                      "entities": [
                        {
                          "entity": "input_boolean.christmas_tree_is_up",
                          "name": "Tree is Up",
                          "toggle": true
                        },
                        {
                          "entity": "input_boolean.christmas_lights_are_out",
                          "name": "Lights are Out",
                          "toggle": true
                        }
                      ]
                    },
                    {
                      "entity": "input_boolean.gate_notifications"
                    },
                    {
                      "entity": "input_boolean.master_bath_fan_auto"
                    },
                    {
                      "entity": "input_number.master_bath_fan_on"
                    },
                    {
                      "entity": "input_number.master_bath_fan_off"
                    },
                    {
                      "entity": "input_boolean.hall_bath_fan_auto"
                    },
                    {
                      "entity": "input_number.hall_bath_fan_on"
                    },
                    {
                      "entity": "input_number.hall_bath_fan_off"
                    },
                    {
                      "entity": "input_number.office_heater_auto_off"
                    },
                    {
                      "entity": "input_number.office_heater_auto_off_temperature"
                    },
                    {
                      "entity": "input_number.ood_zigbee_seconds"
                    },
                    {
                      "entity": "input_number.ood_zigbee_bulb_seconds"
                    },
                    {
                      "entity": "input_number.ood_wyze_seconds"
                    }
                  ],
                  "title": "Configuration Settings",
                  "show_header_toggle": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "section",
                      "label": "Security"
                    },
                    {
                      "entity": "input_datetime.automatic_security_disarm"
                    },
                    {
                      "entity": "input_datetime.ignore_bedroom_slider"
                    },
                    {
                      "type": "section",
                      "label": "Lights"
                    },
                    {
                      "entity": "input_datetime.mantle_lights_on"
                    },
                    {
                      "entity": "input_datetime.mantle_lights_off"
                    },
                    {
                      "entity": "input_datetime.turn_off_sunset_lights"
                    },
                    {
                      "type": "section",
                      "label": "Notifications"
                    },
                    {
                      "entity": "input_datetime.holly_presence_notifications_on"
                    },
                    {
                      "entity": "input_datetime.holly_presence_notifications_off"
                    },
                    {
                      "entity": "input_datetime.mike_presence_notifications_on"
                    },
                    {
                      "entity": "input_datetime.mike_presence_notifications_off"
                    }
                  ],
                  "title": "Daily Schedules",
                  "show_header_toggle": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "section",
                      "label": "Trash Collection"
                    },
                    {
                      "entity": "input_select.trash_day_1"
                    },
                    {
                      "entity": "input_select.trash_day_2"
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "input_boolean.trash_is_out"
                    },
                    {
                      "entity": "input_boolean.recycle_is_out"
                    },
                    {
                      "type": "section",
                      "label": "Cleaners"
                    },
                    {
                      "entity": "input_select.cleaners_weekday"
                    },
                    {
                      "entity": "input_boolean.cleaner_week_even"
                    },
                    {
                      "type": "section",
                      "label": "Daily Schedule - Home Assistant"
                    },
                    {
                      "entity": "input_datetime.home_assistant_bedtime_tasks"
                    },
                    {
                      "entity": "input_datetime.home_assistant_nightly_tasks"
                    }
                  ],
                  "title": "Weekly Schedule",
                  "show_header_toggle": false
                }
              ]
            }
          ],
          "max_columns": 3
        },
        {
          "title": "Cameras",
          "icon": "mdi:cctv",
          "badges": [],
          "cards": [],
          "type": "sections",
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "picture-entity",
                  "entity": "camera.front_door_cam",
                  "camera_image": "camera.front_door_cam",
                  "show_state": false,
                  "show_name": false,
                  "camera_view": "live"
                },
                {
                  "type": "picture-entity",
                  "entity": "camera.backyard_cam",
                  "camera_image": "camera.backyard_cam",
                  "show_state": false,
                  "show_name": false,
                  "camera_view": "live"
                },
                {
                  "type": "picture-entity",
                  "entity": "camera.shed_cam",
                  "camera_image": "camera.shed_cam",
                  "camera_view": "live",
                  "show_name": false,
                  "show_state": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "picture-entity",
                  "entity": "camera.front_door_cam_2",
                  "camera_image": "camera.front_door_cam_2",
                  "show_state": false,
                  "show_name": false,
                  "camera_view": "live"
                },
                {
                  "type": "picture-entity",
                  "entity": "camera.chimney_cam",
                  "show_state": false,
                  "show_name": false,
                  "camera_view": "live",
                  "camera_image": "camera.chimney_cam"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "picture-entity",
                  "entity": "camera.garage_cam",
                  "camera_image": "camera.garage_cam",
                  "show_state": false,
                  "show_name": false,
                  "camera_view": "live"
                },
                {
                  "square": false,
                  "type": "grid",
                  "columns": 1,
                  "cards": [
                    {
                      "show_state": false,
                      "show_name": false,
                      "camera_view": "live",
                      "type": "picture-entity",
                      "entity": "camera.garage_door_cam",
                      "camera_image": "camera.garage_door_cam"
                    },
                    {
                      "square": false,
                      "type": "grid",
                      "cards": [
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.25,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "pan": "LEFT"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Left",
                          "icon": "mdi:arrow-left-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.25,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "pan": "RIGHT"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Right",
                          "icon": "mdi:arrow-right-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.5,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "tilt": "UP"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Up",
                          "icon": "mdi:arrow-up-bold"
                        },
                        {
                          "show_name": false,
                          "show_icon": true,
                          "type": "button",
                          "tap_action": {
                            "action": "call-service",
                            "service": "onvif.ptz",
                            "target": {
                              "entity_id": "camera.garage_door_cam"
                            },
                            "data": {
                              "distance": 0.5,
                              "speed": 0.5,
                              "move_mode": "ContinuousMove",
                              "tilt": "DOWN"
                            }
                          },
                          "entity": "camera.garage_door_cam",
                          "name": "Down",
                          "icon": "mdi:arrow-down-bold"
                        }
                      ],
                      "columns": 4
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "title": "TVs",
          "icon": "mdi:television",
          "badges": [],
          "cards": [],
          "type": "sections",
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "switch.god_damn_tv",
                      "show_state": false,
                      "state_color": true,
                      "entities": [
                        {
                          "entity": "switch.god_damn_tv",
                          "name": "TV",
                          "toggle": true
                        }
                      ]
                    },
                    {
                      "entity": "media_player.god_damn_roku"
                    },
                    {
                      "entity": "input_select.god_damn_input"
                    },
                    {
                      "entity": "input_select.god_damn_plex_show"
                    },
                    {
                      "entity": "script.tv_god_damn_roku_stop",
                      "name": "Stop Roku"
                    },
                    {
                      "entity": "script.tv_god_damn_sleep",
                      "name": "Sleep in 30 minutes"
                    }
                  ],
                  "show_header_toggle": false,
                  "title": "God Damn TV"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "custom:multiple-entity-row",
                      "entity": "switch.bedroom_tv",
                      "show_state": false,
                      "state_color": true,
                      "entities": [
                        {
                          "entity": "switch.bedroom_tv",
                          "name": "TV",
                          "toggle": true
                        }
                      ]
                    },
                    {
                      "entity": "media_player.bedroom_roku"
                    },
                    {
                      "entity": "input_select.bedroom_plex_show"
                    },
                    {
                      "entity": "script.tv_bedroom_roku_stop",
                      "name": "Stop Roku"
                    },
                    {
                      "entity": "script.tv_bedroom_sleep",
                      "name": "Sleep in 30 minutes"
                    }
                  ],
                  "show_header_toggle": false,
                  "title": "Bedroom TV"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "media_player.office_roku_tv"
                    },
                    {
                      "entity": "input_select.office_plex_show"
                    },
                    {
                      "entity": "script.tv_office_roku_stop"
                    },
                    {
                      "entity": "script.tv_office_sleep",
                      "name": "Sleep in 30 minutes"
                    }
                  ],
                  "show_header_toggle": false,
                  "title": "Office TV"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "media_player.living_room_roku_tv"
                    },
                    {
                      "entity": "input_select.living_room_plex_show"
                    },
                    {
                      "entity": "script.tv_living_room_roku_stop",
                      "name": "Stop Roku"
                    },
                    {
                      "entity": "script.tv_living_room_sleep",
                      "name": "Sleep in 30 minutes"
                    }
                  ],
                  "show_header_toggle": false,
                  "title": "Living Room TV"
                }
              ]
            }
          ]
        },
        {
          "title": "Music Player",
          "icon": "mdi:music",
          "badges": [],
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "media-control",
                  "entity": "media_player.spotify_merdely"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "media_player.spotify_merdely",
                      "attribute": "media_playlist",
                      "type": "attribute",
                      "name": "Spotify Playlist",
                      "icon": "mdi:playlist-music"
                    },
                    {
                      "entity": "media_player.spotify_merdely",
                      "attribute": "source_list",
                      "type": "attribute",
                      "name": "Speakers",
                      "icon": "mdi:speaker-multiple"
                    }
                  ],
                  "state_color": false
                },
                {
                  "type": "custom:spotify-card",
                  "limit": 10,
                  "spotify_entity": "media_player.spotify_merdely",
                  "playlist_type": "default",
                  "account": "default"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Speakers"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "media_player",
                        "entity_id": "/.*(display|speaker).*/",
                        "name": "/^[A-La-l].*/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Speakers"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "media_player",
                        "entity_id": "/.*(display|speaker).*/",
                        "name": "/^[^A-La-l].*/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            }
          ],
          "max_columns": 3
        },
        {
          "title": "Home Assistant",
          "icon": "mdi:home-assistant",
          "panel": false,
          "badges": [],
          "cards": [],
          "type": "sections",
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  table {\n    width: 100%;\n    border: 1px;\n  }\n  .topborder {\n    border-top: 2px solid white;\n  }\n  td.left {\n    text-align: left;\n  }\n  td.right {\n    text-align: right;\n  }\n  .on-icon {\n    color: var(--state-active-color);\n  }\n  .on-text {\n    color: var(--state-active-color);\n  }\n  .off-icon {\n    color: var(--paper-item-icon-color);\n  }\n  .off-text {\n    color: var(--primary-text-color);\n  }\n  .warning {\n    color: orange;\n  }\n</style> <h2>Software</h2>\n<table> <tr> <th></th> <th align=\"left\">Name</th> <th align=\"right\">Installed</th> <th align=\"right\">Available</th> </tr> {% for software in states.sensor | selectattr('entity_id', 'match', '^sensor\\..*_version_latest$') | map(attribute='entity_id') | list | sort -%} <tr><td class=\"{{'off-icon' if states(software|replace('_latest','')) == states(software) else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states(software|replace('_latest','')) == states(software) else 'download'}}' /></td> <td class=\"left {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\">{{ state_attr(software|replace('_latest',''), 'friendly_name') | replace(' Version', '') }}</td> <td class=\"right {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\">{{ states(software|replace('_latest','')) }}</td> <td class=\"right {{'off-text' if states(software|replace('_latest','')) == states(software) else 'on-text'}}\">{{ states(software) }}</td> </tr>{% endfor -%}\n<tr><td class=\"{{'off-icon' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'download'}}' /></td> <td class=\"left {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">OPNsense</td> <td class=\"right {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">{{ states('sensor.opnsense_versions') }}</td> <td class=\"right {{'off-text' if states('sensor.opnsense_versions') == state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] else 'on-text'}}\">{{ state_attr('sensor.opnsense_package_versions', 'plugins')[\"opnsense\"] }}</td></tr>\n{% for plugin in state_attr('sensor.opnsense_versions', 'plugins') -%} <tr> <td class=\"{{'off-icon' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'download'}}' /></td> <td class=\"left {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">OPN {{ plugin }}</td> <td class=\"right {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">{{ state_attr('sensor.opnsense_versions', 'plugins')[plugin] }}</td> <td class=\"right {{'off-text' if state_attr('sensor.opnsense_versions', 'plugins')[plugin] == state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] else 'on-text'}}\">{{ state_attr('sensor.opnsense_package_versions', 'plugins')[\"os-\"+plugin] }}</td> </tr>{% endfor -%}\n{% for ap in state_attr('sensor.unifi_ap_versions', 'data') | sort(attribute=\"name\") -%} <tr> <td class=\"{{'off-icon' if ap['version'] == ap['version_available'] else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if ap['version'] == ap['version_available'] else 'download'}}' /></td> <td class=\"left {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">Unifi {{ ap['name'] | replace('wap-','') | title }} AP</td> <td class=\"right {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">{{ ap['version'] }}</td> <td class=\"right {{'off-text' if ap['version'] == ap['version_available'] else 'on-text'}}\">{{ ap['version_available'] }}</td></tr> {% endfor -%} {% if state_attr('sensor.unifi_ap_versions', 'error') != False %}<tr><td class=warning><ha-icon icon='mdi:alert-circle'></ha-icon></td> <td colspan=\"3\" class=warning>Error: Could not load Unifi Data</td></tr> {% endif %} </table>"
                },
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  table {\n    width: 100%;\n  }\n  th.left, td.left {\n    text-align: left;\n  }\n  th.right, td.right {\n    text-align: right;\n  }\n  .unavailable-icon {\n    color: {{'var(--state-active-color);' if\n    states('sensor.unavailable_entities') | int(0) != 0\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .unavailable-text {\n    color: {{'var(--state-active-color);' if\n    states('sensor.unavailable_entities') | int(0) != 0 }}\n  }\n  .plex-icon {\n    color: {{'var(--state-active-color);' if\n    states('sensor.plex_plex') | int(0) != 0\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .plex-text {\n    color: {{'var(--state-active-color);' if\n    states('sensor.plex_plex') | int(0) != 0 }}\n  }\n  .jellyfin-icon {\n    color: {{'var(--state-active-color);' if\n    states('sensor.jellyfin_watching') | int(0) != 0\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .jellyfin-text {\n    color: {{'var(--state-active-color);' if\n    states('sensor.jellyfin_watching') | int(0) != 0 }}\n  }\n  .tv-list-icon {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.new_tv_show_list_ready') == \"on\"\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .tv-list-text {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.new_tv_show_list_ready') == \"on\" }}\n  }\n  .ssl-icon {\n    color: {{'var(--state-active-color);' if\n    as_timestamp(states('sensor.ssl_expiry_date'), 0) - as_timestamp(now(), 0) <= (3600 * 24 * 7 * 2)\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .ssl-text {\n    color: {{'var(--state-active-color);' if\n    as_timestamp(states('sensor.ssl_expiry_date'), 0) - as_timestamp(now(), 0) <= (3600 * 24 * 7 * 2) }}\n  }\n  .earth-icon {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.earth') == 'off'\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .earth-text {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.earth') == 'off' }}\n  }\n  .earth-www-icon {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.earth_nginx_php_working') == 'off'\n    else 'var(--paper-item-icon-color)'}}\n  }\n  .earth-www-text {\n    color: {{'var(--state-active-color);' if\n    states('binary_sensor.earth_nginx_php_working') == 'off' }}\n  }\n</style> <!-- <h2>Other Info</h2> -->\n<table> <tr><th></th> <th class=\"left\">Name</th> <th class=\"right\">Status</th></tr> <tr><td class=unavailable-icon><ha-icon icon='mdi:cloud-question'></td> <td class=\"left unavailable-text\">Unavailable Entities</td> <td class=\"right unavailable-text\">{{ states('sensor.unavailable_entities') }} unavailable entities</td></tr>\n<tr><td class=plex-icon><ha-icon icon='mdi:plex'></td> <td class=\"left plex-text\">Plex Status</td> <td class=\"right plex-text\">{{ states('sensor.plex_plex') }} Watching</td></tr>\n<tr><td class=jellyfin-icon><ha-icon icon='mdi:television-play'></td> <td class=\"left jellyfin-text\">Jellyfin Status</td> <td class=\"right jellyfin-text\">{{ states('sensor.jellyfin_watching') }} Watching</td></tr>\n<tr><td class=tv-list-icon><ha-icon icon='mdi:television'></td> <td class=\"left tv-list-text\">New TV Show List Ready</td> <td class=\"right tv-list-text\">{{ states('binary_sensor.new_tv_show_list_ready') | title }}</td></tr>\n<tr><td class=ssl-icon><ha-icon icon='mdi:shield-lock'></td> <td class=\"left ssl-text\">SSL Expiry Date</td> <td class=\"right ssl-text\">{{ states('sensor.ssl_expiry_date') }}</td></tr>\n<tr><td class=earth-icon><ha-icon icon='mdi:{{ \"server-network\" if states('binary_sensor.earth') == 'on' else \"server-network-off\" }}'></td> <td class=\"left earth-text\">Earth Host Status</td> <td class=\"right earth-text\">{{ \"Up\" if states('binary_sensor.earth') == 'on' else \"Down\" }}</td></tr>\n<tr><td class=earth-www-icon><ha-icon icon='mdi:{{ \"web-check\" if states('binary_sensor.earth_nginx_php_working') == 'on' else \"web-off\"}}'></td> <td class=\"left earth-www-text\">Earth Nginx/PHP Status</font></td> <td class=\"right earth-www-text\">{{ \"Up\" if states('binary_sensor.earth_nginx_php_working') == 'on' else \"Down\" }}</td></tr> </table>"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  table {\n    width: 100%;\n    border: 1px;\n  }\n  .topborder {\n    border-top: 2px solid white;\n  }\n  td.left {\n    text-align: left;\n  }\n  td.right {\n    text-align: right;\n  }\n  .on-icon {\n    color: var(--state-active-color);\n  }\n  .on-text {\n    color: var(--state-active-color);\n  }\n  .off-icon {\n    color: var(--paper-item-icon-color);\n  }\n  .off-text {\n    color: var(--primary-text-color);\n  }\n  .warning {\n    color: orange;\n  }\n</style> <h2>Home Assistant</h2>\n<table> <tr> <th></th> <th align=\"left\">Name</th> <th align=\"right\">Installed</th> <th align=\"right\">Available</th> </tr> {% for software in states | selectattr('entity_id', 'match', '^update\\.home_assistant_(core|operating_system|supervisor)_update$') | map(attribute='entity_id') | list -%} <tr> <td class=\"{{'off-icon' if states(software) == 'off' else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states(software) == 'off' else 'download'}}' /></td> <td class=\"left {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'title') | replace('Home Assistant', 'HA') | replace('Operating System', 'OS') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'installed_version') }}</td> <td class=\"right {{'off-test' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'latest_version') }}</td> </tr> {% endfor -%} {% for software in states | selectattr('domain', 'equalto', 'update') | rejectattr('entity_id', 'match', '^update\\.(home_assistant_(core|operating_system|supervisor)_update$|frigate_server$|wap_)') | map(attribute='entity_id') | list -%} {% if state_attr(software, 'device_class') != \"firmware\" and state_attr(software, 'title') != None %} <tr> <td class=\"{{'off-icon' if states(software) == 'off' else 'on-icon'}}\"><ha-icon icon='mdi:briefcase-{{ 'check' if states(software) == 'off' else 'download'}}' /></td> <td class=\"left {{'off-test' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'title') | replace('Advanced SSH & Web Terminal', 'Advanced SSH') | replace('UniFi Network Application', 'UniFi') | replace(' (Bitwarden)', '') | replace('Mosquitto broker', 'MQTT') | replace('Studio Code Server', 'VSCode') | replace('Signal Messenger', 'Signal') | replace('Google Drive Backup', 'Google Backup') | replace('Nginx Proxy Manager', 'Nginx Proxy') | replace('ESPHome Device Builder', 'ESPHome') | replace('Home Assistant', '') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'installed_version') }}</td> <td class=\"right {{'off-text' if states(software) == 'off' else 'on-text'}}\">{{ state_attr(software, 'latest_version') }}</td> </tr> {% endif -%} {% endfor -%} </table>"
                },
                {
                  "type": "gauge",
                  "entity": "sensor.disk_use_percent_config",
                  "min": 0,
                  "max": 100,
                  "severity": {
                    "green": 0,
                    "yellow": 85,
                    "red": 95
                  },
                  "needle": true,
                  "name": "/config",
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  }
                },
                {
                  "type": "gauge",
                  "entity": "sensor.memory_use_percent",
                  "min": 0,
                  "max": 100,
                  "severity": {
                    "green": 0,
                    "yellow": 80,
                    "red": 90
                  },
                  "needle": true,
                  "name": "Memory",
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  }
                },
                {
                  "type": "gauge",
                  "entity": "sensor.processor_use_percent",
                  "min": 0,
                  "max": 100,
                  "severity": {
                    "green": 0,
                    "yellow": 80,
                    "red": 90
                  },
                  "needle": true,
                  "name": "CPU %",
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  }
                },
                {
                  "type": "gauge",
                  "entity": "sensor.cpu_temperature",
                  "min": 0,
                  "max": 90,
                  "severity": {
                    "green": 0,
                    "yellow": 50,
                    "red": 70
                  },
                  "needle": true,
                  "name": "CPU",
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  }
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "empty-column",
                  "grid_options": {
                    "columns": 3,
                    "rows": 1
                  }
                },
                {
                  "type": "gauge",
                  "entity": "sensor.speedtest_download",
                  "min": 0,
                  "max": 1000,
                  "severity": {
                    "green": 600,
                    "yellow": 300,
                    "red": 0
                  },
                  "needle": true,
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  },
                  "name": "Download"
                },
                {
                  "type": "gauge",
                  "entity": "sensor.speedtest_upload",
                  "min": 0,
                  "max": 1000,
                  "severity": {
                    "green": 600,
                    "yellow": 300,
                    "red": 0
                  },
                  "needle": true,
                  "grid_options": {
                    "columns": 3,
                    "rows": "auto"
                  },
                  "name": "Upload"
                },
                {
                  "type": "custom:bubble-card",
                  "card_type": "empty-column",
                  "grid_options": {
                    "columns": 3,
                    "rows": 1
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  table {\n    width: 100%;\n    border: 1px;\n  }\n  ha-icon {\n    color: var(--paper-item-icon-color);\n  }\n</style> <table> {% for entity in (states | selectattr('entity_id', 'match', 'sensor.ha_count.*') | list + [states.sensor.yaml_loc]) | sort(attribute='entity_id') -%} <tr> <td><ha-icon icon=\"{{ entity.attributes.icon }}\"></ha-icon></td> <td>{{ entity.attributes.friendly_name | replace(\"HA Count \", \"\") }}</td> <td>{{ entity.state }}</td> </tr> {% endfor -%} </table>"
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "sensor.speedtest_download",
                          "icon": "mdi:speedometer",
                          "tap_action": {
                            "action": "call-service",
                            "service": "homeassistant.update_entity",
                            "target": {
                              "entity_id": [
                                "sensor.speedtest_download",
                                "sensor.speedtest_upload",
                                "sensor.speedtest_ping"
                              ]
                            },
                            "data": {}
                          },
                          "show_state": true,
                          "name": "SpeedTest",
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "entity": "button.homeassistant_reload",
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/control-panel"
                          },
                          "name": "FKB",
                          "icon": "mdi:tablet-dashboard",
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "entity": "button.homeassistant_reload",
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/mbr-panel"
                          },
                          "name": "FKBMBR",
                          "icon": "mdi:cellphone-text",
                          "hold_action": {
                            "action": "none"
                          }
                        },
                        {
                          "entity": "button.homeassistant_reload",
                          "tap_action": {
                            "action": "navigate",
                            "navigation_path": "/mobile-dashboard"
                          },
                          "name": "Mobile",
                          "icon": "mdi:cellphone",
                          "hold_action": {
                            "action": "none"
                          }
                        }
                      ]
                    }
                  ],
                  "show_header_toggle": false
                }
              ]
            }
          ],
          "path": "home-assistant",
          "theme": "AdjustedSectionGap"
        },
        {
          "title": "Utilities",
          "icon": "mdi:tools",
          "badges": [],
          "cards": [],
          "type": "sections",
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "grid",
                  "columns": 1,
                  "square": false,
                  "cards": [
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "type": "section",
                          "label": "Toggles"
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.announce_holly_presence",
                              "name": "Holly Pres. Ann."
                            },
                            {
                              "entity": "input_boolean.announce_mike_presence",
                              "name": "Mike Pres. Ann."
                            },
                            {
                              "entity": "input_boolean.cleaner_week_even",
                              "name": "Cleaners Even"
                            }
                          ]
                        },
                        {
                          "type": "section",
                          "label": "Notifications Triggered"
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.earth_triggered",
                              "name": "Earth"
                            },
                            {
                              "entity": "input_boolean.earth_nginx_php_working_triggered",
                              "name": "Earth PHP"
                            },
                            {
                              "entity": "input_boolean.nginx_proxy_manager_working_triggered",
                              "name": "NPM"
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.ood_zigbee_entities_triggered",
                              "name": "Zigbee"
                            },
                            {
                              "entity": "input_boolean.ood_wyze_entities_triggered",
                              "name": "Wyze"
                            },
                            {
                              "entity": "input_boolean.unavailable_entities_triggered",
                              "name": "Unavailable"
                            },
                            {
                              "entity": "input_boolean.software_update_available_triggered",
                              "name": "Software"
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.bitwarden_add_on_running_triggered",
                              "name": "Bitwarden"
                            },
                            {
                              "entity": "input_boolean.frigate_add_on_running_triggered",
                              "name": "Frigate"
                            },
                            {
                              "entity": "input_boolean.scrypted_add_on_running_triggered",
                              "name": "Scrypted"
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.mqtt_add_on_running_triggered",
                              "name": "MQTT"
                            },
                            {
                              "entity": "input_boolean.nginxproxymgr_add_on_running_triggered",
                              "name": "NPM"
                            },
                            {
                              "entity": "input_boolean.signal_add_on_running_triggered",
                              "name": "Signal"
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "input_boolean.ssh_add_on_running_triggered",
                              "name": "SSH"
                            },
                            {
                              "entity": "input_boolean.tasmota_devices_triggered",
                              "name": "Tasmota"
                            },
                            {
                              "entity": "input_boolean.unifi_add_on_running_triggered",
                              "name": "Unifi"
                            },
                            {
                              "entity": "input_boolean.zigbee2mqtt_add_on_running_triggered",
                              "name": "Z2M"
                            }
                          ]
                        },
                        {
                          "type": "section"
                        },
                        {
                          "entity": "input_number.ood_zigbee_seconds"
                        },
                        {
                          "entity": "input_number.ood_wyze_seconds"
                        },
                        {
                          "type": "section",
                          "label": "Scenes"
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "script.scene_good_night",
                              "name": "Good Night"
                            },
                            {
                              "entity": "script.scene_night_night",
                              "name": "Night Night"
                            },
                            {
                              "entity": "script.scene_leaving_home",
                              "name": "Leaving"
                            },
                            {
                              "entity": "script.scene_movie_time",
                              "name": "Movie"
                            }
                          ]
                        },
                        {
                          "type": "section",
                          "label": "Fix Scripts"
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "script.fix_in_bed_sensors",
                              "name": "Bed"
                            },
                            {
                              "entity": "script.0000000mwe",
                              "name": "3way",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.0000000mwe"
                              }
                            },
                            {
                              "entity": "camera.garage_cam",
                              "icon": "mdi:sync",
                              "name": "Scrypted",
                              "tap_action": {
                                "action": "hassio.addon_restart",
                                "data": {
                                  "addon": "09e60fb6_scrypted"
                                }
                              }
                            },
                            {
                              "entity": "light.dresser_bulb",
                              "icon": "mdi:sync",
                              "name": "Zigbee Bulbs",
                              "tap_action": {
                                "action": "call-service",
                                "service": "script.zigbee_bulbs_keepalive"
                              }
                            }
                          ]
                        },
                        {
                          "type": "custom:paper-buttons-row",
                          "position": "right",
                          "buttons": [
                            {
                              "entity": "sensor.opnsense_package_versions",
                              "name": "OpnSense",
                              "icon": "mdi:briefcase-download",
                              "tap_action": {
                                "action": "call-service",
                                "service": "homeassistant.update_entity",
                                "service_data": {
                                  "entity_id": [
                                    "sensor.opnsense_package_versions",
                                    "sensor.opnsense_versions"
                                  ]
                                }
                              }
                            },
                            {
                              "entity": "sensor.unifi_ap_versions",
                              "name": "Unifi",
                              "icon": "mdi:briefcase-download",
                              "tap_action": {
                                "action": "call-service",
                                "service": "homeassistant.update_entity",
                                "service_data": {
                                  "entity_id": [
                                    "sensor.unifi_ap_versions"
                                  ]
                                }
                              }
                            },
                            {
                              "entity": "switch.zigbee2mqtt_bridge_permit_join",
                              "name": "Z2M Join"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "input_boolean.holly_is_in_bed",
                          "name": "Holly",
                          "tap_action": {
                            "action": "none"
                          },
                          "hold_action": {
                            "action": "toggle"
                          }
                        },
                        {
                          "entity": "input_boolean.mike_is_in_bed",
                          "name": "Mike",
                          "tap_action": {
                            "action": "none"
                          },
                          "hold_action": {
                            "action": "toggle"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "type": "custom:paper-buttons-row",
                      "position": "right",
                      "buttons": [
                        {
                          "entity": "switch.venus_screensaver"
                        },
                        {
                          "entity": "switch.mercury_screensaver"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Cameras",
                    "show_header_toggle": true
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "switch",
                        "entity_id": "*cam*plug",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "switch.tarvos_plug"
                    },
                    {
                      "entity": "light.middle_garage_light",
                      "name": "Garage Door Camera",
                      "icon": "mdi:cctv"
                    }
                  ],
                  "title": "Other Plugs",
                  "show_header_toggle": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Refresh Entities (click)"
                  },
                  "filter": {
                    "include": [
                      {
                        "entity_id": "sensor.unavailable_entities",
                        "options": {
                          "style": "* {\n  {% if states(\"this.entity_id\") != \"0\" %}\n  color: var(--state-active-color);\n  {% endif %}\n}\n",
                          "tap_action": {
                            "action": "call-service",
                            "service": "homeassistant.update_entity",
                            "service_data": {},
                            "target": {
                              "entity_id": "this.entity_id"
                            }
                          }
                        }
                      },
                      {
                        "entity_id": "sensor.ood_zigbee_entities",
                        "options": {
                          "style": "* {\n  {% if states(\"this.entity_id\") != \"0\" %}\n  color: var(--state-active-color);\n  {% endif %}\n}\n",
                          "tap_action": {
                            "action": "call-service",
                            "service": "homeassistant.update_entity",
                            "service_data": {},
                            "target": {
                              "entity_id": "this.entity_id"
                            }
                          }
                        }
                      },
                      {
                        "entity_id": "sensor.ood_wyze_entities",
                        "options": {
                          "style": "* {\n  {% if states(\"this.entity_id\") != \"0\" %}\n  color: var(--state-active-color);\n  {% endif %}\n}\n",
                          "tap_action": {
                            "action": "call-service",
                            "service": "homeassistant.update_entity",
                            "service_data": {},
                            "target": {
                              "entity_id": "this.entity_id"
                            }
                          }
                        }
                      },
                      {
                        "entity_id": "sensor.moco_recycle_day",
                        "options": {
                          "style": "* {\n  {% if state_attr(\"this.entity_id\", \"days_string\") == \"Tomorrow\" and is_state('input_boolean.recycle_is_out', 'off') %}\n  color: var(--state-active-color);\n  {% elif state_attr(\"this.entity_id\", \"days_string\") == \"Today\" and is_state('input_boolean.recycle_is_out', 'off') %}\n  color: red\n  {% else %}\n  color: var(--primary-text-color)\n  {% endif %}\n}\n",
                          "tap_action": {
                            "action": "call-service",
                            "service": "homeassistant.update_entity",
                            "service_data": {},
                            "target": {
                              "entity_id": "this.entity_id"
                            }
                          },
                          "sort": "name"
                        }
                      }
                    ],
                    "exclude": []
                  },
                  "sort": {
                    "method": "none"
                  }
                },
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "sensor.unavailable_entities"
                    },
                    {
                      "type": "attribute",
                      "entity": "sensor.unavailable_entities",
                      "attribute": "entity_list",
                      "name": " ",
                      "icon": " "
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "sensor.ood_zigbee_entities"
                    },
                    {
                      "type": "attribute",
                      "entity": "sensor.ood_zigbee_entities",
                      "attribute": "entity_list",
                      "name": " ",
                      "icon": " "
                    },
                    {
                      "type": "section"
                    },
                    {
                      "entity": "sensor.ood_wyze_entities"
                    },
                    {
                      "type": "attribute",
                      "entity": "sensor.ood_wyze_entities",
                      "attribute": "entity_list",
                      "name": " ",
                      "icon": " "
                    }
                  ]
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Outdoor Plug/Strip",
                    "show_header_toggle": true
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "switch",
                        "entity_id": "*outdoor*",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            }
          ],
          "path": "utilities"
        },
        {
          "title": "Bulbs",
          "icon": "mdi:lightbulb",
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "light.white_switch"
                    },
                    {
                      "entity": "light.white_bulb"
                    },
                    {
                      "entity": "light.front_porch_switch"
                    },
                    {
                      "entity": "light.front_porch_bulb"
                    },
                    {
                      "entity": "light.dresser_switch"
                    },
                    {
                      "entity": "light.dresser_bulb"
                    },
                    {
                      "entity": "light.god_damn_switch"
                    },
                    {
                      "entity": "light.god_damn_bulb"
                    },
                    {
                      "entity": "light.holly_nightstand_bulb"
                    }
                  ],
                  "title": "Other Plugs",
                  "show_header_toggle": false
                }
              ]
            }
          ],
          "max_columns": 4,
          "path": "bulbs"
        },
        {
          "title": "3D Printing",
          "icon": "mdi:printer-3d",
          "badges": [],
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "grid",
                  "columns": 1,
                  "cards": [
                    {
                      "type": "entities",
                      "entities": [
                        {
                          "entity": "switch.ender3_plug"
                        },
                        {
                          "entity": "switch.3dprinter_usb_hub"
                        },
                        {
                          "entity": "switch.octoprint_light_plug"
                        },
                        {
                          "entity": "switch.octoprint_camera"
                        },
                        {
                          "entity": "script.restart_octoprint"
                        },
                        {
                          "entity": "binary_sensor.octoprint_printing"
                        },
                        {
                          "entity": "binary_sensor.octoprint_printing_error"
                        },
                        {
                          "entity": "sensor.octoprint_current_state"
                        },
                        {
                          "entity": "sensor.octoprint_actual_bed_temp"
                        },
                        {
                          "entity": "sensor.octoprint_job_percentage"
                        },
                        {
                          "entity": "sensor.octoprint_time_remaining"
                        },
                        {
                          "entity": "sensor.octoprint_time_elapsed"
                        }
                      ]
                    }
                  ],
                  "square": false
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "grid",
                  "columns": 1,
                  "cards": [
                    {
                      "type": "picture-entity",
                      "entity": "camera.octoprint",
                      "camera_view": "live"
                    }
                  ],
                  "square": false
                }
              ]
            }
          ]
        },
        {
          "title": "Batteries",
          "icon": "mdi:battery",
          "badges": [],
          "cards": [],
          "type": "sections",
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "A-G Other Sensors"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "sensor",
                        "entity_id": "*battery*",
                        "name": "[^H-Zh-z]*",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      },
                      {
                        "domain": "sensor",
                        "entity_id": "*fkb*_control_panel*",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "sensor.low_battery"
                      },
                      {
                        "entity_id": ".*(door|gate|slider)_battery(_level)?(_[0-9])?"
                      },
                      {
                        "entity_id": ".*battery_(health|power|state|temperature)(_[0-9])?"
                      },
                      {
                        "entity_id": "*pixel*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "state",
                    "numeric": true
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "H-Z Other Sensors"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "sensor",
                        "entity_id": "*battery*",
                        "name": "[H-Zh-z]*",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "sensor.low_battery"
                      },
                      {
                        "entity_id": ".*(door|gate|slider)_battery(_level)?(_[0-9])?"
                      },
                      {
                        "entity_id": ".*battery_(health|power|state|temperature)(_[0-9])?"
                      },
                      {
                        "entity_id": "*pixel*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "state",
                    "numeric": true
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Phones"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "sensor",
                        "options": {
                          "secondary_info": "last-changed"
                        },
                        "entity_id": "sensor.*pixel*battery*"
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "*_state*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Doors"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "sensor",
                        "options": {
                          "secondary_info": "last-changed"
                        },
                        "entity_id": ".*(door|gate)_battery(_[0-9])?"
                      }
                    ],
                    "exclude": [
                      {
                        "name": "/(Back) Door/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "state",
                    "numeric": true
                  }
                },
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Sliders"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "sensor",
                        "entity_id": ".*(back_door|slider)_battery(_[0-9])?",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "method": "name"
                  },
                  "sort": {
                    "method": "state",
                    "numeric": true
                  }
                }
              ]
            }
          ],
          "path": "batteries"
        },
        {
          "title": "Switches",
          "icon": "mdi:power-plug",
          "badges": [],
          "cards": [],
          "type": "sections",
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "A-G Plugs"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "switch",
                        "entity_id": "*plug*",
                        "name": "/^[A-Ga-g].*/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "*auto_off*"
                      },
                      {
                        "entity_id": "*led_disabled_night*"
                      },
                      {
                        "entity_id": "*power_outage_memory*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "H-N Plugs"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "switch",
                        "entity_id": "*plug*",
                        "name": "/^[H-Nh-n].*/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      },
                      {
                        "domain": "switch",
                        "entity_id": "/^switch.outdoor_strip([0-9]+)?_p[0-9]+$/",
                        "name": "/^[H-Nh-n].*/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "*auto_off*"
                      },
                      {
                        "entity_id": "*led_disabled_night*"
                      },
                      {
                        "entity_id": "*power_outage_memory*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "O-Z Plugs"
                  },
                  "filter": {
                    "include": [
                      {
                        "domain": "switch",
                        "entity_id": "*plug*",
                        "name": "/^[O-Zo-z].*/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      },
                      {
                        "domain": "switch",
                        "entity_id": "/^switch.outdoor_strip([0-9]+)?_p[0-9]+$/",
                        "name": "/^[O-Zo-z].*/",
                        "options": {
                          "secondary_info": "last-changed"
                        }
                      }
                    ],
                    "exclude": [
                      {
                        "entity_id": "*auto_off*"
                      },
                      {
                        "entity_id": "*led_disabled_night*"
                      },
                      {
                        "entity_id": "*power_outage_memory*"
                      }
                    ]
                  },
                  "sort": {
                    "method": "name"
                  }
                }
              ]
            }
          ],
          "max_columns": 3,
          "path": "switches"
        },
        {
          "title": "Zigbee",
          "icon": "mdi:zigbee",
          "type": "sections",
          "badges": [],
          "cards": [],
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  .error {\n    color: red;\n  }\n  .warn {\n    color: var(--state-active-color);\n  }\n</style> Count: {{ state_attr('sensor.zigbee_entities', 'count') }} ; Sensor Updated: {{ states('sensor.zigbee_entities') }}; Threshold: {{ states(\"input_number.ood_zigbee_seconds\")|int(0) }} <ol> {% set ns = namespace(count = 0) %} {% for entity in state_attr('sensor.zigbee_entities', 'entity_list') | sort(attribute='timediff',reverse=true) -%} {% set ns.count = ns.count + 1 -%} {% if ns.count <= state_attr('sensor.zigbee_entities', 'count') | int(0) / 2 %}\n<li {% if (entity['timediff'] >= states(\"input_number.ood_zigbee_seconds\")|int(0) and \"bulb\" not in entity['entity_id']) or (entity['timediff'] >= (states(\"input_number.ood_zigbee_bulb_seconds\")|int(0)) and \"bulb\" in entity['entity_id']) %} class=\"error\"{% elif (entity['timediff'] >= (states(\"input_number.ood_zigbee_seconds\")|int(0) - 2000) and \"bulb\" not in entity['entity_id']) or (entity['timediff'] >= (states(\"input_number.ood_zigbee_bulb_seconds\")|int(0) - 21600) and \"bulb\" in entity['entity_id']) %} class=\"warn\"{% endif %}>{{ entity['friendly_name'] }} - {{ entity['timediff'] }}</li> {% endif %} {% endfor -%} </ol>\n\n{% set ns.count = ns.count + 1 -%} {% if ns.count <= state_attr('sensor.zigbee_entities', 'count') | int(0) / 2 %} {% endif %}",
                  "title": "Zigbee Devices"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  .error {\n    color: red;\n  }\n  .warn {\n    color: var(--state-active-color);\n  }\n</style> Count: {{ state_attr('sensor.zigbee_entities', 'count') }} ; Sensor Updated: {{ states('sensor.zigbee_entities') }}; Threshold: {{ states(\"input_number.ood_zigbee_seconds\")|int(0) }} <ol start=  {{ (state_attr('sensor.zigbee_entities', 'count') | int(0) / 2)|int + 1}}> {% set ns = namespace(count = 0) %}\n{% for entity in state_attr('sensor.zigbee_entities', 'entity_list') | sort(attribute='timediff',reverse=true) -%} {% set ns.count = ns.count + 1 -%} {% if ns.count > state_attr('sensor.zigbee_entities', 'count') | int(0) / 2 %}\n<li {% if (entity['timediff'] >= states(\"input_number.ood_zigbee_seconds\")|int(0) and \"bulb\" not in entity['entity_id']) or (entity['timediff'] >= (states(\"input_number.ood_zigbee_bulb_seconds\")|int(0)) and \"bulb\" in entity['entity_id']) %} class=\"error\"{% elif (entity['timediff'] >= (states(\"input_number.ood_zigbee_seconds\")|int(0) - 2000) and \"bulb\" not in entity['entity_id']) or (entity['timediff'] >= (states(\"input_number.ood_zigbee_bulb_seconds\")|int(0) - 21600) and \"bulb\" in entity['entity_id']) %} class=\"warn\"{% endif %}>{{ entity['friendly_name'] }} - {{ entity['timediff'] }}</li> {% endif %} {% endfor -%} </ol>\n\n{% set ns.count = ns.count + 1 -%} {% if ns.count <= state_attr('sensor.zigbee_entities', 'count') | int(0) / 2 %} {% endif %}",
                  "title": "Zigbee Devices"
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "entities",
                  "entities": [
                    {
                      "entity": "input_select.zigbee_entities_sort"
                    },
                    {
                      "entity": "input_select.wyze_entities_sort"
                    }
                  ]
                },
                {
                  "type": "markdown",
                  "content": "Count: {{ states('sensor.ood_zigbee_entities') }}; Threshold: {{ states('input_number.ood_zigbee_seconds') | int(0) }} seconds\nSensor Updated: {{ state_attr('sensor.ood_zigbee_entities', 'timestamp') }}\n\nList:\n{{ state_attr('sensor.ood_zigbee_entities', 'entity_list') }}\n",
                  "title": "Out of Date Zigbee Devices"
                },
                {
                  "type": "markdown",
                  "content": "Count: {{ states('sensor.ood_wyze_entities') }}; Threshold: {{ states('input_number.ood_wyze_seconds') | int(0) }} seconds\nSensor Updated: {{ state_attr('sensor.ood_wyze_entities', 'timestamp') }}\n\nList:\n{{ state_attr('sensor.ood_wyze_entities', 'entity_list') }}\n",
                  "title": "Out of Date Wyze Devices"
                },
                {
                  "type": "custom:html-template-card",
                  "ignore_line_breaks": true,
                  "content": "<style>\n  .error {\n    color: red;\n  }\n  .warn {\n    color: var(--state-active-color);\n  }\n</style> Count: {{ state_attr('sensor.wyze_entities', 'count') }} ; Sensor Updated: {{ states('sensor.wyze_entities') }}; Threshold: {{ states(\"input_number.ood_wyze_seconds\")|int(0) }} <ol>  {% for entity in state_attr('sensor.wyze_entities', 'entity_list')  | sort(attribute=iif(states('input_select.wyze_entities_sort')=='Friendly Name','friendly_name','timediff'),reverse=iif(states('input_select.wyze_entities_sort')=='Friendly Name',false,true))-%}\n<li {% if entity['timediff'] >= states(\"input_number.ood_wyze_seconds\")|int(0) %} class=\"error\"{% elif entity['timediff'] >= (states(\"input_number.ood_wyze_seconds\")|int(0) * 0.50) %} class=\"warn\"{% endif %}>{{ entity['friendly_name'] }} - {{ entity['timediff'] }}</li> {% endfor -%} </ol>",
                  "title": "All Wyze Devices"
                }
              ]
            }
          ],
          "path": "zigbee"
        },
        {
          "icon": "mdi:help-rhombus",
          "title": "Unavailable Entities",
          "type": "sections",
          "badges": [],
          "cards": [],
          "max_columns": 3,
          "sections": [
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Unavailable/Unknown Sensors"
                  },
                  "filter": {
                    "include": [
                      {
                        "state": "/(unavailable|unknown)/",
                        "domain": "/(binary_)?sensor/"
                      }
                    ],
                    "exclude": [
                      {
                        "domain": "media_player"
                      },
                      {
                        "entity_id": "/^((binary_sensor|light|sensor|switch).(.*_roku_(tv_)?active_app(_id)?|[0-9a-f]{8}_[0-9a-f]{8}|(a9be1c3a971c8a94|kukui)_battery_health(_[0-9]+)?|ir_receiver_status|lumi_lumi_plug_maus[0-9]+|octoprint_.*|outdoor_(plug|strip).*|withings_(?!in_bed).*)|switch.outside_christmas_lights|device_tracker.kukui(_[0-9]+)?)$/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "friendly_name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Unavailable/Unknown Entities"
                  },
                  "filter": {
                    "include": [
                      {
                        "state": "/(unavailable|unknown)/",
                        "name": "/^[A-Ga-g]/"
                      }
                    ],
                    "exclude": [
                      {
                        "domain": "media_player"
                      },
                      {
                        "domain": "/(binary_)?sensor/"
                      },
                      {
                        "entity_id": "/^((binary_sensor|light|sensor|switch).([0-9a-f]{8}_[0-9a-f]{8}|(a9be1c3a971c8a94|kukui)_battery_health(_[0-9]+)?|ir_receiver_status|lumi_lumi_plug_maus[0-9]+|octoprint_.*|outdoor_(plug|strip).*|withings_(?!in_bed).*)|switch.outside_christmas_lights|device_tracker.kukui(_[0-9]+)?)$/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "friendly_name"
                  }
                }
              ]
            },
            {
              "type": "grid",
              "cards": [
                {
                  "type": "custom:auto-entities",
                  "card": {
                    "type": "entities",
                    "title": "Unavailable/Unknown Entities"
                  },
                  "filter": {
                    "include": [
                      {
                        "state": "/(unavailable|unknown)/",
                        "name": "/^[H-Zh-z]/"
                      }
                    ],
                    "exclude": [
                      {
                        "domain": "media_player"
                      },
                      {
                        "domain": "/(binary_)?sensor/"
                      },
                      {
                        "entity_id": "/^((binary_sensor|light|sensor|switch).([0-9a-f]{8}_[0-9a-f]{8}|(a9be1c3a971c8a94|kukui)_battery_health(_[0-9]+)?|ir_receiver_status|lumi_lumi_plug_maus[0-9]+|octoprint_.*|outdoor_(plug|strip).*|withings_(?!in_bed).*)|switch.outside_christmas_lights|device_tracker.kukui(_[0-9]+)?)$/"
                      }
                    ]
                  },
                  "sort": {
                    "method": "friendly_name"
                  }
                }
              ]
            }
          ],
          "path": "unavailable-entities"
        },
        {
          "type": "sections",
          "max_columns": 2,
          "title": "Test",
          "path": "test",
          "sections": [
            {
              "type": "grid",
              "cards": []
            },
            {
              "type": "grid",
              "cards": []
            }
          ],
          "cards": [],
          "icon": "mdi:test-tube"
        }
      ]
    }
  }
}